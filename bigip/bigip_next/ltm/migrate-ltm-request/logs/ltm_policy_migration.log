tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': [['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": [["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': [['http-host', {'name': 'values', 'block': ['1', '2', '3']}]]}, {'index': 1, 'block': [['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": [["http-host", {"name": "values", "block": ["1", "2", "3"]}]]}, {"index": 1, "block": [["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a {
    controls { forwarding }
    requires { http }
    rules {
        rule1 {
            actions {
                0 {
                    forward
                    select
                    pool /Common/ltm-pool-staging
                }
            }
            conditions {
                0 {
                    http-header
                    name x-head
                    values { header1 header2 }
                }
                1 {
                    http-uri
                    query-parameter
                    name env
                    values { env-staging-1 env-staging-2 }
                }
            }
            description ddd
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a', 'controls': ['forwarding'], 'requires': ['http'], 'rules': [{'rule_name': 'rule1', 'actions': [{'index': 0, 'block': ['forward', 'select', 'pool', '/Common/ltm-pool-staging']}], 'conditions': [{'index': 0, 'block': [['http-header', 'name', 'x-head', {'name': 'values', 'block': ['header1', 'header2']}]]}, {'index': 1, 'block': [['http-uri', 'query-parameter', 'name', 'env', {'name': 'values', 'block': ['env-staging-1', 'env-staging-2']}]]}], 'description': ['ddd']}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a", "controls": ["forwarding"], "requires": ["http"], "rules": [{"rule_name": "rule1", "actions": [{"index": 0, "block": ["forward", "select", "pool", "/Common/ltm-pool-staging"]}], "conditions": [{"index": 0, "block": [["http-header", "name", "x-head", {"name": "values", "block": ["header1", "header2"]}]]}, {"index": 1, "block": [["http-uri", "query-parameter", "name", "env", {"name": "values", "block": ["env-staging-1", "env-staging-2"]}]]}], "description": ["ddd"]}], "strategy": "/Common/first-match"}}
*****************
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': [['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": [["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
LtmPolicyConverter() takes no arguments
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': [['http-host', {'name': 'values', 'block': ['1', '2', '3']}]]}, {'index': 1, 'block': [['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": [["http-host", {"name": "values", "block": ["1", "2", "3"]}]]}, {"index": 1, "block": [["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
LtmPolicyConverter() takes no arguments
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': [['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": [["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'httpHeaderActionConverter' is not defined
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': [['http-host', {'name': 'values', 'block': ['1', '2', '3']}]]}, {'index': 1, 'block': [['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": [["http-host", {"name": "values", "block": ["1", "2", "3"]}]]}, {"index": 1, "block": [["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'httpHeaderActionConverter' is not defined
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': [['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": [["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'httpHeaderActionConverter' is not defined
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': [['http-host', {'name': 'values', 'block': ['1', '2', '3']}]]}, {'index': 1, 'block': [['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": [["http-host", {"name": "values", "block": ["1", "2", "3"]}]]}, {"index": 1, "block": [["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'httpHeaderActionConverter' is not defined
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': [['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": [["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'httpHeaderActionConverter' is not defined
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': [['http-host', {'name': 'values', 'block': ['1', '2', '3']}]]}, {'index': 1, 'block': [['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": [["http-host", {"name": "values", "block": ["1", "2", "3"]}]]}, {"index": 1, "block": [["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'httpHeaderActionConverter' is not defined
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': [['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": [["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'httpHeaderActionConverter' is not defined
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': [['http-host', {'name': 'values', 'block': ['1', '2', '3']}]]}, {'index': 1, 'block': [['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": [["http-host", {"name": "values", "block": ["1", "2", "3"]}]]}, {"index": 1, "block": [["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'httpHeaderActionConverter' is not defined
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': [['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": [["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'httpHeaderActionConverter' is not defined
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': [['http-host', {'name': 'values', 'block': ['1', '2', '3']}]]}, {'index': 1, 'block': [['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": [["http-host", {"name": "values", "block": ["1", "2", "3"]}]]}, {"index": 1, "block": [["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'httpHeaderActionConverter' is not defined
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': [['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": [["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'httpHeaderActionConverter' is not defined
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': [['http-host', {'name': 'values', 'block': ['1', '2', '3']}]]}, {'index': 1, 'block': [['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": [["http-host", {"name": "values", "block": ["1", "2", "3"]}]]}, {"index": 1, "block": [["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'httpHeaderActionConverter' is not defined
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': [['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": [["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'httpHeaderActionConverter' is not defined
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': [['http-host', {'name': 'values', 'block': ['1', '2', '3']}]]}, {'index': 1, 'block': [['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": [["http-host", {"name": "values", "block": ["1", "2", "3"]}]]}, {"index": 1, "block": [["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'httpHeaderActionConverter' is not defined
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': [['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": [["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'httpHostContitionConverter' is not defined
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': [['http-host', {'name': 'values', 'block': ['1', '2', '3']}]]}, {'index': 1, 'block': [['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": [["http-host", {"name": "values", "block": ["1", "2", "3"]}]]}, {"index": 1, "block": [["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'httpHostContitionConverter' is not defined
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': [['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": [["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'ConverterContext' is not defined
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': [['http-host', {'name': 'values', 'block': ['1', '2', '3']}]]}, {'index': 1, 'block': [['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": [["http-host", {"name": "values", "block": ["1", "2", "3"]}]]}, {"index": 1, "block": [["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'ConverterContext' is not defined
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': [['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": [["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'RuleConverterContext' is not defined
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': [['http-host', {'name': 'values', 'block': ['1', '2', '3']}]]}, {'index': 1, 'block': [['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": [["http-host", {"name": "values", "block": ["1", "2", "3"]}]]}, {"index": 1, "block": [["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'RuleConverterContext' is not defined
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': [['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": [["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'IRule' is not defined
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': [['http-host', {'name': 'values', 'block': ['1', '2', '3']}]]}, {'index': 1, 'block': [['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": [["http-host", {"name": "values", "block": ["1", "2", "3"]}]]}, {"index": 1, "block": [["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'IRule' is not defined
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': [['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": [["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'WhwnClause' is not defined
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': [['http-host', {'name': 'values', 'block': ['1', '2', '3']}]]}, {'index': 1, 'block': [['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": [["http-host", {"name": "values", "block": ["1", "2", "3"]}]]}, {"index": 1, "block": [["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'WhwnClause' is not defined
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': [['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": [["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
unhashable type: 'list'
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': [['http-host', {'name': 'values', 'block': ['1', '2', '3']}]]}, {'index': 1, 'block': [['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": [["http-host", {"name": "values", "block": ["1", "2", "3"]}]]}, {"index": 1, "block": [["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
unhashable type: 'list'
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': [['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": [["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
unhashable type: 'list'
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': [['http-host', {'name': 'values', 'block': ['1', '2', '3']}]]}, {'index': 1, 'block': [['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": [["http-host", {"name": "values", "block": ["1", "2", "3"]}]]}, {"index": 1, "block": [["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
unhashable type: 'list'
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': [['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": [["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
unhashable type: 'list'
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': [['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": [["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
unhashable type: 'list'
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': [['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": [["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
unhashable type: 'list'
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_2smv41ey/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_2smv41ey/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 33, in convert
    condition_converter = policy_converter_factory.conditionConverterFactory.get(first_clause, None)
TypeError: unhashable type: 'list'

tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': [['http-host', {'name': 'values', 'block': ['1', '2', '3']}]]}, {'index': 1, 'block': [['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": [["http-host", {"name": "values", "block": ["1", "2", "3"]}]]}, {"index": 1, "block": [["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
unhashable type: 'list'
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_2smv41ey/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_2smv41ey/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 33, in convert
    condition_converter = policy_converter_factory.conditionConverterFactory.get(first_clause, None)
TypeError: unhashable type: 'list'

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': [['http-uri'], ['path'], ['contains'], [{'name': 'values', 'block': ['/headers']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": [["http-uri"], ["path"], ["contains"], [{"name": "values", "block": ["/headers"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
unhashable type: 'list'
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_99bebm78/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_99bebm78/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 33, in convert
    condition_converter = policy_converter_factory.conditionConverterFactory.get(first_clause, None)
TypeError: unhashable type: 'list'

tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': [['http-host'], [{'name': 'values', 'block': ['1', '2', '3']}]]}, {'index': 1, 'block': [['http-header'], ['response'], ['name'], ['X-HEADER1'], [{'name': 'values', 'block': ['STAGING']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": [["http-host"], [{"name": "values", "block": ["1", "2", "3"]}]]}, {"index": 1, "block": [["http-header"], ["response"], ["name"], ["X-HEADER1"], [{"name": "values", "block": ["STAGING"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
unhashable type: 'list'
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_99bebm78/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_99bebm78/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 33, in convert
    condition_converter = policy_converter_factory.conditionConverterFactory.get(first_clause, None)
TypeError: unhashable type: 'list'

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': [['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": [["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
unhashable type: 'list'
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_vl_mtaxr/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_vl_mtaxr/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 33, in convert
    condition_converter = policy_converter_factory.conditionConverterFactory.get(first_clause, None)
TypeError: unhashable type: 'list'

tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': [['http-host', {'name': 'values', 'block': ['1', '2', '3']}]]}, {'index': 1, 'block': [['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": [["http-host", {"name": "values", "block": ["1", "2", "3"]}]]}, {"index": 1, "block": [["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
unhashable type: 'list'
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_vl_mtaxr/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_vl_mtaxr/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 33, in convert
    condition_converter = policy_converter_factory.conditionConverterFactory.get(first_clause, None)
TypeError: unhashable type: 'list'

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri']}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri"]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
list index out of range
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_x1duvmdo/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_x1duvmdo/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 37, in convert
    condition_converter(context, condition)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_x1duvmdo/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/condition_converter.py", line 58, in httpUriContitionConverter
    location = block[1]
IndexError: list index out of range

tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host']}, {'index': 1, 'block': ['http-header']}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host"]}, {"index": 1, "block": ["http-header"]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
list index out of range
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_x1duvmdo/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_x1duvmdo/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 37, in convert
    condition_converter(context, condition)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_x1duvmdo/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/condition_converter.py", line 5, in httpHostContitionConverter
    values_block = condition["block"][1]
IndexError: list index out of range

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'IfClause' is not defined
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_tst7supg/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_tst7supg/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 37, in convert
    condition_converter(context, condition)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_tst7supg/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/condition_converter.py", line 74, in httpUriContitionConverter
    context.appendRequestIf(IfClause(if_condition))
NameError: name 'IfClause' is not defined

tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
free variable 'random' referenced before assignment in enclosing scope
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_tst7supg/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_tst7supg/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 37, in convert
    condition_converter(context, condition)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_tst7supg/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/condition_converter.py", line 14, in httpHostContitionConverter
    rnd_str = rnd_string(3)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_tst7supg/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/rnd_string.py", line 5, in rnd_string
    random = ''.join([random.choice(string.ascii_letters + string.digits) for n in range(length)])
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_tst7supg/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/rnd_string.py", line 5, in <listcomp>
    random = ''.join([random.choice(string.ascii_letters + string.digits) for n in range(length)])
NameError: free variable 'random' referenced before assignment in enclosing scope

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'IfClause' is not defined
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_guiijcu3/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_guiijcu3/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 37, in convert
    condition_converter(context, condition)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_guiijcu3/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/condition_converter.py", line 75, in httpUriContitionConverter
    context.appendRequestIf(IfClause(if_condition))
NameError: name 'IfClause' is not defined

tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
free variable 'random' referenced before assignment in enclosing scope
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_guiijcu3/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_guiijcu3/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 37, in convert
    condition_converter(context, condition)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_guiijcu3/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/condition_converter.py", line 15, in httpHostContitionConverter
    rnd_str = rnd_string(3)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_guiijcu3/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/rnd_string.py", line 5, in rnd_string
    random = ''.join([random.choice(string.ascii_letters + string.digits) for n in range(length)])
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_guiijcu3/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/rnd_string.py", line 5, in <listcomp>
    random = ''.join([random.choice(string.ascii_letters + string.digits) for n in range(length)])
NameError: free variable 'random' referenced before assignment in enclosing scope

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
RuleConverterContext.appendRequestIf() takes 1 positional argument but 2 were given
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_buvm7gv8/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_buvm7gv8/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 37, in convert
    condition_converter(context, condition)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_buvm7gv8/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/condition_converter.py", line 76, in httpUriContitionConverter
    context.appendRequestIf(IfClause(if_condition))
TypeError: RuleConverterContext.appendRequestIf() takes 1 positional argument but 2 were given

tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
free variable 'random' referenced before assignment in enclosing scope
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_buvm7gv8/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_buvm7gv8/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 37, in convert
    condition_converter(context, condition)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_buvm7gv8/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/condition_converter.py", line 16, in httpHostContitionConverter
    rnd_str = rnd_string(3)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_buvm7gv8/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/rnd_string.py", line 5, in rnd_string
    random = ''.join([random.choice(string.ascii_letters + string.digits) for n in range(length)])
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_buvm7gv8/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/rnd_string.py", line 5, in <listcomp>
    random = ''.join([random.choice(string.ascii_letters + string.digits) for n in range(length)])
NameError: free variable 'random' referenced before assignment in enclosing scope

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f383d71bdf0>]
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
free variable 'random' referenced before assignment in enclosing scope
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_4fwvdm3w/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_4fwvdm3w/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 37, in convert
    condition_converter(context, condition)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_4fwvdm3w/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/condition_converter.py", line 16, in httpHostContitionConverter
    rnd_str = rnd_string(3)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_4fwvdm3w/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/rnd_string.py", line 5, in rnd_string
    random = ''.join([random.choice(string.ascii_letters + string.digits) for n in range(length)])
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_4fwvdm3w/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/rnd_string.py", line 5, in <listcomp>
    random = ''.join([random.choice(string.ascii_letters + string.digits) for n in range(length)])
NameError: free variable 'random' referenced before assignment in enclosing scope

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f965b561ea0>]
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
'str' object has no attribute 'get'
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_37vf33sk/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_37vf33sk/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 37, in convert
    condition_converter(context, condition)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_37vf33sk/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/condition_converter.py", line 36, in httpHeaderContidionConverter
    if item.get("name", "") == "values":
AttributeError: 'str' object has no attribute 'get'

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f664f34d180>]
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
addIfClause() missing 1 required positional argument: 'currentIfClause'
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_f8hrjnzt/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_f8hrjnzt/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 37, in convert
    condition_converter(context, condition)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_f8hrjnzt/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/condition_converter.py", line 54, in httpHeaderContidionConverter
    context.appendResponseIf(if_obj)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_f8hrjnzt/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/converter_context.py", line 31, in appendResponseIf
    addIfClause(self.irule.response.ifs[0])
TypeError: addIfClause() missing 1 required positional argument: 'currentIfClause'

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f32aae248e0>]
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f32aae24fd0>]
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a {
    controls { forwarding }
    requires { http }
    rules {
        rule1 {
            actions {
                0 {
                    forward
                    select
                    pool /Common/ltm-pool-staging
                }
            }
            conditions {
                0 {
                    http-header
                    name x-head
                    values { header1 header2 }
                }
                1 {
                    http-uri
                    query-parameter
                    name env
                    values { env-staging-1 env-staging-2 }
                }
            }
            description ddd
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a', 'controls': ['forwarding'], 'requires': ['http'], 'rules': [{'rule_name': 'rule1', 'actions': [{'index': 0, 'block': ['forward', 'select', 'pool', '/Common/ltm-pool-staging']}], 'conditions': [{'index': 0, 'block': ['http-header', 'name', 'x-head', {'name': 'values', 'block': ['header1', 'header2']}]}, {'index': 1, 'block': ['http-uri', 'query-parameter', 'name', 'env', {'name': 'values', 'block': ['env-staging-1', 'env-staging-2']}]}], 'description': ['ddd']}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a", "controls": ["forwarding"], "requires": ["http"], "rules": [{"rule_name": "rule1", "actions": [{"index": 0, "block": ["forward", "select", "pool", "/Common/ltm-pool-staging"]}], "conditions": [{"index": 0, "block": ["http-header", "name", "x-head", {"name": "values", "block": ["header1", "header2"]}]}, {"index": 1, "block": ["http-uri", "query-parameter", "name", "env", {"name": "values", "block": ["env-staging-1", "env-staging-2"]}]}], "description": ["ddd"]}], "strategy": "/Common/first-match"}}
*****************
in exception
Not supported location in condition: query-parameter
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_y_0ewx0c/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_y_0ewx0c/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 37, in convert
    condition_converter(context, condition)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_y_0ewx0c/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/condition_converter.py", line 64, in httpUriContitionConverter
    raise Exception(f"Not supported location in condition: {location}")
Exception: Not supported location in condition: query-parameter

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f8e85fe1fc0>]
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f8e85fe0a30>]
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a {
    controls { forwarding }
    requires { http }
    rules {
        rule1 {
            actions {
                0 {
                    forward
                    select
                    pool /Common/ltm-pool-staging
                }
            }
            conditions {
                0 {
                    http-header
                    name x-head
                    values { header1 header2 }
                }
                1 {
                    http-uri
                    query-parameter
                    name env
                    values { env-staging-1 env-staging-2 }
                }
            }
            description ddd
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a', 'controls': ['forwarding'], 'requires': ['http'], 'rules': [{'rule_name': 'rule1', 'actions': [{'index': 0, 'block': ['forward', 'select', 'pool', '/Common/ltm-pool-staging']}], 'conditions': [{'index': 0, 'block': ['http-header', 'name', 'x-head', {'name': 'values', 'block': ['header1', 'header2']}]}, {'index': 1, 'block': ['http-uri', 'query-parameter', 'name', 'env', {'name': 'values', 'block': ['env-staging-1', 'env-staging-2']}]}], 'description': ['ddd']}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a", "controls": ["forwarding"], "requires": ["http"], "rules": [{"rule_name": "rule1", "actions": [{"index": 0, "block": ["forward", "select", "pool", "/Common/ltm-pool-staging"]}], "conditions": [{"index": 0, "block": ["http-header", "name", "x-head", {"name": "values", "block": ["header1", "header2"]}]}, {"index": 1, "block": ["http-uri", "query-parameter", "name", "env", {"name": "values", "block": ["env-staging-1", "env-staging-2"]}]}], "description": ["ddd"]}], "strategy": "/Common/first-match"}}
*****************
in exception
isinstance() arg 2 must be a type, a tuple of types, or a union
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_2uw3v3_l/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_2uw3v3_l/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 37, in convert
    condition_converter(context, condition)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_2uw3v3_l/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/condition_converter.py", line 83, in httpUriContitionConverter
    if isinstance(item, "str"):
TypeError: isinstance() arg 2 must be a type, a tuple of types, or a union

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f2e81636140>]
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f2e81637bb0>]
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a {
    controls { forwarding }
    requires { http }
    rules {
        rule1 {
            actions {
                0 {
                    forward
                    select
                    pool /Common/ltm-pool-staging
                }
            }
            conditions {
                0 {
                    http-header
                    name x-head
                    values { header1 header2 }
                }
                1 {
                    http-uri
                    query-parameter
                    name env
                    values { env-staging-1 env-staging-2 }
                }
            }
            description ddd
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a', 'controls': ['forwarding'], 'requires': ['http'], 'rules': [{'rule_name': 'rule1', 'actions': [{'index': 0, 'block': ['forward', 'select', 'pool', '/Common/ltm-pool-staging']}], 'conditions': [{'index': 0, 'block': ['http-header', 'name', 'x-head', {'name': 'values', 'block': ['header1', 'header2']}]}, {'index': 1, 'block': ['http-uri', 'query-parameter', 'name', 'env', {'name': 'values', 'block': ['env-staging-1', 'env-staging-2']}]}], 'description': ['ddd']}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a", "controls": ["forwarding"], "requires": ["http"], "rules": [{"rule_name": "rule1", "actions": [{"index": 0, "block": ["forward", "select", "pool", "/Common/ltm-pool-staging"]}], "conditions": [{"index": 0, "block": ["http-header", "name", "x-head", {"name": "values", "block": ["header1", "header2"]}]}, {"index": 1, "block": ["http-uri", "query-parameter", "name", "env", {"name": "values", "block": ["env-staging-1", "env-staging-2"]}]}], "description": ["ddd"]}], "strategy": "/Common/first-match"}}
*****************
in exception
can only concatenate str (not "list") to str
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_sx88beh3/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_sx88beh3/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 37, in convert
    condition_converter(context, condition)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_sx88beh3/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/condition_converter.py", line 92, in httpUriContitionConverter
    if_clause = "[URI::query [HTTP::uri] \"" + qry_parameter_values + "\"] in { " + if_operand + "}"
TypeError: can only concatenate str (not "list") to str

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f6d4d22f820>]
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f6d4d22fa60>]
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a {
    controls { forwarding }
    requires { http }
    rules {
        rule1 {
            actions {
                0 {
                    forward
                    select
                    pool /Common/ltm-pool-staging
                }
            }
            conditions {
                0 {
                    http-header
                    name x-head
                    values { header1 header2 }
                }
                1 {
                    http-uri
                    query-parameter
                    name env
                    values { env-staging-1 env-staging-2 }
                }
            }
            description ddd
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a', 'controls': ['forwarding'], 'requires': ['http'], 'rules': [{'rule_name': 'rule1', 'actions': [{'index': 0, 'block': ['forward', 'select', 'pool', '/Common/ltm-pool-staging']}], 'conditions': [{'index': 0, 'block': ['http-header', 'name', 'x-head', {'name': 'values', 'block': ['header1', 'header2']}]}, {'index': 1, 'block': ['http-uri', 'query-parameter', 'name', 'env', {'name': 'values', 'block': ['env-staging-1', 'env-staging-2']}]}], 'description': ['ddd']}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a", "controls": ["forwarding"], "requires": ["http"], "rules": [{"rule_name": "rule1", "actions": [{"index": 0, "block": ["forward", "select", "pool", "/Common/ltm-pool-staging"]}], "conditions": [{"index": 0, "block": ["http-header", "name", "x-head", {"name": "values", "block": ["header1", "header2"]}]}, {"index": 1, "block": ["http-uri", "query-parameter", "name", "env", {"name": "values", "block": ["env-staging-1", "env-staging-2"]}]}], "description": ["ddd"]}], "strategy": "/Common/first-match"}}
*****************
in exception
can only concatenate str (not "list") to str
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_klhosq2q/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_klhosq2q/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 37, in convert
    condition_converter(context, condition)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_klhosq2q/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/condition_converter.py", line 92, in httpUriContitionConverter
    if_clause = "[URI::query [HTTP::uri] \"" + qry_parameter_values + "\"] in { " + if_operand + "}"
TypeError: can only concatenate str (not "list") to str

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f9a3810f640>]
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f9a3810ffd0>]
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a {
    controls { forwarding }
    requires { http }
    rules {
        rule1 {
            actions {
                0 {
                    forward
                    select
                    pool /Common/ltm-pool-staging
                }
            }
            conditions {
                0 {
                    http-header
                    name x-head
                    values { header1 header2 }
                }
                1 {
                    http-uri
                    query-parameter
                    name env
                    values { env-staging-1 env-staging-2 }
                }
            }
            description ddd
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a', 'controls': ['forwarding'], 'requires': ['http'], 'rules': [{'rule_name': 'rule1', 'actions': [{'index': 0, 'block': ['forward', 'select', 'pool', '/Common/ltm-pool-staging']}], 'conditions': [{'index': 0, 'block': ['http-header', 'name', 'x-head', {'name': 'values', 'block': ['header1', 'header2']}]}, {'index': 1, 'block': ['http-uri', 'query-parameter', 'name', 'env', {'name': 'values', 'block': ['env-staging-1', 'env-staging-2']}]}], 'description': ['ddd']}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a", "controls": ["forwarding"], "requires": ["http"], "rules": [{"rule_name": "rule1", "actions": [{"index": 0, "block": ["forward", "select", "pool", "/Common/ltm-pool-staging"]}], "conditions": [{"index": 0, "block": ["http-header", "name", "x-head", {"name": "values", "block": ["header1", "header2"]}]}, {"index": 1, "block": ["http-uri", "query-parameter", "name", "env", {"name": "values", "block": ["env-staging-1", "env-staging-2"]}]}], "description": ["ddd"]}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f9a3810d060>]
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f29c3def4f0>]
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f29c3dee050>]
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a {
    controls { forwarding }
    requires { http }
    rules {
        rule1 {
            actions {
                0 {
                    forward
                    select
                    pool /Common/ltm-pool-staging
                }
            }
            conditions {
                0 {
                    http-header
                    name x-head
                    values { header1 header2 }
                }
                1 {
                    http-uri
                    query-parameter
                    name env
                    values { env-staging-1 env-staging-2 }
                }
            }
            description ddd
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a', 'controls': ['forwarding'], 'requires': ['http'], 'rules': [{'rule_name': 'rule1', 'actions': [{'index': 0, 'block': ['forward', 'select', 'pool', '/Common/ltm-pool-staging']}], 'conditions': [{'index': 0, 'block': ['http-header', 'name', 'x-head', {'name': 'values', 'block': ['header1', 'header2']}]}, {'index': 1, 'block': ['http-uri', 'query-parameter', 'name', 'env', {'name': 'values', 'block': ['env-staging-1', 'env-staging-2']}]}], 'description': ['ddd']}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a", "controls": ["forwarding"], "requires": ["http"], "rules": [{"rule_name": "rule1", "actions": [{"index": 0, "block": ["forward", "select", "pool", "/Common/ltm-pool-staging"]}], "conditions": [{"index": 0, "block": ["http-header", "name", "x-head", {"name": "values", "block": ["header1", "header2"]}]}, {"index": 1, "block": ["http-uri", "query-parameter", "name", "env", {"name": "values", "block": ["env-staging-1", "env-staging-2"]}]}], "description": ["ddd"]}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f29c3decc70>]
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7fd64cf69f00>]
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7fd64cf6a0e0>]
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a {
    controls { forwarding }
    requires { http }
    rules {
        rule1 {
            actions {
                0 {
                    forward
                    select
                    pool /Common/ltm-pool-staging
                }
            }
            conditions {
                0 {
                    http-header
                    name x-head
                    values { header1 header2 }
                }
                1 {
                    http-uri
                    query-parameter
                    name env
                    values { env-staging-1 env-staging-2 }
                }
            }
            description ddd
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a', 'controls': ['forwarding'], 'requires': ['http'], 'rules': [{'rule_name': 'rule1', 'actions': [{'index': 0, 'block': ['forward', 'select', 'pool', '/Common/ltm-pool-staging']}], 'conditions': [{'index': 0, 'block': ['http-header', 'name', 'x-head', {'name': 'values', 'block': ['header1', 'header2']}]}, {'index': 1, 'block': ['http-uri', 'query-parameter', 'name', 'env', {'name': 'values', 'block': ['env-staging-1', 'env-staging-2']}]}], 'description': ['ddd']}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a", "controls": ["forwarding"], "requires": ["http"], "rules": [{"rule_name": "rule1", "actions": [{"index": 0, "block": ["forward", "select", "pool", "/Common/ltm-pool-staging"]}], "conditions": [{"index": 0, "block": ["http-header", "name", "x-head", {"name": "values", "block": ["header1", "header2"]}]}, {"index": 1, "block": ["http-uri", "query-parameter", "name", "env", {"name": "values", "block": ["env-staging-1", "env-staging-2"]}]}], "description": ["ddd"]}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7fd64cf688e0>]
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7fd10935f2b0>]
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7fd10935e110>]
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a {
    controls { forwarding }
    requires { http }
    rules {
        rule1 {
            actions {
                0 {
                    forward
                    select
                    pool /Common/ltm-pool-staging
                }
            }
            conditions {
                0 {
                    http-header
                    name x-head
                    values { header1 header2 }
                }
                1 {
                    http-uri
                    query-parameter
                    name env
                    values { env-staging-1 env-staging-2 }
                }
            }
            description ddd
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a', 'controls': ['forwarding'], 'requires': ['http'], 'rules': [{'rule_name': 'rule1', 'actions': [{'index': 0, 'block': ['forward', 'select', 'pool', '/Common/ltm-pool-staging']}], 'conditions': [{'index': 0, 'block': ['http-header', 'name', 'x-head', {'name': 'values', 'block': ['header1', 'header2']}]}, {'index': 1, 'block': ['http-uri', 'query-parameter', 'name', 'env', {'name': 'values', 'block': ['env-staging-1', 'env-staging-2']}]}], 'description': ['ddd']}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a", "controls": ["forwarding"], "requires": ["http"], "rules": [{"rule_name": "rule1", "actions": [{"index": 0, "block": ["forward", "select", "pool", "/Common/ltm-pool-staging"]}], "conditions": [{"index": 0, "block": ["http-header", "name", "x-head", {"name": "values", "block": ["header1", "header2"]}]}, {"index": 1, "block": ["http-uri", "query-parameter", "name", "env", {"name": "values", "block": ["env-staging-1", "env-staging-2"]}]}], "description": ["ddd"]}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7fd10935c340>]
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f934e40d000>]
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f934e40c460>]
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a {
    controls { forwarding }
    requires { http }
    rules {
        rule1 {
            actions {
                0 {
                    forward
                    select
                    pool /Common/ltm-pool-staging
                }
            }
            conditions {
                0 {
                    http-header
                    name x-head
                    values { header1 header2 }
                }
                1 {
                    http-uri
                    query-parameter
                    name env
                    values { env-staging-1 env-staging-2 }
                }
            }
            description ddd
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a', 'controls': ['forwarding'], 'requires': ['http'], 'rules': [{'rule_name': 'rule1', 'actions': [{'index': 0, 'block': ['forward', 'select', 'pool', '/Common/ltm-pool-staging']}], 'conditions': [{'index': 0, 'block': ['http-header', 'name', 'x-head', {'name': 'values', 'block': ['header1', 'header2']}]}, {'index': 1, 'block': ['http-uri', 'query-parameter', 'name', 'env', {'name': 'values', 'block': ['env-staging-1', 'env-staging-2']}]}], 'description': ['ddd']}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a", "controls": ["forwarding"], "requires": ["http"], "rules": [{"rule_name": "rule1", "actions": [{"index": 0, "block": ["forward", "select", "pool", "/Common/ltm-pool-staging"]}], "conditions": [{"index": 0, "block": ["http-header", "name", "x-head", {"name": "values", "block": ["header1", "header2"]}]}, {"index": 1, "block": ["http-uri", "query-parameter", "name", "env", {"name": "values", "block": ["env-staging-1", "env-staging-2"]}]}], "description": ["ddd"]}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f934e40c430>]
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
addActionClause() missing 1 required positional argument: 'currentIfClause'
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_prarx0bh/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_prarx0bh/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 46, in convert
    action_converter(context, action)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_prarx0bh/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/action_converter.py", line 30, in httpHeaderActionConverter
    context.appendRequestAction(ActionClause(action))
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_prarx0bh/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/converter_context.py", line 39, in appendRequestAction
    addActionClause(self.irule.request.ifs[0])
TypeError: addActionClause() missing 1 required positional argument: 'currentIfClause'

tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
addActionClause() missing 1 required positional argument: 'currentIfClause'
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_prarx0bh/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_prarx0bh/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 46, in convert
    action_converter(context, action)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_prarx0bh/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/action_converter.py", line 28, in httpHeaderActionConverter
    context.appendResponseAction(ActionClause(action))
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_prarx0bh/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/converter_context.py", line 42, in appendResponseAction
    addActionClause(self.irule.response.ifs[0])
TypeError: addActionClause() missing 1 required positional argument: 'currentIfClause'

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'actionClause' is not defined
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_bsfds7ee/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_bsfds7ee/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 46, in convert
    action_converter(context, action)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_bsfds7ee/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/action_converter.py", line 30, in httpHeaderActionConverter
    context.appendRequestAction(ActionClause(action))
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_bsfds7ee/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/converter_context.py", line 39, in appendRequestAction
    addActionClause(actionClause, self.irule.request.ifs[0])
NameError: name 'actionClause' is not defined

tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'actionClause' is not defined
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_bsfds7ee/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_bsfds7ee/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 46, in convert
    action_converter(context, action)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_bsfds7ee/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/action_converter.py", line 28, in httpHeaderActionConverter
    context.appendResponseAction(ActionClause(action))
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_bsfds7ee/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/converter_context.py", line 42, in appendResponseAction
    addActionClause(actionClause, self.irule.response.ifs[0])
NameError: name 'actionClause' is not defined

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'ifClause' is not defined
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_1kdab0hy/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_1kdab0hy/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 46, in convert
    action_converter(context, action)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_1kdab0hy/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/action_converter.py", line 30, in httpHeaderActionConverter
    context.appendRequestAction(ActionClause(action))
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_1kdab0hy/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/converter_context.py", line 39, in appendRequestAction
    addActionClause(actionClause, self.irule.request.ifs[0])
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_1kdab0hy/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/converter_context.py", line 18, in addActionClause
    currentIfClause.body.append(ifClause)
NameError: name 'ifClause' is not defined

tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'ifClause' is not defined
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_1kdab0hy/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_1kdab0hy/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 46, in convert
    action_converter(context, action)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_1kdab0hy/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/action_converter.py", line 28, in httpHeaderActionConverter
    context.appendResponseAction(ActionClause(action))
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_1kdab0hy/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/converter_context.py", line 42, in appendResponseAction
    addActionClause(actionClause, self.irule.response.ifs[0])
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_1kdab0hy/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/converter_context.py", line 20, in addActionClause
    addActionClause(ifClause, currentIfClause.ifs[0])
NameError: name 'ifClause' is not defined

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'ifClause' is not defined
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_fu0eqrwb/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_fu0eqrwb/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 46, in convert
    action_converter(context, action)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_fu0eqrwb/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/action_converter.py", line 30, in httpHeaderActionConverter
    context.appendRequestAction(ActionClause(action))
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_fu0eqrwb/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/converter_context.py", line 39, in appendRequestAction
    addActionClause(actionClause, self.irule.request.ifs[0])
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_fu0eqrwb/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/converter_context.py", line 18, in addActionClause
    currentIfClause.body.append(ifClause)
NameError: name 'ifClause' is not defined

tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'ifClause' is not defined
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_fu0eqrwb/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_fu0eqrwb/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 46, in convert
    action_converter(context, action)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_fu0eqrwb/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/action_converter.py", line 28, in httpHeaderActionConverter
    context.appendResponseAction(ActionClause(action))
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_fu0eqrwb/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/converter_context.py", line 42, in appendResponseAction
    addActionClause(actionClause, self.irule.response.ifs[0])
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_fu0eqrwb/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/converter_context.py", line 20, in addActionClause
    addActionClause(actionClause, currentIfClause.ifs[0])
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_fu0eqrwb/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/converter_context.py", line 18, in addActionClause
    currentIfClause.body.append(ifClause)
NameError: name 'ifClause' is not defined

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'ifClause' is not defined
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_i8u3bm90/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_i8u3bm90/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 46, in convert
    action_converter(context, action)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_i8u3bm90/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/action_converter.py", line 30, in httpHeaderActionConverter
    context.appendRequestAction(ActionClause(action))
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_i8u3bm90/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/converter_context.py", line 39, in appendRequestAction
    addActionClause(actionClause, self.irule.request.ifs[0])
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_i8u3bm90/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/converter_context.py", line 18, in addActionClause
    currentIfClause.body.append(ifClause)
NameError: name 'ifClause' is not defined

tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'ifClause' is not defined
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_i8u3bm90/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_i8u3bm90/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 46, in convert
    action_converter(context, action)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_i8u3bm90/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/action_converter.py", line 28, in httpHeaderActionConverter
    context.appendResponseAction(ActionClause(action))
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_i8u3bm90/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/converter_context.py", line 42, in appendResponseAction
    addActionClause(actionClause, self.irule.response.ifs[0])
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_i8u3bm90/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/converter_context.py", line 20, in addActionClause
    addActionClause(actionClause, currentIfClause.ifs[0])
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_i8u3bm90/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/converter_context.py", line 18, in addActionClause
    currentIfClause.body.append(ifClause)
NameError: name 'ifClause' is not defined

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f3ea119dea0>]
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f3ea119fdf0>]
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a {
    controls { forwarding }
    requires { http }
    rules {
        rule1 {
            actions {
                0 {
                    forward
                    select
                    pool /Common/ltm-pool-staging
                }
            }
            conditions {
                0 {
                    http-header
                    name x-head
                    values { header1 header2 }
                }
                1 {
                    http-uri
                    query-parameter
                    name env
                    values { env-staging-1 env-staging-2 }
                }
            }
            description ddd
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a', 'controls': ['forwarding'], 'requires': ['http'], 'rules': [{'rule_name': 'rule1', 'actions': [{'index': 0, 'block': ['forward', 'select', 'pool', '/Common/ltm-pool-staging']}], 'conditions': [{'index': 0, 'block': ['http-header', 'name', 'x-head', {'name': 'values', 'block': ['header1', 'header2']}]}, {'index': 1, 'block': ['http-uri', 'query-parameter', 'name', 'env', {'name': 'values', 'block': ['env-staging-1', 'env-staging-2']}]}], 'description': ['ddd']}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a", "controls": ["forwarding"], "requires": ["http"], "rules": [{"rule_name": "rule1", "actions": [{"index": 0, "block": ["forward", "select", "pool", "/Common/ltm-pool-staging"]}], "conditions": [{"index": 0, "block": ["http-header", "name", "x-head", {"name": "values", "block": ["header1", "header2"]}]}, {"index": 1, "block": ["http-uri", "query-parameter", "name", "env", {"name": "values", "block": ["env-staging-1", "env-staging-2"]}]}], "description": ["ddd"]}], "strategy": "/Common/first-match"}}
*****************
[<ansible.module_utils.irule_bo.IRule object at 0x7f3ea119d090>]
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
can't multiply sequence by non-int of type 'str'
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_3x35j1zj/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 66, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_3x35j1zj/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/irule_bo.py", line 62, in toString
    rValue = rValue * self.response.toString()
TypeError: can't multiply sequence by non-int of type 'str'

tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
'str' object has no attribute 'toString'
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_3x35j1zj/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 66, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_3x35j1zj/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/irule_bo.py", line 60, in toString
    rValue = self.request.toString()
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_3x35j1zj/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/irule_bo.py", line 47, in toString
    rValue = rValue + ifClause.toString("  ")
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_3x35j1zj/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/irule_bo.py", line 20, in toString
    rValue = rValue + bodyItem.toString(space + "  ")
AttributeError: 'str' object has no attribute 'toString'

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
can't multiply sequence by non-int of type 'str'
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_nrwik1s6/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 66, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_nrwik1s6/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/irule_bo.py", line 62, in toString
    rValue = rValue * self.response.toString()
TypeError: can't multiply sequence by non-int of type 'str'

tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'ActionClause' is not defined
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_nrwik1s6/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 64, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_nrwik1s6/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/ltm_policy_converter.py", line 37, in convert
    condition_converter(context, condition)
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_nrwik1s6/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/condition_converter.py", line 20, in httpHostContitionConverter
    requestIf = IfClause(if_condition, [ActionClause("set host_match 1")], [ActionClause("set host_match 0")])
NameError: name 'ActionClause' is not defined

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
can't multiply sequence by non-int of type 'str'
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_ajsufexm/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 66, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_ajsufexm/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/irule_bo.py", line 62, in toString
    rValue = rValue * self.response.toString()
TypeError: can't multiply sequence by non-int of type 'str'

tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'ifClause' is not defined
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_ajsufexm/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 66, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_ajsufexm/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/irule_bo.py", line 62, in toString
    rValue = rValue * self.response.toString()
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_ajsufexm/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/irule_bo.py", line 47, in toString
    rValue = rValue + ifClause.toString("  ")
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_ajsufexm/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/irule_bo.py", line 24, in toString
    rValue = rValue + ifClause.toString(space + "  ")
NameError: name 'ifClause' is not defined

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
can't multiply sequence by non-int of type 'str'
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_mjhj2mhq/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 66, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_mjhj2mhq/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/irule_bo.py", line 62, in toString
    rValue = rValue * self.response.toString()
TypeError: can't multiply sequence by non-int of type 'str'

tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
name 'ifClause' is not defined
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_mjhj2mhq/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 66, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_mjhj2mhq/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/irule_bo.py", line 62, in toString
    rValue = rValue * self.response.toString()
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_mjhj2mhq/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/irule_bo.py", line 47, in toString
    rValue = rValue + ifClause.toString("  ")
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_mjhj2mhq/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/irule_bo.py", line 24, in toString
    rValue = rValue + ifClause.toString(space + "  ")
NameError: name 'ifClause' is not defined

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
can't multiply sequence by non-int of type 'str'
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_ue3scay_/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 66, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_ue3scay_/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/irule_bo.py", line 62, in toString
    rValue = rValue * self.response.toString()
TypeError: can't multiply sequence by non-int of type 'str'

tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
in exception
can't multiply sequence by non-int of type 'str'
Traceback (most recent call last):
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_ue3scay_/ansible_as3_ltm_policy_migrate_payload.zip/ansible/modules/as3_ltm_policy_migrate.py", line 66, in migrate_ltm_routes
  File "/tmp/ansible_as3_ltm_policy_migrate_payload_ue3scay_/ansible_as3_ltm_policy_migrate_payload.zip/ansible/module_utils/irule_bo.py", line 62, in toString
    rValue = rValue * self.response.toString()
TypeError: can't multiply sequence by non-int of type 'str'

tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
when HTTP_REQUEST {  if {  } {
    HTTP:header insert "new-header" "bingo"
  }
}

when HTTP_RESPONSE {}
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
when HTTP_REQUEST {  if { [HTTP::host] equals "1" or [HTTP::host] equals "2" or [HTTP::host] equals "3" } {
    set host_match 1
  }
  else {    set host_match 0
  }
}

when HTTP_RESPONSE {  if { $host_match == 1 } {
    if { [HTTP::header "X-HEADER1"] eq "STAGING" } {
      HTTP:header insert "X-HEADER2" "eww"
      HTTP:cookie insert name "COOKIE33" value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
    }

  }
}
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a {
    controls { forwarding }
    requires { http }
    rules {
        rule1 {
            actions {
                0 {
                    forward
                    select
                    pool /Common/ltm-pool-staging
                }
            }
            conditions {
                0 {
                    http-header
                    name x-head
                    values { header1 header2 }
                }
                1 {
                    http-uri
                    query-parameter
                    name env
                    values { env-staging-1 env-staging-2 }
                }
            }
            description ddd
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a', 'controls': ['forwarding'], 'requires': ['http'], 'rules': [{'rule_name': 'rule1', 'actions': [{'index': 0, 'block': ['forward', 'select', 'pool', '/Common/ltm-pool-staging']}], 'conditions': [{'index': 0, 'block': ['http-header', 'name', 'x-head', {'name': 'values', 'block': ['header1', 'header2']}]}, {'index': 1, 'block': ['http-uri', 'query-parameter', 'name', 'env', {'name': 'values', 'block': ['env-staging-1', 'env-staging-2']}]}], 'description': ['ddd']}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a", "controls": ["forwarding"], "requires": ["http"], "rules": [{"rule_name": "rule1", "actions": [{"index": 0, "block": ["forward", "select", "pool", "/Common/ltm-pool-staging"]}], "conditions": [{"index": 0, "block": ["http-header", "name", "x-head", {"name": "values", "block": ["header1", "header2"]}]}, {"index": 1, "block": ["http-uri", "query-parameter", "name", "env", {"name": "values", "block": ["env-staging-1", "env-staging-2"]}]}], "description": ["ddd"]}], "strategy": "/Common/first-match"}}
*****************
when HTTP_REQUEST {  if { [HTTP::header "x-head"] eq "header1" or [HTTP::header "x-head"] eq "header2" } {
    if { [URI::query [HTTP::uri] "env"] in { "env-staging-1" "env-staging-2"} } {
      pool /Common/ltm-pool-staging
    }

  }
}

when HTTP_RESPONSE {}
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
when HTTP_REQUEST {
  if {  } {
    HTTP:header insert "new-header" "bingo"
  }
}

when HTTP_RESPONSE {
}
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
when HTTP_REQUEST {
  if { [HTTP::host] equals "1" or [HTTP::host] equals "2" or [HTTP::host] equals "3" } {
    set host_match 1
  }
  else {    set host_match 0
  }
}

when HTTP_RESPONSE {
  if { $host_match == 1 } {
    if { [HTTP::header "X-HEADER1"] eq "STAGING" } {
      HTTP:header insert "X-HEADER2" "eww"
      HTTP:cookie insert name "COOKIE33" value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
    }

  }
}
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a {
    controls { forwarding }
    requires { http }
    rules {
        rule1 {
            actions {
                0 {
                    forward
                    select
                    pool /Common/ltm-pool-staging
                }
            }
            conditions {
                0 {
                    http-header
                    name x-head
                    values { header1 header2 }
                }
                1 {
                    http-uri
                    query-parameter
                    name env
                    values { env-staging-1 env-staging-2 }
                }
            }
            description ddd
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a', 'controls': ['forwarding'], 'requires': ['http'], 'rules': [{'rule_name': 'rule1', 'actions': [{'index': 0, 'block': ['forward', 'select', 'pool', '/Common/ltm-pool-staging']}], 'conditions': [{'index': 0, 'block': ['http-header', 'name', 'x-head', {'name': 'values', 'block': ['header1', 'header2']}]}, {'index': 1, 'block': ['http-uri', 'query-parameter', 'name', 'env', {'name': 'values', 'block': ['env-staging-1', 'env-staging-2']}]}], 'description': ['ddd']}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a", "controls": ["forwarding"], "requires": ["http"], "rules": [{"rule_name": "rule1", "actions": [{"index": 0, "block": ["forward", "select", "pool", "/Common/ltm-pool-staging"]}], "conditions": [{"index": 0, "block": ["http-header", "name", "x-head", {"name": "values", "block": ["header1", "header2"]}]}, {"index": 1, "block": ["http-uri", "query-parameter", "name", "env", {"name": "values", "block": ["env-staging-1", "env-staging-2"]}]}], "description": ["ddd"]}], "strategy": "/Common/first-match"}}
*****************
when HTTP_REQUEST {
  if { [HTTP::header "x-head"] eq "header1" or [HTTP::header "x-head"] eq "header2" } {
    if { [URI::query [HTTP::uri] "env"] in { "env-staging-1" "env-staging-2"} } {
      pool /Common/ltm-pool-staging
    }

  }
}

when HTTP_RESPONSE {
}
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
when HTTP_REQUEST {
  if {  } {
    HTTP:header insert "new-header" "bingo"
  }
}

when HTTP_RESPONSE {
}
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
when HTTP_REQUEST {
  if { [HTTP::host] equals "1" or [HTTP::host] equals "2" or [HTTP::host] equals "3" } {
    set host_match 1
  }
  else {    set host_match 0
  }
}

when HTTP_RESPONSE {
  if { $host_match == 1 } {
    if { [HTTP::header "X-HEADER1"] eq "STAGING" } {
      HTTP:header insert "X-HEADER2" "eww"
      HTTP:cookie insert name "COOKIE33" value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
    }

  }
}
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a {
    controls { forwarding }
    requires { http }
    rules {
        rule1 {
            actions {
                0 {
                    forward
                    select
                    pool /Common/ltm-pool-staging
                }
            }
            conditions {
                0 {
                    http-header
                    name x-head
                    values { header1 header2 }
                }
                1 {
                    http-uri
                    query-parameter
                    name env
                    values { env-staging-1 env-staging-2 }
                }
            }
            description ddd
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a', 'controls': ['forwarding'], 'requires': ['http'], 'rules': [{'rule_name': 'rule1', 'actions': [{'index': 0, 'block': ['forward', 'select', 'pool', '/Common/ltm-pool-staging']}], 'conditions': [{'index': 0, 'block': ['http-header', 'name', 'x-head', {'name': 'values', 'block': ['header1', 'header2']}]}, {'index': 1, 'block': ['http-uri', 'query-parameter', 'name', 'env', {'name': 'values', 'block': ['env-staging-1', 'env-staging-2']}]}], 'description': ['ddd']}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a", "controls": ["forwarding"], "requires": ["http"], "rules": [{"rule_name": "rule1", "actions": [{"index": 0, "block": ["forward", "select", "pool", "/Common/ltm-pool-staging"]}], "conditions": [{"index": 0, "block": ["http-header", "name", "x-head", {"name": "values", "block": ["header1", "header2"]}]}, {"index": 1, "block": ["http-uri", "query-parameter", "name", "env", {"name": "values", "block": ["env-staging-1", "env-staging-2"]}]}], "description": ["ddd"]}], "strategy": "/Common/first-match"}}
*****************
when HTTP_REQUEST {
  if { [HTTP::header "x-head"] eq "header1" or [HTTP::header "x-head"] eq "header2" } {
    if { [URI::query [HTTP::uri] "env"] in { "env-staging-1" "env-staging-2"} } {
      pool /Common/ltm-pool-staging
    }

  }
}

when HTTP_RESPONSE {
}
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_80
tenantd16948971c478 / Common_SSL_OFFLOAD_VS_443 / Common_SSL_OFFLOAD_VS_443
tenanta66c882a1447f / Common_TCP_PROG / Common_TCP_PROG
tenantaaeaa34d12185 / Common_LTM_POLICY_VS / Common_LTM_POLICY_VS
ltm policy /tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5 {
    requires { http }
    rules {
        headers {
            actions {
                0 {
                    http-header
                    insert
                    name new-header
                    value bingo
                }
            }
            conditions {
                0 {
                    http-uri
                    path
                    contains
                    values { /headers }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'headers', 'actions': [{'index': 0, 'block': ['http-header', 'insert', 'name', 'new-header', 'value', 'bingo']}], 'conditions': [{'index': 0, 'block': ['http-uri', 'path', 'contains', {'name': 'values', 'block': ['/headers']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenantaaeaa34d12185/Common_LTM_POLICY_VS/ltm_policy5", "controls": null, "requires": ["http"], "rules": [{"rule_name": "headers", "actions": [{"index": 0, "block": ["http-header", "insert", "name", "new-header", "value", "bingo"]}], "conditions": [{"index": 0, "block": ["http-uri", "path", "contains", {"name": "values", "block": ["/headers"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
when HTTP_REQUEST {
  if {  } {
    HTTP:header insert "new-header" "bingo"
  }
}

when HTTP_RESPONSE {
}
tenant7e6ce4ee1e39f / Common_ltm-app-vs / Common_ltm-app-vs
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a {
    requires { http }
    rules {
        rule2 {
            actions {
                0 {
                    http-header
                    response
                    insert
                    name X-HEADER2
                    value eww
                }
                1 {
                    http-set-cookie
                    response
                    insert
                    name COOKIE33
                    value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
                }
            }
            conditions {
                0 {
                    http-host
                    values { 1 2 3 }
                }
                1 {
                    http-header
                    response
                    name X-HEADER1
                    values { STAGING }
                }
            }
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a', 'controls': None, 'requires': ['http'], 'rules': [{'rule_name': 'rule2', 'actions': [{'index': 0, 'block': ['http-header', 'response', 'insert', 'name', 'X-HEADER2', 'value', 'eww']}, {'index': 1, 'block': ['http-set-cookie', 'response', 'insert', 'name', 'COOKIE33', 'value', 'asdfsadfasdfsadf asdfsa asdf sdf asdf']}], 'conditions': [{'index': 0, 'block': ['http-host', {'name': 'values', 'block': ['1', '2', '3']}]}, {'index': 1, 'block': ['http-header', 'response', 'name', 'X-HEADER1', {'name': 'values', 'block': ['STAGING']}]}], 'description': None}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_2a", "controls": null, "requires": ["http"], "rules": [{"rule_name": "rule2", "actions": [{"index": 0, "block": ["http-header", "response", "insert", "name", "X-HEADER2", "value", "eww"]}, {"index": 1, "block": ["http-set-cookie", "response", "insert", "name", "COOKIE33", "value", "asdfsadfasdfsadf asdfsa asdf sdf asdf"]}], "conditions": [{"index": 0, "block": ["http-host", {"name": "values", "block": ["1", "2", "3"]}]}, {"index": 1, "block": ["http-header", "response", "name", "X-HEADER1", {"name": "values", "block": ["STAGING"]}]}], "description": null}], "strategy": "/Common/first-match"}}
*****************
when HTTP_REQUEST {
  if { [HTTP::host] equals "1" or [HTTP::host] equals "2" or [HTTP::host] equals "3" } {
    set host_match 1
  }
  else {
    set host_match 0
  }
}

when HTTP_RESPONSE {
  if { $host_match == 1 } {
    if { [HTTP::header "X-HEADER1"] eq "STAGING" } {
      HTTP:header insert "X-HEADER2" "eww"
      HTTP:cookie insert name "COOKIE33" value "asdfsadfasdfsadf asdfsa asdf sdf asdf"
    }

  }
}
ltm policy /tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a {
    controls { forwarding }
    requires { http }
    rules {
        rule1 {
            actions {
                0 {
                    forward
                    select
                    pool /Common/ltm-pool-staging
                }
            }
            conditions {
                0 {
                    http-header
                    name x-head
                    values { header1 header2 }
                }
                1 {
                    http-uri
                    query-parameter
                    name env
                    values { env-staging-1 env-staging-2 }
                }
            }
            description ddd
        }
    }
    strategy /Common/first-match
}
{'ltm_policy': {'type': 'ltm_policy', 'name': '/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a', 'controls': ['forwarding'], 'requires': ['http'], 'rules': [{'rule_name': 'rule1', 'actions': [{'index': 0, 'block': ['forward', 'select', 'pool', '/Common/ltm-pool-staging']}], 'conditions': [{'index': 0, 'block': ['http-header', 'name', 'x-head', {'name': 'values', 'block': ['header1', 'header2']}]}, {'index': 1, 'block': ['http-uri', 'query-parameter', 'name', 'env', {'name': 'values', 'block': ['env-staging-1', 'env-staging-2']}]}], 'description': ['ddd']}], 'strategy': '/Common/first-match'}}
{"ltm_policy": {"type": "ltm_policy", "name": "/tenant7e6ce4ee1e39f/Common_ltm-app-vs/policy_2c_1a", "controls": ["forwarding"], "requires": ["http"], "rules": [{"rule_name": "rule1", "actions": [{"index": 0, "block": ["forward", "select", "pool", "/Common/ltm-pool-staging"]}], "conditions": [{"index": 0, "block": ["http-header", "name", "x-head", {"name": "values", "block": ["header1", "header2"]}]}, {"index": 1, "block": ["http-uri", "query-parameter", "name", "env", {"name": "values", "block": ["env-staging-1", "env-staging-2"]}]}], "description": ["ddd"]}], "strategy": "/Common/first-match"}}
*****************
when HTTP_REQUEST {
  if { [HTTP::header "x-head"] eq "header1" or [HTTP::header "x-head"] eq "header2" } {
    if { [URI::query [HTTP::uri] "env"] in { "env-staging-1" "env-staging-2"} } {
      pool /Common/ltm-pool-staging
    }

  }
}

when HTTP_RESPONSE {
}
tenantc2851add19c01 / Common_FAST_L4 / Common_FAST_L4
