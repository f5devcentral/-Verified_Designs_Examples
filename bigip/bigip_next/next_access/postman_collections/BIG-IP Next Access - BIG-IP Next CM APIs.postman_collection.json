{
	"info": {
		"_postman_id": "c4a07759-d1ec-4084-bc2c-6bb256c432f3",
		"name": "BIG-IP Next Access - BIG-IP Next CM Demo - 20.3-CM APIs-Public",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7051083",
		"_collection_link": "https://universal-sunset-70927.postman.co/workspace/Next-Dev~c2317910-394f-482f-acb2-28e9e4a05db1/collection/7051083-c4a07759-d1ec-4084-bc2c-6bb256c432f3?action=share&source=collection_link&creator=7051083"
	},
	"item": [
		{
			"name": "BIG-IP Next Workflows - with Central Manager",
			"item": [
				{
					"name": "Cert Auth Policy",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Login status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var resp = pm.response.json();\r",
											"pm.environment.set(\"bigip_next_cm_token\", resp.access_token);\r",
											"pm.collectionVariables.set(\"bigip_next_cm_token\", resp.access_token);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"{{bigip_next_cm_admin_password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/login",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Cert Auth policy POST",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"psp_policy_name\", \"access_cert_auth\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{psp_policy_name}}\",\n    \"policy_type\": \"PerSession\",\n    \"profileType\":\"ltm-apm\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"configuration\": {\n\t\t\t\t\"domainCookie\": \"\",\n\t\t\t\t\"externalServers\": [],\n\t\t\t\t\"httpOnlyCookie\": false,\n\t\t\t\t\"inactivityTimeout\": 900,\n\t\t\t\t\"logoutUriTimeout\": 5,\n\t\t\t\t\"maxConcurrentSessions\": 0,\n\t\t\t\t\"maxConcurrentUsers\": 0,\n\t\t\t\t\"maxFailureDelay\": 5,\n\t\t\t\t\"maxInProgressSessions\": 128,\n\t\t\t\t\"maxSessionTimeout\": 604800,\n\t\t\t\t\"minFailureDelay\": 2,\n\t\t\t\t\"name\": \"{{psp_policy_name}}\",\n\t\t\t\t\"persistentCookie\": false,\n\t\t\t\t\"policy\": {\n\t\t\t\t\t\"objectContent\": {\n\t\t\t\t\t\t\"defaultLanguage\": \"en\",\n\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"deny\",\n\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"allow\",\n\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"languages\": [\n\t\t\t\t\t\t\t\"en\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"macros\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"cert_auth_macro\",\n\t\t\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"aaa-on-demand-client-cert\",\n\t\t\t\t\t\t\t\t\t\"mode\": \"require\",\n\t\t\t\t\t\t\t\t\t\"name\": \"On-Demand-Certificate-Authentication-6446d8fe\",\n\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Branch-59a0dd30\",\n\t\t\t\t\t\t\t\t\t\t\t\"expression\": \"expr {[mcget {session.ssl.cert.valid}] == 0}\",\n\t\t\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"variable-assign\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Variable-Assignment-44ffd2bc\",\n\t\t\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"ruleId\": \"Variable-Assign-af2a4c47\",\n\t\t\t\t\t\t\t\t\t\t\t\"ruleType\": \"variable-assign\",\n\t\t\t\t\t\t\t\t\t\t\t\"variables\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"expression\": \"# Base Logic from: https://community.f5.com/kb/technicalarticles/how-to-extract-the-upn-from-a-digital-certificate-on-a-cac-card-using-f5-apm/291498\\r\\nset x509e_fields [split [ session.ssl.cert.x509extension] \\\"\\\\n\\\"];\\r\\n# For each element in the list:\\r\\nforeach field $x509e_fields \\r\\n    # If the element contains UPN:\\r\\n    if  $field contains \\\"othername: UPN\\\"  \\r\\n    ## set start of UPN variable\\r\\n    set start [expr [string first \\\"UPN::\\\" $field] + 5]\\r\\n    # UPN format is user@domain.com , doesn't have less than or greater than symbols\\r\\n    # Return the UPN, by finding the index of the text UPN and double colons, then use string range to get everything between.\\r\\n     [string range $field $start end];\\r\\n    \\r\\n\\r\\n# Otherwise  UPN Not Found:\\r\\n \\\"UPN-NOT-FOUND\\\";\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"secure\": false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"varname\": \"session.custom.upn\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"ruleId\": \"On-Demand-Certificate-7720856b\",\n\t\t\t\t\t\t\t\t\t\"ruleType\": \"aaa-on-demand-client-cert\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\"itemType\": \"macro-call\",\n\t\t\t\t\t\t\t\"macro\": \"cert_auth_macro\",\n\t\t\t\t\t\t\t\"name\": \"cert_auth_macro\",\n\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Deny\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"deny\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"allow\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"policyType\": \"PerSession\",\n\t\t\t\t\"profileType\": \"all\",\n\t\t\t\t\"restrictToSingleClientIP\": false,\n\t\t\t\t\"samesiteCookie\": false,\n\t\t\t\t\"samesiteCookieAttrValue\": \"strict\",\n\t\t\t\t\"scope\": \"profile\",\n\t\t\t\t\"secureCookie\": true,\n\t\t\t\t\"timeout\": 300,\n\t\t\t\t\"useHttp503OnError\": false\n\t\t\t},\n\t\t\t\"loggingConfiguration\": [\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"apmd\",\n\t\t\t\t\t\"level\": \"DEBUG\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"tmm\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"websso\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"renderer\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"id = resp.id;",
											"pm.collectionVariables.set(\"fast_path\", resp.path);",
											"pm.collectionVariables.set(\"appsvc-id\", id)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"cert_auth_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"access_cert_auth\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{app_name}}\",\n  \"set_name\": \"Examples\",\n  \"template_name\": \"http\",\n  \"description\": \"{{app_name}}-description\",\n  \"parameters\": {\n    \"application_name\": \"{{app_name}}\",\n    \"application_description\": \"{{app_name}}-description\",\n    \"enable_Global_Resiliency\": false,\n    \"monitors\": [\n      {\n        \"interval\": 5,\n        \"isDefault\": true,\n        \"isHttpMonitor\": true,\n        \"monitorName\": \"http\",\n        \"monitorType\": \"http\",\n        \"receiveString\": \".*\",\n        \"sendString\": \"GET / HTTP/1.0\\\\r\\\\n\\\\r\\\\n\",\n        \"timeout\": 16\n      }\n    ],\n    \"pools\": [\n      {\n        \"loadBalancingMode\": \"round-robin\",\n        \"loadBalancingRatio\": 10,\n        \"monitorType\": [\n          \"http\"\n        ],\n        \"servicePort\": 80,\n        \"application_name\": \"{{app_name}}\",\n        \"poolName\": \"pool_{{app_name}}\"\n      }\n    ],\n    \"virtuals\": [\n      {\n        \"FastL4_idleTimeout\": 600,\n        \"FastL4_looseClose\": true,\n        \"FastL4_looseInitialization\": true,\n        \"FastL4_resetOnTimeout\": true,\n        \"FastL4_tcpCloseTimeout\": 43200,\n        \"FastL4_tcpHandshakeTimeout\": 43200,\n        \"TCP_idle_timeout\": 60,\n        \"UDP_idle_timeout\": 60,\n\t\t\"is_virtual_type_standard\": true,\n\t\t\"auto_last_hop\": \"auto\",\n\t\t\"enable_Access\": true,\n\t\t\"accessPolicyEnum\": \"{{psp_policy_name}}\",\n        \"accessAdditionalConfigurations\": \" \",\n        \"enable_FastL4\": false,\n        \"enable_HTTP2_Profile\": false,\n        \"enable_TCP_Profile\": false,\n        \"enable_TLS_Client\": true,\n        \"enable_TLS_Server\": false,\n        \"enable_UDP_Profile\": false,\n        \"enable_snat\": true,\n        \"snat_addresses\": [],\n        \"snat_automap\": true,\n        \"enable_WAF\": false,\n        \"enable_iRules\": false,\n        \"virtualPort\": 443,\n        \"pool\": \"pool_{{app_name}}\",\n        \"virtualName\": \"vs_{{app_name}}\",\n\t\t\"virtualType\": \"standard\",\n        \"multiCertificatesEnum\": [\n          {\n\t\t\t\"advanced_configuration\": false,\n\t\t\t\"authentication_depth\": 9,\n\t\t\t\"authentication_frequency\": \"one-time\",\n\t\t\t\"ciphers\": \"DEFAULT\",\n\t\t\t\"clientTlsName\": \"clienttls-cert\",\n\t\t\t\"dh_groups\": \"DEFAULT\",\n\t\t\t\"ecdsaCertificate\": \"\",\n\t\t\t\"enable_authentication\": true,\n\t\t\t\"rsaCertificate\": \"self_demo.f5.com\",\n\t\t\t\"signature_algorithms\": \"DEFAULT\",\n\t\t\t\"sniDefault\": true,\n\t\t\t\"sniServers\": [],\n\t\t\t\"tls_c_1_1\": false,\n\t\t\t\"tls_c_1_2\": true,\n\t\t\t\"tls_c_1_3\": false,\n\t\t\t\"trustCACertificate\": \"CA-DEMO\",\n\t\t\t\"useMultiCerts\": false\n          }\n        ]\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deploy Application to Instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)",
											"pm.collectionVariables.set(\"deploymentID\", resp.deployments[0].deploymentID)",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deployments\": [\n    {\n      \"parameters\": {\n        \"pools\": [\n          {\n            \"poolName\": \"pool_{{app_name}}\",\n            \"poolMembers\": [\n              {\n                \"address\": \"{{example_web}}\",\n                \"name\": \"poolmember1\"\n              }\n            ]\n          }\n        ],\n        \"virtuals\": [\n          {\n            \"virtualAddress\": \"{{vip1}}\",\n            \"virtualName\": \"vs_{{app_name}}\"\n          }\n        ]\n      },\n      \"target\": {\n        \"address\": \"{{bigip_next_3_address}}\"\n      },\n      \"allow_overwrite\": true\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Access Sessions-All",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/access-sessions",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"access-sessions"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Policies GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"mbiq_policy_id\", pm.response.json()._embedded.policies[0].id);\r",
											"\r",
											"var policy_name_1 = \"Allow-Demo\"\r",
											"var resp = pm.response.json();\r",
											"pm.collectionVariables.set(\"mbiq_policy_id\", resp[\"_embedded\"][\"policies\"][0][\"id\"])\r",
											"pm.collectionVariables.set(\"mbiq_policy_name\", resp[\"_embedded\"][\"policies\"][0][\"name\"])\r",
											"var resp_policy_name_1 = pm.collectionVariables.get(\"mbiq_policy_name\")\r",
											"\r",
											"if ( policy_name_1  === resp_policy_name_1 ) {\r",
											"pm.test(\"Policy Found\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"}else {\r",
											"\r",
											"pm.test(\"Policy Not Found\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Machine Tunnel+Cert Authentication",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Login status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var resp = pm.response.json();\r",
											"pm.environment.set(\"bigip_next_cm_token\", resp.access_token);\r",
											"pm.collectionVariables.set(\"bigip_next_cm_token\", resp.access_token);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"{{bigip_next_cm_admin_password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/login",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Certificate to CM",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ADDC_CA\",\r\n    \"cert_text\": \"-----BEGIN CERTIFICATE-----\\nMIID0DCCArigAwIBAgIQLWxK0Hm+IZlKGxi9gtA3WTANBgkqhkiG9w0BAQ0FADBn\\nMRMwEQYKCZImiZPyLGQBGRYDY29tMRswGQYKCZImiZPyLGQBGRYLb25taWNyb3Nv\\nZnQxGDAWBgoJkiaJk/IsZAEZFghmNWFjY2VzczEZMBcGA1UEAxMQZjVhY2Nlc3Mt\\nQUREQy1DQTAeFw0yNDAyMTUxNzIwMTVaFw0yOTAyMTUxNzMwMTVaMGcxEzARBgoJ\\nkiaJk/IsZAEZFgNjb20xGzAZBgoJkiaJk/IsZAEZFgtvbm1pY3Jvc29mdDEYMBYG\\nCgmSJomT8ixkARkWCGY1YWNjZXNzMRkwFwYDVQQDExBmNWFjY2Vzcy1BRERDLUNB\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxmGhjUHTMcyWiOQfGQnv\\nQ7zavFQeluLv66cKp58bcDCAsjGOZSo602IIEBHwdHUmtTGw9KrXdQEK7kDbRdtv\\nRx2ats4I7wcWqOHfptd/nlRJDsdychCiZepgQKk6X0ppslvlGTmAVp6uPTwmWmCF\\n4e9fQI2QfhY5inmGhZapnM7LBakU4B/cEo0wQTSfoCWVc69Yd9pIqWq+/fP1Nx+Y\\n/0jbozUCnjZJYkktxfHH01RE4TC2md55DG7uZ0bkXTNO2Vj8PGOMhz37Px4DVgiW\\nfmB4/2oKNGhbIyPp8535a0GAWHlvJEHA5a2O8rO61UZwOm15i+9da8KBoPm9A0jR\\nZQIDAQABo3gwdjALBgNVHQ8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4E\\nFgQUp9u/0o0Ku4sN3nCIHsGRsMLRTykwEgYJKwYBBAGCNxUBBAUCAwIAAjAjBgkr\\nBgEEAYI3FQIEFgQUAcrvU5P8mjpkz5op7nK3Qx6STBswDQYJKoZIhvcNAQENBQAD\\nggEBAKppzwx2iyt6KERPtGOG8psOjzcQ7ZEleCQa8I2kjl34aaUmKtUBz/4sraih\\ncy9KbBc1sUpPstCu5D3Lk0CD6xmQji+cc4olOQWWqltJwI+4zKNlEFAiGbMESmUm\\n5NQNbEXGA/iD9OBUAW6qqndDwQITfNpNGoAAykLMFOpRQlkkrlgYjCnUJWexfJjp\\naVNu4Dh77iXq29bgjAzTuws89bI2FuelR3dNwB5PeBQ4XH2IIzOAdnShmOVpnxgl\\nCjBapVnpFhgQOeQ1Hy4mkjFYYM/HXwlHGzFsqGMNwaQayhMnrOr9AktVYpfDLom1\\nqNi9q/fR5NuSolp/4HmIZRynB7k=\\n-----END CERTIFICATE-----\",\r\n    \"item_type\": \"PEM\"\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/certificate/v1/certificates/import",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"certificate",
										"v1",
										"certificates",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create MachineTunnel_Cert Policy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"psp_policy_name\", \"machine_tunnel_policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{psp_policy_name}}\",\n\t\"policy_type\": \"PerSession\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"configuration\": {\n\t\t\t\t\"domainCookie\": \"\",\n\t\t\t\t\"externalServers\": [],\n\t\t\t\t\"httpOnlyCookie\": false,\n\t\t\t\t\"inactivityTimeout\": 900,\n\t\t\t\t\"leasePools\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"leasePoolType\": \"ipv4-lease-pool\",\n\t\t\t\t\t\t\"name\": \"{{psp_policy_name}}ipv4-pool\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"logoutUriInclude\": \"\",\n\t\t\t\t\"logoutUriTimeout\": 5,\n\t\t\t\t\"maxConcurrentSessions\": 0,\n\t\t\t\t\"maxConcurrentUsers\": 0,\n\t\t\t\t\"maxFailureDelay\": 5,\n\t\t\t\t\"maxInProgressSessions\": 128,\n\t\t\t\t\"maxSessionTimeout\": 604800,\n\t\t\t\t\"minFailureDelay\": 2,\n\t\t\t\t\"name\": \"{{psp_policy_name}}\",\n\t\t\t\t\"persistentCookie\": false,\n\t\t\t\t\"policy\": {\n\t\t\t\t\t\"objectContent\": {\n\t\t\t\t\t\t\"defaultLanguage\": \"en\",\n\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"deny\",\n\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"allow\",\n\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"languages\": [\n\t\t\t\t\t\t\t\"en\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"macros\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"Empty898a4640\",\n\t\t\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\"itemType\": \"aaa-on-demand-client-cert\",\n\t\t\t\t\t\t\t\t\t\"mode\": \"require\",\n\t\t\t\t\t\t\t\t\t\"name\": \"On-Demand-Certificate-Authentication-99cd6ed3\",\n\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Successful\",\n\t\t\t\t\t\t\t\t\t\t\t\"expression\": \"expr {[mcget {session.ssl.cert.valid}] == \\\"0\\\"}\",\n\t\t\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"resource-assign\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Advanced-Resource-Assign-bb16b735\",\n\t\t\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"ruleId\": \"Advanced-Resource-Assign-4a156850\",\n\t\t\t\t\t\t\t\t\t\t\t\"ruleType\": \"resource-assign\",\n\t\t\t\t\t\t\t\t\t\t\t\"rules\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"expression\": \"expr {[mcget {session.client.app_id}] == \\\"edge\\\" || [mcget {session.client.app_id}] == \\\"machine_tunnel\\\"}\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"networkAccessResources\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Network-Access-518be4d8\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"webtopName\": \"Webtop-d1f142ee\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"ruleId\": \"On-Demand-Certificate-5bf7cbdb\",\n\t\t\t\t\t\t\t\t\t\"ruleType\": \"aaa-on-demand-client-cert\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\"itemType\": \"macro-call\",\n\t\t\t\t\t\t\t\"macro\": \"Empty898a4640\",\n\t\t\t\t\t\t\t\"name\": \"Empty-965afa38\",\n\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Deny\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"deny\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"allow\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"policyType\": \"PerSession\",\n\t\t\t\t\"profileType\": \"all\",\n\t\t\t\t\"resources\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"addressSpaceExcludeDnsNames\": [],\n\t\t\t\t\t\t\"addressSpaceIncludeDnsNames\": [],\n\t\t\t\t\t\t\"addressSpaceLocalDnsServersExcluded\": false,\n\t\t\t\t\t\t\"addressSpaceLocalSubnetsExcluded\": false,\n\t\t\t\t\t\t\"addressSpaceProtect\": false,\n\t\t\t\t\t\t\"addressSpaceSubnetsExclude\": [],\n\t\t\t\t\t\t\"addressSpaceSubnetsInclude\": [],\n\t\t\t\t\t\t\"autolaunch\": false,\n\t\t\t\t\t\t\"clientIpFilterEngine\": false,\n\t\t\t\t\t\t\"compression\": \"none\",\n\t\t\t\t\t\t\"dnsHostConfig\": {\n\t\t\t\t\t\t\t\"enforceSearchOrder\": true,\n\t\t\t\t\t\t\t\"registerConnection\": false,\n\t\t\t\t\t\t\t\"useDnsSuffixForRegistration\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"driveMappings\": [],\n\t\t\t\t\t\t\"idleTimeoutThreshold\": 0,\n\t\t\t\t\t\t\"idleTimeoutWindow\": 0,\n\t\t\t\t\t\t\"ipv6AddressSpaceSubnetsExclude\": [],\n\t\t\t\t\t\t\"ipv6AddressSpaceSubnetsInclude\": [],\n\t\t\t\t\t\t\"launchApplications\": [],\n\t\t\t\t\t\t\"leasePoolName\": \"{{psp_policy_name}}ipv4-pool\",\n\t\t\t\t\t\t\"microsoftNetworkClient\": true,\n\t\t\t\t\t\t\"microsoftNetworkServer\": false,\n\t\t\t\t\t\t\"naOptimizedApps\": [],\n\t\t\t\t\t\t\"name\": \"Network-Access-518be4d8\",\n\t\t\t\t\t\t\"networkTunnelEnabled\": true,\n\t\t\t\t\t\t\"preserveSourcePortStrict\": \"none\",\n\t\t\t\t\t\t\"proxyArp\": false,\n\t\t\t\t\t\t\"resourceType\": \"ConnectivityResourceNetworkAccess\",\n\t\t\t\t\t\t\"snatType\": \"automap\",\n\t\t\t\t\t\t\"splitTunneling\": false,\n\t\t\t\t\t\t\"staticHosts\": [],\n\t\t\t\t\t\t\"warnBeforeApplicationLaunch\": true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"fallbackSectionInitialState\": \"expanded\",\n\t\t\t\t\t\t\"minimizeToTray\": true,\n\t\t\t\t\t\t\"name\": \"Webtop-d1f142ee\",\n\t\t\t\t\t\t\"resourceType\": \"WebtopFull\",\n\t\t\t\t\t\t\"showResourceSearch\": true,\n\t\t\t\t\t\t\"showUrlEntryField\": false,\n\t\t\t\t\t\t\"showWarningWhenClosed\": true\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"restrictToSingleClientIP\": false,\n\t\t\t\t\"samesiteCookie\": false,\n\t\t\t\t\"samesiteCookieAttrValue\": \"strict\",\n\t\t\t\t\"scope\": \"profile\",\n\t\t\t\t\"secureCookie\": false,\n\t\t\t\t\"timeout\": 300,\n\t\t\t\t\"useHttp503OnError\": false,\n\t\t\t\t\"userIdentityMethod\": \"http\"\n\t\t\t},\n\t\t\t\"connectivityProfileConfiguration\": {\n\t\t\t\t\"clientPolicy\": {\n\t\t\t\t\t\"androidEcRequireDeviceAuth\": false,\n\t\t\t\t\t\"androidEcSavePasswordMethod\": \"disk\",\n\t\t\t\t\t\"androidEcSavePasswordTimeout\": 240,\n\t\t\t\t\t\"chromeosEcLogonMethod\": \"native\",\n\t\t\t\t\t\"chromeosEcSavePasswordMethod\": \"disk\",\n\t\t\t\t\t\"chromeosEcSavePasswordTimeout\": 240,\n\t\t\t\t\t\"ecComponentUpdate\": \"yes\",\n\t\t\t\t\t\"ecLocationDnsList\": [],\n\t\t\t\t\t\"ecReuseWinlogonCreds\": false,\n\t\t\t\t\t\"ecReuseWinlogonSession\": false,\n\t\t\t\t\t\"ecRunLogoffScript\": false,\n\t\t\t\t\t\"ecSavePasswordMethod\": \"none\",\n\t\t\t\t\t\"ecSavePasswordTimeout\": 240,\n\t\t\t\t\t\"ecSaveServersOnExit\": true,\n\t\t\t\t\t\"ecWarnBeforeScriptLaunch\": true,\n\t\t\t\t\t\"iosEcRequireDeviceAuth\": false,\n\t\t\t\t\t\"iosEcSavePasswordMethod\": \"disk\",\n\t\t\t\t\t\"iosEcSavePasswordTimeout\": 240,\n\t\t\t\t\t\"macosEcLogonMethod\": \"native\",\n\t\t\t\t\t\"macosEcSavePasswordMethod\": \"disk\",\n\t\t\t\t\t\"macosEcSavePasswordTimeout\": 240,\n\t\t\t\t\t\"serverList\": []\n\t\t\t\t},\n\t\t\t\t\"compressBufferSize\": 4096,\n\t\t\t\t\"compressCpusaver\": true,\n\t\t\t\t\"compressCpusaverHigh\": 90,\n\t\t\t\t\"compressCpusaverLow\": 75,\n\t\t\t\t\"compressGzipLevel\": 6,\n\t\t\t\t\"compressGzipMemlevel\": 8192,\n\t\t\t\t\"compressGzipWindowsize\": 16384,\n\t\t\t\t\"compressionAdaptive\": true,\n\t\t\t\t\"compressionCodecs\": [],\n\t\t\t\t\"compressionDeflateLevel\": 1,\n\t\t\t\t\"pppTunnel\": {\n\t\t\t\t\t\"profilePpp\": {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"loggingConfiguration\": [\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"apmd\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"tmm\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"websso\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"renderer\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"id = resp.id;",
											"pm.collectionVariables.set(\"fast_path\", resp.path);",
											"pm.collectionVariables.set(\"appsvc-id\", id)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"machine_tunnel_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"machine_tunnel_policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{app_name}}\",\n  \"set_name\": \"Examples\",\n  \"template_name\": \"http\",\n  \"description\": \"{{app_name}}-description\",\n  \"parameters\": {\n    \"application_name\": \"{{app_name}}\",\n    \"application_description\": \"{{app_name}}-description\",\n    \"enable_Global_Resiliency\": false,\n    \"monitors\": [],\n    \"pools\": [],\n    \"virtuals\": [\n      {\n        \"FastL4_idleTimeout\": 600,\n        \"FastL4_looseClose\": true,\n        \"FastL4_looseInitialization\": true,\n        \"FastL4_resetOnTimeout\": true,\n        \"FastL4_tcpCloseTimeout\": 43200,\n        \"FastL4_tcpHandshakeTimeout\": 43200,\n        \"TCP_idle_timeout\": 60,\n        \"UDP_idle_timeout\": 60,\n\t\t\"is_virtual_type_standard\": true,\n\t\t\"auto_last_hop\": \"auto\",\n\t\t\"enable_Access\": true,\n\t\t\"accessPolicyEnum\": \"{{psp_policy_name}}\",\n        \"accessAdditionalConfigurations\": \" \",\n        \"enable_FastL4\": false,\n        \"enable_HTTP2_Profile\": false,\n        \"enable_TCP_Profile\": false,\n        \"enable_TLS_Client\": true,\n        \"enable_TLS_Server\": false,\n        \"enable_UDP_Profile\": false,\n        \"enable_snat\": true,\n        \"snat_addresses\": [],\n        \"snat_automap\": true,\n        \"enable_WAF\": false,\n        \"enable_iRules\": false,\n        \"virtualPort\": 443,\n        \"pool\": \"\",\n        \"virtualName\": \"vs_{{app_name}}\",\n\t\t\"virtualType\": \"standard\",\n        \"multiCertificatesEnum\": [\n          {\n\t\t\t\"advanced_configuration\": false,\n\t\t\t\"authentication_depth\": 9,\n\t\t\t\"authentication_frequency\": \"one-time\",\n\t\t\t\"ciphers\": \"DEFAULT\",\n\t\t\t\"clientTlsName\": \"clienttls-cert\",\n\t\t\t\"dh_groups\": \"DEFAULT\",\n\t\t\t\"ecdsaCertificate\": \"\",\n\t\t\t\"enable_authentication\": true,\n\t\t\t\"rsaCertificate\": \"self_demo.f5.com\",\n\t\t\t\"signature_algorithms\": \"DEFAULT\",\n\t\t\t\"sniDefault\": true,\n\t\t\t\"sniServers\": [],\n\t\t\t\"tls_c_1_1\": false,\n\t\t\t\"tls_c_1_2\": true,\n\t\t\t\"tls_c_1_3\": false,\n\t\t\t\"trustCACertificate\": \"CA-DEMO\",\n\t\t\t\"useMultiCerts\": false\n          }\n        ]\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deploy Application to Instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)",
											"pm.collectionVariables.set(\"deploymentID\", resp.deployments[0].deploymentID)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"machine_tunnel_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"machine_tunnel_policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"allow_overwrite\": true,\n  \"deployments\": [\n    {\n\t  \"additional_parameters\": {\n\t\t\t\"access\": [\n\t\t\t\t{\n\t\t\t\t\t\"leasePools\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"leasePoolType\": \"ipv4-lease-pool\",\n\t\t\t\t\t\t\t\"members\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"endAddr\": \"10.1.20.110\",\n\t\t\t\t\t\t\t\t\t\"startAddr\": \"10.1.20.100\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"{{psp_policy_name}}ipv4-pool\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"policyName\": \"{{psp_policy_name}}\",\n\t\t\t\t\t\"serverPools\": [],\n\t\t\t\t\t\"trafficPools\": []\n\t\t\t\t}\n\t\t\t]\n\t\t},\n      \"parameters\": {\n        \"pools\": [\n\n        ],\n        \"virtuals\": [\n          {\n            \"virtualAddress\": \"10.1.10.160\",\n            \"virtualName\": \"vs_{{app_name}}\"\n          }\n        ]\n      },\n      \"target\": {\n        \"address\": \"{{bigip_next_3_address}}\"\n      },\n      \"allow_overwrite\": true\n    }\n  ],\n    \"application_name\": \"{{app_name}}\"\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Access Sessions-All",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/access-sessions",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"access-sessions"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Policies GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"mbiq_policy_id\", pm.response.json()._embedded.policies[0].id);\r",
											"\r",
											"var policy_name_1 = \"Allow-Demo\"\r",
											"var resp = pm.response.json();\r",
											"pm.collectionVariables.set(\"mbiq_policy_id\", resp[\"_embedded\"][\"policies\"][0][\"id\"])\r",
											"pm.collectionVariables.set(\"mbiq_policy_name\", resp[\"_embedded\"][\"policies\"][0][\"name\"])\r",
											"var resp_policy_name_1 = pm.collectionVariables.get(\"mbiq_policy_name\")\r",
											"\r",
											"if ( policy_name_1  === resp_policy_name_1 ) {\r",
											"pm.test(\"Policy Found\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"}else {\r",
											"\r",
											"pm.test(\"Policy Not Found\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "SAML-Okta-Signed Policy",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Login status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var resp = pm.response.json();\r",
											"pm.environment.set(\"bigip_next_cm_token\", resp.access_token);\r",
											"pm.collectionVariables.set(\"bigip_next_cm_token\", resp.access_token);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"{{bigip_next_cm_admin_password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/login",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Certificate",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "filename",
											"value": "cert_okta_idp",
											"type": "default"
										},
										{
											"key": "file",
											"value": "",
											"type": "default"
										}
									]
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/certificate/v1/certificates",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"certificate",
										"v1",
										"certificates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Certificate to CM",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"okta_signed_cert\",\r\n    \"cert_text\": \"-----BEGIN CERTIFICATE-----\\nMIIDpDCCAoygAwIBAgIGAYMipe6XMA0GCSqGSIb3DQEBCwUAMIGSMQswCQYDVQQGEwJVUzETMBEG\\nA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEU\\nMBIGA1UECwwLU1NPUHJvdmlkZXIxEzARBgNVBAMMCmRldi04MTg4OTkxHDAaBgkqhkiG9w0BCQEW\\nDWluZm9Ab2t0YS5jb20wHhcNMjIwOTA5MTQyNjIzWhcNMzIwOTA5MTQyNzIzWjCBkjELMAkGA1UE\\nBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNV\\nBAoMBE9rdGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRMwEQYDVQQDDApkZXYtODE4ODk5MRwwGgYJ\\nKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\nmFlmAz5VmSklL6Z7EKriaV79Ff5xyFMDiAdZOFfX5/I65FV9aJaU9jqKLS+gfiAJjhbkdCxtEXW1\\nQKkDLV6LqXmlWJxhts/j6JhUjd9diUI6cGpyoZ0uDKs0MUxGB3KK/movVQ63bXZqLTtdCPKb9ew1\\nYQYMCn3B7b/Y7XLGQm+dOhjPst6RIrxGzcaIzFasU93O0ksJmRk3f76jn5KTp+VPPo6q7FcI+WB0\\nZze8jaO8hKAG3BwkHQiM1L8KirXXQwfUIsGmyZEEVouCvqa6pOB5wxp4oI4RlcqepzNq7UOWHdpd\\n4qvP9VEi8Oy1agMf28eIfth4/rs0PYiJif8BXQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCOuwwa\\nNHDsQHGvdVTtxJUHQWtLDftp1v7WCLRIeKDy53Jr5wNVhVKYPk2lHlK1W8VBatNwfIwksF/0IloU\\nSLtHFbIkgUrLwBtLXG8zPHo8cAcYWgT3WK8UOli568D0p179OeosPJ24V5LRVulKIBzAvuYXt2u1\\nhTqr+s8EyVWB1jX/tJTHf+mJsxq8VsvfOoe2ddbncwkMTgI2RwkZA6nqyq3fpFAD3BWMJnbV8onW\\nKaNu1L01GGpC55CXckdp1uKtePZ6Gdcl0EnWJzkJ/cgm2NlCkageo9VxAxO4YuC7Iko7w28PfWY9\\nW5QddRVQVsBqBt2wOBmUPElhUUBHCZsE\\n-----END CERTIFICATE-----\",\r\n    \"item_type\": \"PEM\"\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/certificate/v1/certificates/import",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"certificate",
										"v1",
										"certificates",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Signed Okta Policy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"psp_policy_name\", \"access_okta_policy\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{psp_policy_name}}\",\n\t\"policy_type\": \"PerSession\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"configuration\": {\n\t\t\t\t\"connectivityAccessPolicyName\": \"{{psp_policy_name}}_cap\",\n\t\t\t\t\"domainCookie\": \"\",\n\t\t\t\t\"externalServers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"certificate\": \"okta_signed_cert.crt\",\n\t\t\t\t\t\t\"entityId\": \"{{access_okta_signed_EntityID}}\",\n\t\t\t\t\t\t\"name\": \"Idp\",\n\t\t\t\t\t\t\"serverType\": \"SamlIdPConnector\",\n\t\t\t\t\t\t\"signatureType\": \"sha256\",\n\t\t\t\t\t\t\"ssoBinding\": \"http-post\",\n\t\t\t\t\t\t\"ssoUri\": \"{{access_okta_signed_SSOURI}}\",\n\t\t\t\t\t\t\"wantAuthnRequestSigned\": false\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"httpOnlyCookie\": false,\n\t\t\t\t\"inactivityTimeout\": 900,\n\t\t\t\t\"logoutUriTimeout\": 5,\n\t\t\t\t\"maxConcurrentSessions\": 0,\n\t\t\t\t\"maxConcurrentUsers\": 0,\n\t\t\t\t\"maxFailureDelay\": 5,\n\t\t\t\t\"maxInProgressSessions\": 128,\n\t\t\t\t\"maxSessionTimeout\": 604800,\n\t\t\t\t\"minFailureDelay\": 2,\n\t\t\t\t\"name\": \"{{psp_policy_name}}\",\n\t\t\t\t\"persistentCookie\": false,\n\t\t\t\t\"policy\": {\n\t\t\t\t\t\"objectContent\": {\n\t\t\t\t\t\t\"defaultLanguage\": \"en\",\n\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"deny\",\n\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"allow\",\n\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"languages\": [\n\t\t\t\t\t\t\t\"en\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"macros\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"Generic-SAML-Federation\",\n\t\t\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\"itemType\": \"saml\",\n\t\t\t\t\t\t\t\t\t\"name\": \"SAML-Federation\",\n\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\t\t\"expression\": \"expr {[mcget {session.saml.last.result}] == 1}\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"ruleType\": \"saml\",\n\t\t\t\t\t\t\t\t\t\"service\": {\n\t\t\t\t\t\t\t\t\t\t\"acsBinding\": \"http-post\",\n\t\t\t\t\t\t\t\t\t\t\"entityId\": \"{{access_okta_signed_SPEntityID}}\",\n\t\t\t\t\t\t\t\t\t\t\"idpConnectors\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Idp\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\"name\": \"SAML-Federation\",\n\t\t\t\t\t\t\t\t\t\t\"spURI\": \"{{access_okta_signed_SPURI}}\",\n\t\t\t\t\t\t\t\t\t\t\"wantAssertionEncrypted\": false,\n\t\t\t\t\t\t\t\t\t\t\"wantAssertionSigned\": true\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\"itemType\": \"macro-call\",\n\t\t\t\t\t\t\t\"macro\": \"Generic-SAML-Federation\",\n\t\t\t\t\t\t\t\"name\": \"Generic-SAML-Federation\",\n\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"allow\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Deny\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"deny\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"policyType\": \"PerSession\",\n\t\t\t\t\"profileType\": \"all\",\n\t\t\t\t\"restrictToSingleClientIP\": false,\n\t\t\t\t\"scope\": \"profile\",\n\t\t\t\t\"secureCookie\": false,\n\t\t\t\t\"timeout\": 300,\n\t\t\t\t\"useHttp503OnError\": false\n\t\t\t},\n\t\t\t\"connectivityProfileConfiguration\": {\n\t\t\t\t\"clientPolicy\": {\n\t\t\t\t\t\"ecLocationDnsList\": [],\n\t\t\t\t\t\"name\": \"{{psp_policy_name}}_cap_clientPolicy\"\n\t\t\t\t},\n\t\t\t\t\"name\": \"{{psp_policy_name}}_cap\",\n\t\t\t\t\"policyType\": \"ConnectivityAccessPolicy\",\n\t\t\t\t\"pppTunnel\": {\n\t\t\t\t\t\"profilePpp\": {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"loggingConfiguration\": [\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"apmd\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"tmm\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"websso\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"renderer\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"id = resp.id;",
											"pm.collectionVariables.set(\"fast_path\", resp.path);",
											"pm.collectionVariables.set(\"appsvc-id\", id)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"access_okta_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"access_okta_policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{app_name}}\",\n  \"set_name\": \"Examples\",\n  \"template_name\": \"http\",\n  \"description\": \"{{app_name}}-description\",\n  \"parameters\": {\n    \"application_name\": \"{{app_name}}\",\n    \"application_description\": \"{{app_name}}-description\",\n    \"enable_Global_Resiliency\": false,\n    \"monitors\": [\n      {\n        \"interval\": 5,\n        \"isDefault\": true,\n        \"isHttpMonitor\": true,\n        \"monitorName\": \"http\",\n        \"monitorType\": \"http\",\n        \"receiveString\": \".*\",\n        \"sendString\": \"GET / HTTP/1.0\\\\r\\\\n\\\\r\\\\n\",\n        \"timeout\": 16\n      }\n    ],\n    \"pools\": [\n      {\n        \"loadBalancingMode\": \"round-robin\",\n        \"loadBalancingRatio\": 10,\n        \"monitorType\": [\n          \"http\"\n        ],\n        \"servicePort\": 80,\n        \"application_name\": \"{{app_name}}\",\n        \"poolName\": \"pool_{{app_name}}\"\n      }\n    ],\n    \"virtuals\": [\n      {\n        \"FastL4_idleTimeout\": 600,\n        \"FastL4_looseClose\": true,\n        \"FastL4_looseInitialization\": true,\n        \"FastL4_resetOnTimeout\": true,\n        \"FastL4_tcpCloseTimeout\": 43200,\n        \"FastL4_tcpHandshakeTimeout\": 43200,\n        \"TCP_idle_timeout\": 60,\n        \"UDP_idle_timeout\": 60,\n\t\t\"is_virtual_type_standard\": true,\n\t\t\"auto_last_hop\": \"auto\",\n\t\t\"enable_Access\": true,\n\t\t\"accessPolicyEnum\": \"{{psp_policy_name}}\",\n        \"accessAdditionalConfigurations\": \" \",\n        \"enable_FastL4\": false,\n        \"enable_HTTP2_Profile\": false,\n        \"enable_TCP_Profile\": false,\n        \"enable_TLS_Client\": true,\n        \"enable_TLS_Server\": false,\n        \"enable_UDP_Profile\": false,\n        \"enable_snat\": true,\n        \"snat_addresses\": [],\n        \"snat_automap\": true,\n        \"enable_WAF\": false,\n        \"enable_iRules\": false,\n        \"virtualPort\": 443,\n        \"pool\": \"pool_{{app_name}}\",\n        \"virtualName\": \"vs_{{app_name}}\",\n\t\t\"virtualType\": \"standard\",\n        \"multiCertificatesEnum\": [\n          {\n\t\t\t\"advanced_configuration\": false,\n\t\t\t\"authentication_depth\": 9,\n\t\t\t\"authentication_frequency\": \"one-time\",\n\t\t\t\"ciphers\": \"DEFAULT\",\n\t\t\t\"clientTlsName\": \"clienttls-cert\",\n\t\t\t\"dh_groups\": \"DEFAULT\",\n\t\t\t\"ecdsaCertificate\": \"\",\n\t\t\t\"enable_authentication\": false,\n\t\t\t\"rsaCertificate\": \"self_demo.f5.com\",\n\t\t\t\"signature_algorithms\": \"DEFAULT\",\n\t\t\t\"sniDefault\": true,\n\t\t\t\"sniServers\": [],\n\t\t\t\"tls_c_1_1\": false,\n\t\t\t\"tls_c_1_2\": true,\n\t\t\t\"tls_c_1_3\": false,\n\t\t\t\"trustCACertificate\": \"\",\n\t\t\t\"useMultiCerts\": false\n          }\n        ]\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deploy Application to Instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)",
											"pm.collectionVariables.set(\"deploymentID\", resp.deployments[0].deploymentID)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"access_okta_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"access_okta_policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deployments\": [\n    {\n      \"parameters\": {\n        \"pools\": [\n          {\n            \"poolName\": \"pool_{{app_name}}\",\n            \"poolMembers\": [\n              {\n                \"address\": \"{{example_web}}\",\n                \"name\": \"poolmember1\"\n              }\n            ]\n          }\n        ],\n        \"virtuals\": [\n          {\n            \"virtualAddress\": \"{{access_okta_signed_vip}}\",\n            \"virtualName\": \"vs_{{app_name}}\"\n          }\n        ]\n      },\n      \"target\": {\n        \"address\": \"{{bigip_next_3_address}}\"\n      },\n      \"allow_overwrite\": true\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Access Sessions-All",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/access-sessions",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"access-sessions"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Policies GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"mbiq_policy_id\", pm.response.json()._embedded.policies[0].id);\r",
											"\r",
											"var policy_name_1 = \"Allow-Demo\"\r",
											"var resp = pm.response.json();\r",
											"pm.collectionVariables.set(\"mbiq_policy_id\", resp[\"_embedded\"][\"policies\"][0][\"id\"])\r",
											"pm.collectionVariables.set(\"mbiq_policy_name\", resp[\"_embedded\"][\"policies\"][0][\"name\"])\r",
											"var resp_policy_name_1 = pm.collectionVariables.get(\"mbiq_policy_name\")\r",
											"\r",
											"if ( policy_name_1  === resp_policy_name_1 ) {\r",
											"pm.test(\"Policy Found\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"}else {\r",
											"\r",
											"pm.test(\"Policy Not Found\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Multi-IdP",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Login status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var resp = pm.response.json();\r",
											"pm.environment.set(\"bigip_next_cm_token\", resp.access_token);\r",
											"pm.collectionVariables.set(\"bigip_next_cm_token\", resp.access_token);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"{{bigip_next_cm_admin_password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/login",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Certificate to CM",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"azure_signedexample_cert\",\r\n    \"cert_text\": \"-----BEGIN CERTIFICATE-----\\nMIIC8DCCAdigAwIBAgIQHRGB29ORs4pA8ZdW327kuzANBgkqhkiG9w0BAQsFADA0MTIwMAYDVQQD\\nEylNaWNyb3NvZnQgQXp1cmUgRmVkZXJhdGVkIFNTTyBDZXJ0aWZpY2F0ZTAeFw0yMjA5MDkxNDA0\\nMDFaFw0yNTA5MDkxNDA0MDBaMDQxMjAwBgNVBAMTKU1pY3Jvc29mdCBBenVyZSBGZWRlcmF0ZWQg\\nU1NPIENlcnRpZmljYXRlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0Ku8GD9D+ipo\\nQnASgGQAOm6hhiQTZSif5SjUtzLcc1+I4+3nrlldLn6f9G2DxBPeOpWvH+elo9ie4QPWnnZryQOv\\nwf7FuIFJDj0aflMFAfQUtfqQUdMO0Iqk7/k0y45Ccr80HHzlXRd/mtNgGDqxPrYO0gx04itK8qg9\\nD/ekLBD79+qKiDb+OhH6ojVRrVMRS0iKbCQuSE4HuFXAE9dX+KI4dJ23YwIKX4y7GiKwVx/YVxtk\\nfqe+8mv/VZtBkbtEip4Paouep6PG++6HmUkaT/xBTKVM972eKRpk09pGoWN+tQP1oZdiu1/pzk6U\\nFR3acT4dAg4WN1tbM+RnjSy+rQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCv1BBv5GfKP5x/C0zj\\nS2YZxmSvmwZqW63V2mFq0lxLsTpV7k2zbSU7qcnhapQDAFpJp9Jy3SCzQ/Ne2tU/zuolb0HKcc2X\\nP9D+ft+8/kYqR77cKOMZkgM0+kNApbONHwiQ2l6XWkG0UmZXf8agtrB49BTZm4xp03qZHGC0g3Gy\\nK4+6t4pvUeZWrMMytTDg/LYiX5oWML0W0t+FupcyTXv1egTJM5vpAyl3pNgPUVU0tTwIC9DTTQOk\\nL3BJ04BrMqp/98jsWlzu8SP0F6xSN7LSvglTdMlDIgbNa4SP8tJxSf6R0BWcLXYjp+/VFBdsdtUD\\njrw/z1pMOXksIKqqbdXO\\n-----END CERTIFICATE-----\",\r\n    \"item_type\": \"PEM\"\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/certificate/v1/certificates/import",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"certificate",
										"v1",
										"certificates",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Access Policy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"psp_policy_name\", \"access_midp_policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{psp_policy_name}}\",\n\t\"policy_type\": \"PerSession\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"configuration\": {\n\t\t\t\t\"domainCookie\": \"\",\n\t\t\t\t\"epsec\": {\n\t\t\t\t\t\"file\": \"\"\n\t\t\t\t},\n\t\t\t\t\"externalServers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"certificate\": \"okta_signed_cert.crt\",\n\t\t\t\t\t\t\"entityId\": \"http://www.okta.com/exk93cs4on3gGVej44x7\",\n\t\t\t\t\t\t\"name\": \"Idp-e23acc60\",\n\t\t\t\t\t\t\"serverType\": \"SamlIdPConnector\",\n\t\t\t\t\t\t\"signatureType\": \"sha256\",\n\t\t\t\t\t\t\"ssoBinding\": \"http-post\",\n\t\t\t\t\t\t\"ssoUri\": \"https://dev-818899.okta.com/app/dev-818899_signedexamplecom_1/exk93cs4on3gGVej44x7/sso/saml\",\n\t\t\t\t\t\t\"wantAuthnRequestSigned\": false\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"certificate\": \"azure_signedexample_cert.crt\",\n\t\t\t\t\t\t\"entityId\": \"https://sts.windows.net/8807dced-9637-4205-a520-423077750c60/\",\n\t\t\t\t\t\t\"name\": \"Idp-2d21f82d\",\n\t\t\t\t\t\t\"serverType\": \"SamlIdPConnector\",\n\t\t\t\t\t\t\"signatureType\": \"sha256\",\n\t\t\t\t\t\t\"ssoBinding\": \"http-redirect\",\n\t\t\t\t\t\t\"ssoUri\": \"https://login.microsoftonline.com/8807dced-9637-4205-a520-423077750c60/saml2\",\n\t\t\t\t\t\t\"wantAuthnRequestSigned\": false\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"httpOnlyCookie\": false,\n\t\t\t\t\"inactivityTimeout\": 900,\n\t\t\t\t\"logoutUriInclude\": \"\",\n\t\t\t\t\"logoutUriTimeout\": 5,\n\t\t\t\t\"maxConcurrentSessions\": 0,\n\t\t\t\t\"maxConcurrentUsers\": 0,\n\t\t\t\t\"maxFailureDelay\": 5,\n\t\t\t\t\"maxInProgressSessions\": 128,\n\t\t\t\t\"maxSessionTimeout\": 604800,\n\t\t\t\t\"minFailureDelay\": 2,\n\t\t\t\t\"name\": \"{{psp_policy_name}}\",\n\t\t\t\t\"persistentCookie\": false,\n\t\t\t\t\"policy\": {\n\t\t\t\t\t\"objectContent\": {\n\t\t\t\t\t\t\"defaultLanguage\": \"en\",\n\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"deny\",\n\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"allow\",\n\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"languages\": [\n\t\t\t\t\t\t\t\"en\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"macros\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"Emptyc8e8624a\",\n\t\t\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\"customization\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"language\": \"en\",\n\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"changePassword\": \"Change password\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"dontChangePassword\": \"Do not change password\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"formHeader\": \"Secure Logon for F5 Networks\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logon\": \"Logon\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_1\": \"Username\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_2\": \"Password\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_3\": \"Field 3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_4\": \"Field 4\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_5\": \"Field 5\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonOriginalUrl\": \"Click here if already logged in\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"newPassword\": \"New Password\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"no\": \"No\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"pageTitle\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"passwordVerifyDontMatch\": \"Password and confirmation do not match.\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"savePassword\": \"Save Password\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_1\": \"Username\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_2\": \"Password\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_3\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_4\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_5\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"verifyPassword\": \"Confirm Password\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"yes\": \"Yes\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"language\": \"de\",\n\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"changePassword\": \"Modifier le mot de passe\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"dontChangePassword\": \"Passwort nicht ändern\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"formHeader\": \"Sichere Anmeldung für F5 Networks\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logon\": \"Anmeldung\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_1\": \"Benutzername\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_2\": \"Passwort\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_3\": \"Feld 3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_4\": \"Feld 4\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_5\": \"Feld 5\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonOriginalUrl\": \"Klicken Sie hier, wenn Sie bereits angemeldet sind\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"newPassword\": \"Neues Passwort\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"no\": \"Ja\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"pageTitle\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"passwordVerifyDontMatch\": \"Passwort und Bestätigung stimmen nicht überein.\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"savePassword\": \"Passwort speichern\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_1\": \"Benutzername\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_2\": \"Passwort\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_3\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_4\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_5\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"verifyPassword\": \"Passwort bestätigen\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"yes\": \"Nein\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"language\": \"es\",\n\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"changePassword\": \"Cambiar contraseña\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"dontChangePassword\": \"No cambie la contraseña\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"formHeader\": \"Inicio de sesión seguro para F5 Networks\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logon\": \"Iniciar sesión\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_1\": \"Nombre de usuario\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_2\": \"Contraseña\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_3\": \"Campo 3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_4\": \"Campo 4\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_5\": \"Campo 5\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonOriginalUrl\": \"Haga clic aquí si ya inició sesión\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"newPassword\": \"Nueva contraseña\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"no\": \"No\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"pageTitle\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"passwordVerifyDontMatch\": \"La contraseña y la confirmación no coinciden.\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"savePassword\": \"Guardar contraseña\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_1\": \"Nombre de usuario\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_2\": \"Contraseña\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_3\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_4\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_5\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"verifyPassword\": \"Verificar contraseña\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"yes\": \"Sí\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"language\": \"it\",\n\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"changePassword\": \"Change password\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"dontChangePassword\": \"Do not change password\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"formHeader\": \"Secure Logon for F5 Networks\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logon\": \"Logon\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_1\": \"Username\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_2\": \"Password\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_3\": \"Campo 3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_4\": \"Campo 4\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_5\": \"Campo 5\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonOriginalUrl\": \"Click here if already logged in\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"newPassword\": \"New Password\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"no\": \"No\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"pageTitle\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"passwordVerifyDontMatch\": \"Password and confirmation do not match.\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"savePassword\": \"Save Password\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_1\": \"Username\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_2\": \"Password\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_3\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_4\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_5\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"verifyPassword\": \"Confirm Password\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"yes\": \"Yes\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"language\": \"fr\",\n\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"changePassword\": \"Changer le mot de passe\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"dontChangePassword\": \"Ne pas changer le mot de passe\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"formHeader\": \"Ouverture de session sécurisée pour F5 Networks\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logon\": \"Ouverture de session\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_1\": \"Nom d’utilisateur\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_2\": \"Mot de passe\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_3\": \"Champ 3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_4\": \"Champ 4\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_5\": \"Champ 5\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonOriginalUrl\": \"Cliquez ici si vous êtes déjà connecté\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"newPassword\": \"Nouveau mot de passe\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"no\": \"Non\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"pageTitle\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"passwordVerifyDontMatch\": \"Le mot de passe et la confirmation de ce mot de passe ne correspondent pas.\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"savePassword\": \"Sauvegarder le mot de passe\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_1\": \"Nom d’utilisateur\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_2\": \"Mot de passe\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_3\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_4\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_5\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"verifyPassword\": \"Vérifier le mot de passe\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"yes\": \"Oui\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"language\": \"ko\",\n\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"changePassword\": \"암호 변경\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"dontChangePassword\": \"암호 변경 안 함\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"formHeader\": \"F5 Networks 보안 로그온\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logon\": \"로그온\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_1\": \"사용자 이름\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_2\": \"암호\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_3\": \"필드 3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_4\": \"필드 4\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_5\": \"필드 5\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonOriginalUrl\": \"이미 로그인한 경우 여기를 클릭합니다 \",\n\t\t\t\t\t\t\t\t\t\t\t\t\"newPassword\": \"새 암호\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"no\": \"아니요\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"pageTitle\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"passwordVerifyDontMatch\": \"입력하신 암호가 일치하지 않습니다.\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"savePassword\": \"암호 저장\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_1\": \"사용자 이름\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_2\": \"암호\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_3\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_4\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_5\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"verifyPassword\": \"암호 확인\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"yes\": \"예\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"language\": \"ja\",\n\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"changePassword\": \"パスワードの変更\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"dontChangePassword\": \"パスワードを変更しない\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"formHeader\": \"F5 Networks セキュアログオン\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logon\": \"ログオン\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_1\": \"ユーザー名\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_2\": \"パスワード\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_3\": \"3番目のフィールド\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_4\": \"第 4 フィールド\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_5\": \"第 5 フィールド\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonOriginalUrl\": \"既にログインしている場合はここをクリックします\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"newPassword\": \"新しいパスワード\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"no\": \"いいえ\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"pageTitle\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"passwordVerifyDontMatch\": \"新しいパスワードと新しいパスワードの確認が一致しません。\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"savePassword\": \"パスワードを保存\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_1\": \"ユーザー名\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_2\": \"パスワード\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_3\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_4\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_5\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"verifyPassword\": \"新しいパスワードの確認\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"yes\": \"はい\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"language\": \"zh-cn\",\n\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"changePassword\": \"更改密码\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"dontChangePassword\": \"不更改密码\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"formHeader\": \"F5 Networks 安全登录\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logon\": \"登录\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_1\": \"用户名\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_2\": \"密码\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_3\": \"字段 3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_4\": \"字段 4\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_5\": \"字段 5\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonOriginalUrl\": \"如果已经登录，请单击此处\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"newPassword\": \"新密码\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"no\": \"否\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"pageTitle\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"passwordVerifyDontMatch\": \"密码和确认密码不相符。\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"savePassword\": \"保存密码\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_1\": \"用户名\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_2\": \"密码\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_3\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_4\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_5\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"verifyPassword\": \"验证密码\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"yes\": \"是\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"language\": \"zh-tw\",\n\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"changePassword\": \"變更密碼\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"dontChangePassword\": \"請勿變更密碼\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"formHeader\": \"F5 Networks 安全登入\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logon\": \"登入\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_1\": \"使用者名稱\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_2\": \"密碼\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_3\": \"欄位 3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_4\": \"欄位 4\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonField_5\": \"欄位 5\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"logonOriginalUrl\": \"如果已登入，請按一下這裡 \",\n\t\t\t\t\t\t\t\t\t\t\t\t\"newPassword\": \"新密碼\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"no\": \"否\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"pageTitle\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"passwordVerifyDontMatch\": \"兩次輸入的密碼不相符\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"savePassword\": \"儲存密碼\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_1\": \"使用者名稱\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_2\": \"密碼\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_3\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_4\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"selectvalues_5\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"verifyPassword\": \"確認密碼\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"yes\": \"是\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"fields\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"cleanSessVar\": false,\n\t\t\t\t\t\t\t\t\t\t\t\"modifiable\": true,\n\t\t\t\t\t\t\t\t\t\t\t\"postVarName\": \"username\",\n\t\t\t\t\t\t\t\t\t\t\t\"selectValues\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\"sessVarName\": \"username\",\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"text\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"cleanSessVar\": false,\n\t\t\t\t\t\t\t\t\t\t\t\"modifiable\": true,\n\t\t\t\t\t\t\t\t\t\t\t\"postVarName\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\"selectValues\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\"sessVarName\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"none\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"cleanSessVar\": false,\n\t\t\t\t\t\t\t\t\t\t\t\"modifiable\": true,\n\t\t\t\t\t\t\t\t\t\t\t\"postVarName\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\"selectValues\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\"sessVarName\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"none\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"cleanSessVar\": false,\n\t\t\t\t\t\t\t\t\t\t\t\"modifiable\": true,\n\t\t\t\t\t\t\t\t\t\t\t\"postVarName\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\"selectValues\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\"sessVarName\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"none\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"cleanSessVar\": false,\n\t\t\t\t\t\t\t\t\t\t\t\"modifiable\": true,\n\t\t\t\t\t\t\t\t\t\t\t\"postVarName\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\"selectValues\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\"sessVarName\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"none\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\"itemType\": \"logon\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Logon-Page-0a581b41\",\n\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"saml\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"SAML-Federation-ccc4e85c\",\n\t\t\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"expression\": \"expr {[mcget {session.saml.last.result}] == 1}\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"ruleId\": \"saml-fc352b83\",\n\t\t\t\t\t\t\t\t\t\t\t\"ruleType\": \"saml\",\n\t\t\t\t\t\t\t\t\t\t\t\"service\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"acsBinding\": \"http-post\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"entityId\": \"https://signed.example.com\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"forceAuthentication\": \"disable\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"idpConnectors\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"matchingSource\": \"%{session.logon.last.username}\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"matchingValue\": \"user1\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Idp-e23acc60\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"matchingSource\": \"%{session.logon.last.username}\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"matchingValue\": \"user\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Idp-2d21f82d\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"SAML-Federation-ccc4e85c\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"spURI\": \"https://signed.example.com\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"wantAssertionEncrypted\": false,\n\t\t\t\t\t\t\t\t\t\t\t\t\"wantAssertionSigned\": false\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"ruleId\": \"Logon-d8e979f9\",\n\t\t\t\t\t\t\t\t\t\"ruleType\": \"logon\",\n\t\t\t\t\t\t\t\t\t\"splitUserName\": true\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\"itemType\": \"macro-call\",\n\t\t\t\t\t\t\t\"macro\": \"Emptyc8e8624a\",\n\t\t\t\t\t\t\t\"name\": \"Empty-5259dca4\",\n\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Deny\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"deny\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"allow\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"policyType\": \"PerSession\",\n\t\t\t\t\"profileType\": \"all\",\n\t\t\t\t\"restrictToSingleClientIP\": false,\n\t\t\t\t\"samesiteCookie\": false,\n\t\t\t\t\"samesiteCookieAttrValue\": \"strict\",\n\t\t\t\t\"scope\": \"profile\",\n\t\t\t\t\"secureCookie\": false,\n\t\t\t\t\"timeout\": 300,\n\t\t\t\t\"useHttp503OnError\": false,\n\t\t\t\t\"userIdentityMethod\": \"http\"\n\t\t\t},\n\t\t\t\"connectivityProfileConfiguration\": {\n\t\t\t\t\"clientPolicy\": {\n\t\t\t\t\t\"androidEcRequireDeviceAuth\": false,\n\t\t\t\t\t\"androidEcSavePasswordMethod\": \"disk\",\n\t\t\t\t\t\"androidEcSavePasswordTimeout\": 240,\n\t\t\t\t\t\"chromeosEcLogonMethod\": \"native\",\n\t\t\t\t\t\"chromeosEcSavePasswordMethod\": \"disk\",\n\t\t\t\t\t\"chromeosEcSavePasswordTimeout\": 240,\n\t\t\t\t\t\"ecComponentUpdate\": \"yes\",\n\t\t\t\t\t\"ecLocationDnsList\": [],\n\t\t\t\t\t\"ecReuseWinlogonCreds\": false,\n\t\t\t\t\t\"ecReuseWinlogonSession\": false,\n\t\t\t\t\t\"ecRunLogoffScript\": false,\n\t\t\t\t\t\"ecSavePasswordMethod\": \"none\",\n\t\t\t\t\t\"ecSavePasswordTimeout\": 240,\n\t\t\t\t\t\"ecSaveServersOnExit\": true,\n\t\t\t\t\t\"ecWarnBeforeScriptLaunch\": true,\n\t\t\t\t\t\"iosEcRequireDeviceAuth\": false,\n\t\t\t\t\t\"iosEcSavePasswordMethod\": \"disk\",\n\t\t\t\t\t\"iosEcSavePasswordTimeout\": 240,\n\t\t\t\t\t\"macosEcLogonMethod\": \"native\",\n\t\t\t\t\t\"macosEcSavePasswordMethod\": \"disk\",\n\t\t\t\t\t\"macosEcSavePasswordTimeout\": 240,\n\t\t\t\t\t\"serverList\": []\n\t\t\t\t},\n\t\t\t\t\"compressBufferSize\": 4096,\n\t\t\t\t\"compressCpusaver\": true,\n\t\t\t\t\"compressCpusaverHigh\": 90,\n\t\t\t\t\"compressCpusaverLow\": 75,\n\t\t\t\t\"compressGzipLevel\": 6,\n\t\t\t\t\"compressGzipMemlevel\": 8192,\n\t\t\t\t\"compressGzipWindowsize\": 16384,\n\t\t\t\t\"compressionAdaptive\": true,\n\t\t\t\t\"compressionCodecs\": [],\n\t\t\t\t\"compressionDeflateLevel\": 1,\n\t\t\t\t\"pppTunnel\": {\n\t\t\t\t\t\"profilePpp\": {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"loggingConfiguration\": [\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"apmd\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"tmm\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"websso\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"renderer\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"id = resp.id;",
											"pm.collectionVariables.set(\"fast_path\", resp.path);",
											"pm.collectionVariables.set(\"appsvc-id\", id)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"access_midp_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"access_midp_policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{app_name}}\",\n  \"set_name\": \"Examples\",\n  \"template_name\": \"http\",\n  \"description\": \"{{app_name}}-description\",\n  \"parameters\": {\n    \"application_name\": \"{{app_name}}\",\n    \"application_description\": \"{{app_name}}-description\",\n    \"enable_Global_Resiliency\": false,\n    \"monitors\": [\n      {\n        \"interval\": 5,\n        \"isDefault\": true,\n        \"isHttpMonitor\": true,\n        \"monitorName\": \"http\",\n        \"monitorType\": \"http\",\n        \"receiveString\": \".*\",\n        \"sendString\": \"GET / HTTP/1.0\\\\r\\\\n\\\\r\\\\n\",\n        \"timeout\": 16\n      }\n    ],\n    \"pools\": [\n      {\n        \"loadBalancingMode\": \"round-robin\",\n        \"loadBalancingRatio\": 10,\n        \"monitorType\": [\n          \"http\"\n        ],\n        \"servicePort\": 80,\n        \"application_name\": \"{{app_name}}\",\n        \"poolName\": \"pool_{{app_name}}\"\n      }\n    ],\n    \"virtuals\": [\n      {\n        \"FastL4_idleTimeout\": 600,\n        \"FastL4_looseClose\": true,\n        \"FastL4_looseInitialization\": true,\n        \"FastL4_resetOnTimeout\": true,\n        \"FastL4_tcpCloseTimeout\": 43200,\n        \"FastL4_tcpHandshakeTimeout\": 43200,\n        \"TCP_idle_timeout\": 60,\n        \"UDP_idle_timeout\": 60,\n\t\t\"is_virtual_type_standard\": true,\n\t\t\"auto_last_hop\": \"auto\",\n\t\t\"enable_Access\": true,\n\t\t\"accessPolicyEnum\": \"{{psp_policy_name}}\",\n        \"accessAdditionalConfigurations\": \" \",\n        \"enable_FastL4\": false,\n        \"enable_HTTP2_Profile\": false,\n        \"enable_TCP_Profile\": false,\n        \"enable_TLS_Client\": true,\n        \"enable_TLS_Server\": false,\n        \"enable_UDP_Profile\": false,\n        \"enable_snat\": true,\n        \"snat_addresses\": [],\n        \"snat_automap\": true,\n        \"enable_WAF\": false,\n        \"enable_iRules\": false,\n        \"virtualPort\": 443,\n        \"pool\": \"pool_{{app_name}}\",\n        \"virtualName\": \"vs_{{app_name}}\",\n\t\t\"virtualType\": \"standard\",\n        \"multiCertificatesEnum\": [\n          {\n\t\t\t\"advanced_configuration\": false,\n\t\t\t\"authentication_depth\": 9,\n\t\t\t\"authentication_frequency\": \"one-time\",\n\t\t\t\"ciphers\": \"DEFAULT\",\n\t\t\t\"clientTlsName\": \"clienttls-cert\",\n\t\t\t\"dh_groups\": \"DEFAULT\",\n\t\t\t\"ecdsaCertificate\": \"\",\n\t\t\t\"enable_authentication\": false,\n\t\t\t\"rsaCertificate\": \"self_demo.f5.com\",\n\t\t\t\"signature_algorithms\": \"DEFAULT\",\n\t\t\t\"sniDefault\": true,\n\t\t\t\"sniServers\": [],\n\t\t\t\"tls_c_1_1\": false,\n\t\t\t\"tls_c_1_2\": true,\n\t\t\t\"tls_c_1_3\": false,\n\t\t\t\"trustCACertificate\": \"\",\n\t\t\t\"useMultiCerts\": false\n          }\n        ]\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deploy Application to Instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)",
											"pm.collectionVariables.set(\"deploymentID\", resp.deployments[0].deploymentID)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"access_midp_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"access_midp_policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deployments\": [\n    {\n      \"parameters\": {\n        \"pools\": [\n          {\n            \"poolName\": \"pool_{{app_name}}\",\n            \"poolMembers\": [\n              {\n                \"address\": \"{{example_web}}\",\n                \"name\": \"poolmember1\"\n              }\n            ]\n          }\n        ],\n        \"virtuals\": [\n          {\n            \"virtualAddress\": \"{{access_okta_signed_vip}}\",\n            \"virtualName\": \"vs_{{app_name}}\"\n          }\n        ]\n      },\n      \"target\": {\n        \"address\": \"{{bigip_next_3_address}}\"\n      },\n      \"allow_overwrite\": true\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Access Sessions-All",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/access-sessions",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"access-sessions"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Policies GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"mbiq_policy_id\", pm.response.json()._embedded.policies[0].id);\r",
											"\r",
											"var policy_name_1 = \"Allow-Demo\"\r",
											"var resp = pm.response.json();\r",
											"pm.collectionVariables.set(\"mbiq_policy_id\", resp[\"_embedded\"][\"policies\"][0][\"id\"])\r",
											"pm.collectionVariables.set(\"mbiq_policy_name\", resp[\"_embedded\"][\"policies\"][0][\"name\"])\r",
											"var resp_policy_name_1 = pm.collectionVariables.get(\"mbiq_policy_name\")\r",
											"\r",
											"if ( policy_name_1  === resp_policy_name_1 ) {\r",
											"pm.test(\"Policy Found\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"}else {\r",
											"\r",
											"pm.test(\"Policy Not Found\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "SAML-Okta-Signed With HTTP Connector",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Login status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var resp = pm.response.json();\r",
											"pm.environment.set(\"bigip_next_cm_token\", resp.access_token);\r",
											"pm.collectionVariables.set(\"bigip_next_cm_token\", resp.access_token);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"{{bigip_next_cm_admin_password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/login",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Certificate",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "filename",
											"value": "cert_okta_idp",
											"type": "default"
										},
										{
											"key": "file",
											"value": "",
											"type": "default"
										}
									]
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/certificate/v1/certificates",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"certificate",
										"v1",
										"certificates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Certificate to CM",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"okta_signed_cert\",\r\n    \"cert_text\": \"-----BEGIN CERTIFICATE-----\\nMIIDpDCCAoygAwIBAgIGAYMipe6XMA0GCSqGSIb3DQEBCwUAMIGSMQswCQYDVQQGEwJVUzETMBEG\\nA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEU\\nMBIGA1UECwwLU1NPUHJvdmlkZXIxEzARBgNVBAMMCmRldi04MTg4OTkxHDAaBgkqhkiG9w0BCQEW\\nDWluZm9Ab2t0YS5jb20wHhcNMjIwOTA5MTQyNjIzWhcNMzIwOTA5MTQyNzIzWjCBkjELMAkGA1UE\\nBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNV\\nBAoMBE9rdGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRMwEQYDVQQDDApkZXYtODE4ODk5MRwwGgYJ\\nKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\nmFlmAz5VmSklL6Z7EKriaV79Ff5xyFMDiAdZOFfX5/I65FV9aJaU9jqKLS+gfiAJjhbkdCxtEXW1\\nQKkDLV6LqXmlWJxhts/j6JhUjd9diUI6cGpyoZ0uDKs0MUxGB3KK/movVQ63bXZqLTtdCPKb9ew1\\nYQYMCn3B7b/Y7XLGQm+dOhjPst6RIrxGzcaIzFasU93O0ksJmRk3f76jn5KTp+VPPo6q7FcI+WB0\\nZze8jaO8hKAG3BwkHQiM1L8KirXXQwfUIsGmyZEEVouCvqa6pOB5wxp4oI4RlcqepzNq7UOWHdpd\\n4qvP9VEi8Oy1agMf28eIfth4/rs0PYiJif8BXQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCOuwwa\\nNHDsQHGvdVTtxJUHQWtLDftp1v7WCLRIeKDy53Jr5wNVhVKYPk2lHlK1W8VBatNwfIwksF/0IloU\\nSLtHFbIkgUrLwBtLXG8zPHo8cAcYWgT3WK8UOli568D0p179OeosPJ24V5LRVulKIBzAvuYXt2u1\\nhTqr+s8EyVWB1jX/tJTHf+mJsxq8VsvfOoe2ddbncwkMTgI2RwkZA6nqyq3fpFAD3BWMJnbV8onW\\nKaNu1L01GGpC55CXckdp1uKtePZ6Gdcl0EnWJzkJ/cgm2NlCkageo9VxAxO4YuC7Iko7w28PfWY9\\nW5QddRVQVsBqBt2wOBmUPElhUUBHCZsE\\n-----END CERTIFICATE-----\",\r\n    \"item_type\": \"PEM\"\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/certificate/v1/certificates/import",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"certificate",
										"v1",
										"certificates",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Policy + HTTP Conn",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"psp_policy_name\", \"access_okta_Connector_policy\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{psp_policy_name}}\",\n\t\"policy_type\": \"PerSession\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"configuration\": {\n\t\t\t\t\"connectivityAccessPolicyName\": \"{{psp_policy_name}}_cap\",\n\t\t\t\t\"domainCookie\": \"\",\n\t\t\t\t\"externalServers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"certificate\": \"okta_signed_cert.crt\",\n\t\t\t\t\t\t\"entityId\": \"{{access_okta_signed_EntityID}}\",\n\t\t\t\t\t\t\"name\": \"Idp\",\n\t\t\t\t\t\t\"serverType\": \"SamlIdPConnector\",\n\t\t\t\t\t\t\"signatureType\": \"sha256\",\n\t\t\t\t\t\t\"ssoBinding\": \"http-post\",\n\t\t\t\t\t\t\"ssoUri\": \"{{access_okta_signed_SSOURI}}\",\n\t\t\t\t\t\t\"wantAuthnRequestSigned\": false\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"auth\": \"none\",\n\t\t\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\t\t\"name\": \"HTTP-Request-Okta_Con\",\n\t\t\t\t\t\t\"responseAction\": \"parse\",\n\t\t\t\t\t\t\"serverType\": \"HttpConnectorRequest\",\n\t\t\t\t\t\t\"transport\": {\n\t\t\t\t\t\t\t\"dnsResolverName\": \"global_f5_internal_net_resolver\",\n\t\t\t\t\t\t\t\"maxResponseSize\": 32768,\n\t\t\t\t\t\t\t\"timeout\": 5\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"url\": \"http://10.1.20.26:3000/api/users?email=%{session.saml.last.identity}\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"httpOnlyCookie\": false,\n\t\t\t\t\"inactivityTimeout\": 900,\n\t\t\t\t\"logoutUriTimeout\": 5,\n\t\t\t\t\"maxConcurrentSessions\": 0,\n\t\t\t\t\"maxConcurrentUsers\": 0,\n\t\t\t\t\"maxFailureDelay\": 5,\n\t\t\t\t\"maxInProgressSessions\": 128,\n\t\t\t\t\"maxSessionTimeout\": 604800,\n\t\t\t\t\"minFailureDelay\": 2,\n\t\t\t\t\"name\": \"{{psp_policy_name}}\",\n\t\t\t\t\"persistentCookie\": false,\n\t\t\t\t\"policy\": {\n\t\t\t\t\t\"objectContent\": {\n\t\t\t\t\t\t\"defaultLanguage\": \"en\",\n\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"deny\",\n\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"allow\",\n\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"languages\": [\n\t\t\t\t\t\t\t\"en\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"macros\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"Generic-SAML-Federation\",\n\t\t\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\"itemType\": \"saml\",\n\t\t\t\t\t\t\t\t\t\"name\": \"SAML-Federation\",\n\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\t\t\"expression\": \"expr {[mcget {session.saml.last.result}] == 1}\",\n\t\t\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"http-connector\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"HTTP-Connector-Okta_Con\",\n\t\t\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Branch-Risk_Assess_Good\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"expression\": \"expr {[mcget {session.http_connector.body.0.risk}] < 5}\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"customization\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"language\": \"en\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"message\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"proceedMessage\": \"Click here to close\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"title\": \"Your risk rate increased - Please consult the IT Admin team\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"language\": \"de\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"proceedMessage\": \"Klicken Sie hier, um fortzufahren.\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"title\": \"Klicken Sie auf den Link unten, um fortzufahren.\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"language\": \"es\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"proceedMessage\": \"Haga clic aquí para continuar\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"title\": \"Haga clic en el siguiente enlace para continuar.\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"language\": \"it\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"proceedMessage\": \"Click here to continue\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"title\": \"Please click the link below to continue.\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"language\": \"fr\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"proceedMessage\": \"Cliquez ici pour continuer\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"title\": \"Veuillez cliquer sur le lien ci-dessous pour continuer.\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"language\": \"ko\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"proceedMessage\": \"계속하려면 여기를 클릭하십시오.\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"title\": \"아래 링크를 클릭하여 계속하십시오.\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"language\": \"ja\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"proceedMessage\": \"ここをクリックしてください\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"title\": \"下のリンクをクリックしてください。\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"language\": \"zh-cn\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"proceedMessage\": \"单击此处继续\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"title\": \"请单击以下链接继续。\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"language\": \"zh-tw\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"proceedMessage\": \"請按一下這裡繼續\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"title\": \"請按一下以下連結繼續。\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"message-box\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Message-Box-Okta_Con\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"ruleId\": \"Message-Box-cb8f980c\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"ruleType\": \"message-box\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"requestName\": \"HTTP-Request-Okta_Con\",\n\t\t\t\t\t\t\t\t\t\t\t\"ruleId\": \"HTTP-Connector-Okta_Con\",\n\t\t\t\t\t\t\t\t\t\t\t\"ruleType\": \"http-connector\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"ruleType\": \"saml\",\n\t\t\t\t\t\t\t\t\t\"service\": {\n\t\t\t\t\t\t\t\t\t\t\"acsBinding\": \"http-post\",\n\t\t\t\t\t\t\t\t\t\t\"entityId\": \"{{access_okta_signed_SPEntityID}}\",\n\t\t\t\t\t\t\t\t\t\t\"idpConnectors\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Idp\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\"name\": \"SAML-Federation\",\n\t\t\t\t\t\t\t\t\t\t\"spURI\": \"{{access_okta_signed_SPURI}}\",\n\t\t\t\t\t\t\t\t\t\t\"wantAssertionEncrypted\": false,\n\t\t\t\t\t\t\t\t\t\t\"wantAssertionSigned\": true\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\"itemType\": \"macro-call\",\n\t\t\t\t\t\t\t\"macro\": \"Generic-SAML-Federation\",\n\t\t\t\t\t\t\t\"name\": \"Generic-SAML-Federation\",\n\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"allow\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Deny\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"deny\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"policyType\": \"PerSession\",\n\t\t\t\t\"profileType\": \"all\",\n\t\t\t\t\"restrictToSingleClientIP\": false,\n\t\t\t\t\"scope\": \"profile\",\n\t\t\t\t\"secureCookie\": false,\n\t\t\t\t\"timeout\": 300,\n\t\t\t\t\"useHttp503OnError\": false\n\t\t\t},\n\t\t\t\"connectivityProfileConfiguration\": {\n\t\t\t\t\"clientPolicy\": {\n\t\t\t\t\t\"ecLocationDnsList\": [],\n\t\t\t\t\t\"name\": \"{{psp_policy_name}}_cap_clientPolicy\"\n\t\t\t\t},\n\t\t\t\t\"name\": \"{{psp_policy_name}}_cap\",\n\t\t\t\t\"policyType\": \"ConnectivityAccessPolicy\",\n\t\t\t\t\"pppTunnel\": {\n\t\t\t\t\t\"profilePpp\": {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"loggingConfiguration\": [\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"apmd\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"tmm\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"websso\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"renderer\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"id = resp.id;",
											"pm.collectionVariables.set(\"fast_path\", resp.path);",
											"pm.collectionVariables.set(\"appsvc-id\", id)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"access_okta_Connector_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"access_okta_Connector_policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{app_name}}\",\n  \"set_name\": \"Examples\",\n  \"template_name\": \"http\",\n  \"description\": \"{{app_name}}-description\",\n  \"parameters\": {\n    \"application_name\": \"{{app_name}}\",\n    \"application_description\": \"{{app_name}}-description\",\n    \"enable_Global_Resiliency\": false,\n    \"monitors\": [\n      {\n        \"interval\": 5,\n        \"isDefault\": true,\n        \"isHttpMonitor\": true,\n        \"monitorName\": \"http\",\n        \"monitorType\": \"http\",\n        \"receiveString\": \".*\",\n        \"sendString\": \"GET / HTTP/1.0\\\\r\\\\n\\\\r\\\\n\",\n        \"timeout\": 16\n      }\n    ],\n    \"pools\": [\n      {\n        \"loadBalancingMode\": \"round-robin\",\n        \"loadBalancingRatio\": 10,\n        \"monitorType\": [\n          \"http\"\n        ],\n        \"servicePort\": 80,\n        \"application_name\": \"{{app_name}}\",\n        \"poolName\": \"pool_{{app_name}}\"\n      }\n    ],\n    \"virtuals\": [\n      {\n        \"FastL4_idleTimeout\": 600,\n        \"FastL4_looseClose\": true,\n        \"FastL4_looseInitialization\": true,\n        \"FastL4_resetOnTimeout\": true,\n        \"FastL4_tcpCloseTimeout\": 43200,\n        \"FastL4_tcpHandshakeTimeout\": 43200,\n        \"TCP_idle_timeout\": 60,\n        \"UDP_idle_timeout\": 60,\n\t\t\"is_virtual_type_standard\": true,\n\t\t\"auto_last_hop\": \"auto\",\n\t\t\"enable_Access\": true,\n\t\t\"accessPolicyEnum\": \"{{psp_policy_name}}\",\n        \"accessAdditionalConfigurations\": \" \",\n        \"enable_FastL4\": false,\n        \"enable_HTTP2_Profile\": false,\n        \"enable_TCP_Profile\": false,\n        \"enable_TLS_Client\": true,\n        \"enable_TLS_Server\": false,\n        \"enable_UDP_Profile\": false,\n        \"enable_snat\": true,\n        \"snat_addresses\": [],\n        \"snat_automap\": true,\n        \"enable_WAF\": false,\n        \"enable_iRules\": false,\n        \"virtualPort\": 443,\n        \"pool\": \"pool_{{app_name}}\",\n        \"virtualName\": \"vs_{{app_name}}\",\n\t\t\"virtualType\": \"standard\",\n        \"multiCertificatesEnum\": [\n          {\n\t\t\t\"advanced_configuration\": false,\n\t\t\t\"authentication_depth\": 9,\n\t\t\t\"authentication_frequency\": \"one-time\",\n\t\t\t\"ciphers\": \"DEFAULT\",\n\t\t\t\"clientTlsName\": \"clienttls-cert\",\n\t\t\t\"dh_groups\": \"DEFAULT\",\n\t\t\t\"ecdsaCertificate\": \"\",\n\t\t\t\"enable_authentication\": false,\n\t\t\t\"rsaCertificate\": \"self_demo.f5.com\",\n\t\t\t\"signature_algorithms\": \"DEFAULT\",\n\t\t\t\"sniDefault\": true,\n\t\t\t\"sniServers\": [],\n\t\t\t\"tls_c_1_1\": false,\n\t\t\t\"tls_c_1_2\": true,\n\t\t\t\"tls_c_1_3\": false,\n\t\t\t\"trustCACertificate\": \"\",\n\t\t\t\"useMultiCerts\": false\n          }\n        ]\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deploy Application to Instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)",
											"pm.collectionVariables.set(\"deploymentID\", resp.deployments[0].deploymentID)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"access_okta_Connector_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"access_okta_Connector_policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deployments\": [\n    {\n      \"parameters\": {\n        \"pools\": [\n          {\n            \"poolName\": \"pool_{{app_name}}\",\n            \"poolMembers\": [\n              {\n                \"address\": \"{{example_web}}\",\n                \"name\": \"poolmember1\"\n              }\n            ]\n          }\n        ],\n        \"virtuals\": [\n          {\n            \"virtualAddress\": \"{{access_okta_signed_vip}}\",\n            \"virtualName\": \"vs_{{app_name}}\"\n          }\n        ]\n      },\n      \"target\": {\n        \"address\": \"{{bigip_next_3_address}}\"\n      },\n      \"allow_overwrite\": true\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Access Sessions-All",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/access-sessions",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"access-sessions"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Policies GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"mbiq_policy_id\", pm.response.json()._embedded.policies[0].id);\r",
											"\r",
											"var policy_name_1 = \"Allow-Demo\"\r",
											"var resp = pm.response.json();\r",
											"pm.collectionVariables.set(\"mbiq_policy_id\", resp[\"_embedded\"][\"policies\"][0][\"id\"])\r",
											"pm.collectionVariables.set(\"mbiq_policy_name\", resp[\"_embedded\"][\"policies\"][0][\"name\"])\r",
											"var resp_policy_name_1 = pm.collectionVariables.get(\"mbiq_policy_name\")\r",
											"\r",
											"if ( policy_name_1  === resp_policy_name_1 ) {\r",
											"pm.test(\"Policy Found\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"}else {\r",
											"\r",
											"pm.test(\"Policy Not Found\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "OAuth Client-RS-Kerberos",
					"item": [
						{
							"name": "Login-CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Login status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var resp = pm.response.json();",
											"pm.environment.set(\"bigip_next_cm_token\", resp.access_token);",
											"pm.collectionVariables.set(\"bigip_next_cm_token\", resp.access_token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"{{bigip_next_cm_admin_password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/login",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Instance ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"resp = pm.response.json();\r",
											"\r",
											"pm.collectionVariables.set(\"fast_path\", resp._links.self.href);\r",
											"pm.collectionVariables.set(\"appsvc-id\", resp._embedded.devices[0].id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "default",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/device/v1/inventory?filter=address eq '{{bigip_next_mgmt_target_ip}}'",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"device",
										"v1",
										"inventory"
									],
									"query": [
										{
											"key": "filter",
											"value": "address eq '{{bigip_next_mgmt_target_ip}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create L3 forward DNS resolver",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\t\"name\": \"global_f5_internal_net_resolver\",\r\n\t\t\"config\": {\r\n\t\t\t\"name\": \"global_f5_internal_net_resolver\",\r\n\t\t\t\"useTcp\": true,\r\n\t\t\t\"useUdp\": true,\r\n\t\t\t\"useIpv4\": true,\r\n\t\t\t\"useIpv6\": false,\r\n\t\t\t\"description\": \"\",\r\n\t\t\t\"forwardZones\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"nameserver\": \"10.1.20.6:53\",\r\n\t\t\t\t\t\"forwardZone\": \".\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"l3ForwardType\": \"netResolver\",\r\n\t\t\t\"answerDefaultZones\": false,\r\n\t\t\t\"randomQueryNameCase\": false\r\n\t\t},\r\n\t\t\"vrf\": \"Default\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/{{appsvc-id}}/l3forwards",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"{{appsvc-id}}",
										"l3forwards"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get L3 forward",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "default",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/{{appsvc-id}}/l3forwards",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"{{appsvc-id}}",
										"l3forwards"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create OAuth Client/RS Policy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"psp_policy_name\", \"OAuth_Client_Policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{psp_policy_name}}\",\n\t\"policy_type\": \"PerSession\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"configuration\": {\n\t\t\t\t\"domainCookie\": \"\",\n\t\t\t\t\"externalServers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"clientId\": \"0oab7bafm1gpzKt9s4x7\",\n\t\t\t\t\t\t\"clientSecret\": \"XH2c15N-3LioIovIzyAwjHqiz6gTD-UTNVOpjfWo\",\n\t\t\t\t\t\t\"clientTls\": {\n\t\t\t\t\t\t\t\"cipherstring\": \"DEFAULT\",\n\t\t\t\t\t\t\t\"tlsVersions\": {\n\t\t\t\t\t\t\t\t\"enableTLS1.1\": false,\n\t\t\t\t\t\t\t\t\"enableTLS1.2\": true,\n\t\t\t\t\t\t\t\t\"enableTLS1.3\": true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"dnsResolverName\": \"global_f5_internal_net_resolver\",\n\t\t\t\t\t\t\"mode\": \"client\",\n\t\t\t\t\t\t\"name\": \"OAuth-Server-b30698b8\",\n\t\t\t\t\t\t\"overrideVendorPresets\": false,\n\t\t\t\t\t\t\"providerName\": \"OAuth-Provider-20be1c94\",\n\t\t\t\t\t\t\"serverType\": \"Oauth\",\n\t\t\t\t\t\t\"tokenValidationInterval\": 60\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"allowSelfSignedJwkCert\": true,\n\t\t\t\t\t\t\"authenticationUri\": \"https://dev-818899.okta.com/oauth2/v1/authorize\",\n\t\t\t\t\t\t\"enableAutoDiscovery\": true,\n\t\t\t\t\t\t\"ignoreExpiredCert\": false,\n\t\t\t\t\t\t\"introspect\": \"supported\",\n\t\t\t\t\t\t\"jwtConfig\": {\n\t\t\t\t\t\t\t\"accessTokenExpiresIn\": 0,\n\t\t\t\t\t\t\t\"allowedKeys\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"algType\": \"RS256\",\n\t\t\t\t\t\t\t\t\t\"jwtType\": \"jws\",\n\t\t\t\t\t\t\t\t\t\"keyId\": \"FT99YbOAdWG-y16fG7QRzdfnhHsZ9RrIH6U0Za22CDk\",\n\t\t\t\t\t\t\t\t\t\"keyType\": \"rsa\",\n\t\t\t\t\t\t\t\t\t\"modulus\": \"uz2R4nX0j3FO6dB7jt2hiMg0Xuj-FMkyVQrf9JrtvzwMHLtURlDIIX4_H9DEOOrlzWn6q9V2NcPZD6SHg4psKwWs2oE1gWq9AQWGdIBQMM0RMCOUrmCLd_cHKg1rSZGIWDcxNNImeVG3rvaLqF_jjvcbJMX8DfC6vAKDzZ6KY_zcw0U2-MAqcT2_PVE9xVOHDycn3ANX_XAhXm8Qa92f6bBuLgnm44VfSfjsDMrTqGq1eEiV1QZ15R8NRYxGhyBbd0NojhOppxdk7K0oXDcG6DnqWRUnEJdVrJe2XTSUIwyen2OwiTFaR0CnG1bOU_FWPYYsFE1ED6WeOe4JWSgXFw\",\n\t\t\t\t\t\t\t\t\t\"publicExponent\": \"AQAB\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"algType\": \"RS256\",\n\t\t\t\t\t\t\t\t\t\"jwtType\": \"jws\",\n\t\t\t\t\t\t\t\t\t\"keyId\": \"qmP1J3tJdvXzcgg3ZqABUdZpdwnRTRzfn50o9RzE5sA\",\n\t\t\t\t\t\t\t\t\t\"keyType\": \"rsa\",\n\t\t\t\t\t\t\t\t\t\"modulus\": \"9a2ydW7sn70biWk-cZwfuv1a_v8-QkX08sNQaSmd3wdctlMRwhuo780X_wcoDRspEC191VlmQVDBQrwJkRpBbuW3MGm9nw9iUBK4lAcjmcDAwCLLRN6Z2sM075cnuPNfCb28ml11ys7npVvrHR-o79-Pbbw5uDE_sBJHB6wT7e8tM6ZFNoJwAEBnromZLIuiEgZyCDgfyKFcqV5UvzawTU1dYL6jcoiAZIU4ycrG3t29XtOCP7wcP-Q4CjPTpzrolOXuip_x4jlQ0DBsMgm6cFVevsr42l4FuOSL1cjrAPPXuidEI1nySWsWNbBXSJJJQricGMU0GvQrYGFFL3zzPQ\",\n\t\t\t\t\t\t\t\t\t\"publicExponent\": \"AQAB\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"allowedSigningAlgorithms\": [\n\t\t\t\t\t\t\t\t\"RS256\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"audience\": [\n\t\t\t\t\t\t\t\t\"https://dev-818899.okta.com\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"blockedKeys\": [],\n\t\t\t\t\t\t\t\"blockedSigningAlgorithms\": [],\n\t\t\t\t\t\t\t\"issuer\": \"https://dev-818899.okta.com\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"lastDiscoveryTime\": \"Wed Sep 25 2024 14:44:01 GMT+0100 (British Summer Time)\",\n\t\t\t\t\t\t\"name\": \"OAuth-Provider-20be1c94\",\n\t\t\t\t\t\t\"openIdUri\": \"https://dev-818899-admin.okta.com/.well-known/openid-configuration\",\n\t\t\t\t\t\t\"providerType\": \"okta\",\n\t\t\t\t\t\t\"serverType\": \"OauthProvider\",\n\t\t\t\t\t\t\"tokenUri\": \"https://dev-818899.okta.com/oauth2/v1/token\",\n\t\t\t\t\t\t\"tokenValidationScopeUri\": \"https://dev-818899.okta.com/oauth2/v1/introspect\",\n\t\t\t\t\t\t\"trustedCaBundle\": \"ca-bundle.crt\",\n\t\t\t\t\t\t\"useDifferentKeyForEnc\": false,\n\t\t\t\t\t\t\"useEncryptedConnection\": false,\n\t\t\t\t\t\t\"userinfoRequestUri\": \"https://dev-818899.okta.com/oauth2/v1/userinfo\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"allowSelfSignedJwkCert\": true,\n\t\t\t\t\t\t\"authenticationUri\": \"https://dev-818899.okta.com/oauth2/v1/authorize\",\n\t\t\t\t\t\t\"enableAutoDiscovery\": true,\n\t\t\t\t\t\t\"ignoreExpiredCert\": false,\n\t\t\t\t\t\t\"introspect\": \"supported\",\n\t\t\t\t\t\t\"jwtConfig\": {\n\t\t\t\t\t\t\t\"accessTokenExpiresIn\": 0,\n\t\t\t\t\t\t\t\"allowedKeys\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"algType\": \"RS256\",\n\t\t\t\t\t\t\t\t\t\"jwtType\": \"jws\",\n\t\t\t\t\t\t\t\t\t\"keyId\": \"FT99YbOAdWG-y16fG7QRzdfnhHsZ9RrIH6U0Za22CDk\",\n\t\t\t\t\t\t\t\t\t\"keyType\": \"rsa\",\n\t\t\t\t\t\t\t\t\t\"modulus\": \"uz2R4nX0j3FO6dB7jt2hiMg0Xuj-FMkyVQrf9JrtvzwMHLtURlDIIX4_H9DEOOrlzWn6q9V2NcPZD6SHg4psKwWs2oE1gWq9AQWGdIBQMM0RMCOUrmCLd_cHKg1rSZGIWDcxNNImeVG3rvaLqF_jjvcbJMX8DfC6vAKDzZ6KY_zcw0U2-MAqcT2_PVE9xVOHDycn3ANX_XAhXm8Qa92f6bBuLgnm44VfSfjsDMrTqGq1eEiV1QZ15R8NRYxGhyBbd0NojhOppxdk7K0oXDcG6DnqWRUnEJdVrJe2XTSUIwyen2OwiTFaR0CnG1bOU_FWPYYsFE1ED6WeOe4JWSgXFw\",\n\t\t\t\t\t\t\t\t\t\"publicExponent\": \"AQAB\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"algType\": \"RS256\",\n\t\t\t\t\t\t\t\t\t\"jwtType\": \"jws\",\n\t\t\t\t\t\t\t\t\t\"keyId\": \"qmP1J3tJdvXzcgg3ZqABUdZpdwnRTRzfn50o9RzE5sA\",\n\t\t\t\t\t\t\t\t\t\"keyType\": \"rsa\",\n\t\t\t\t\t\t\t\t\t\"modulus\": \"9a2ydW7sn70biWk-cZwfuv1a_v8-QkX08sNQaSmd3wdctlMRwhuo780X_wcoDRspEC191VlmQVDBQrwJkRpBbuW3MGm9nw9iUBK4lAcjmcDAwCLLRN6Z2sM075cnuPNfCb28ml11ys7npVvrHR-o79-Pbbw5uDE_sBJHB6wT7e8tM6ZFNoJwAEBnromZLIuiEgZyCDgfyKFcqV5UvzawTU1dYL6jcoiAZIU4ycrG3t29XtOCP7wcP-Q4CjPTpzrolOXuip_x4jlQ0DBsMgm6cFVevsr42l4FuOSL1cjrAPPXuidEI1nySWsWNbBXSJJJQricGMU0GvQrYGFFL3zzPQ\",\n\t\t\t\t\t\t\t\t\t\"publicExponent\": \"AQAB\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"allowedSigningAlgorithms\": [\n\t\t\t\t\t\t\t\t\"RS256\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"audience\": [\n\t\t\t\t\t\t\t\t\"https://dev-818899.okta.com\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"blockedKeys\": [],\n\t\t\t\t\t\t\t\"blockedSigningAlgorithms\": [],\n\t\t\t\t\t\t\t\"issuer\": \"https://dev-818899.okta.com\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"lastDiscoveryTime\": \"Wed Sep 25 2024 14:44:43 GMT+0100 (British Summer Time)\",\n\t\t\t\t\t\t\"name\": \"OAuth-Provider-b38da47f\",\n\t\t\t\t\t\t\"openIdUri\": \"https://dev-818899-admin.okta.com/.well-known/openid-configuration\",\n\t\t\t\t\t\t\"providerType\": \"okta\",\n\t\t\t\t\t\t\"serverType\": \"OauthProvider\",\n\t\t\t\t\t\t\"tokenUri\": \"https://dev-818899.okta.com/oauth2/v1/token\",\n\t\t\t\t\t\t\"tokenValidationScopeUri\": \"https://dev-818899.okta.com/oauth2/v1/introspect\",\n\t\t\t\t\t\t\"trustedCaBundle\": \"ca-bundle.crt\",\n\t\t\t\t\t\t\"useDifferentKeyForEnc\": false,\n\t\t\t\t\t\t\"useEncryptedConnection\": false,\n\t\t\t\t\t\t\"userinfoRequestUri\": \"https://dev-818899.okta.com/oauth2/v1/userinfo\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"httpOnlyCookie\": false,\n\t\t\t\t\"inactivityTimeout\": 900,\n\t\t\t\t\"logoutUriInclude\": \"\",\n\t\t\t\t\"logoutUriTimeout\": 5,\n\t\t\t\t\"maxConcurrentSessions\": 0,\n\t\t\t\t\"maxConcurrentUsers\": 0,\n\t\t\t\t\"maxFailureDelay\": 5,\n\t\t\t\t\"maxInProgressSessions\": 128,\n\t\t\t\t\"maxSessionTimeout\": 604800,\n\t\t\t\t\"minFailureDelay\": 2,\n\t\t\t\t\"name\": \"{{psp_policy_name}}\",\n\t\t\t\t\"persistentCookie\": false,\n\t\t\t\t\"policy\": {\n\t\t\t\t\t\"objectContent\": {\n\t\t\t\t\t\t\"defaultLanguage\": \"en\",\n\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"deny\",\n\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"allow\",\n\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"languages\": [\n\t\t\t\t\t\t\t\"en\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"macros\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"Emptyc42fc382\",\n\t\t\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\"grantType\": \"authorization-code\",\n\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\"itemType\": \"oauth-client\",\n\t\t\t\t\t\t\t\t\t\"name\": \"OAuth-Federation-fed41391\",\n\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Branch-f0a6c819\",\n\t\t\t\t\t\t\t\t\t\t\t\"expression\": \"expr {[mcget {session.oauth.client.last.authresult}] == 1}\",\n\t\t\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"oauth-scope\",\n\t\t\t\t\t\t\t\t\t\t\t\"jwtProviderList\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"accessTokenExpiresIn\": 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"OAuth-Federation-420d5078-jwt-provider-list\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"oauthProviders\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"OAuth-Provider-b38da47f\"\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"OAuth-Federation-420d5078\",\n\t\t\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Branch-e8c781c0\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"expression\": \"expr {[mcget {session.oauth.scope.last.authresult}] == 1}\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"requestValidationScopes\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"headers\": [],\n\t\t\t\t\t\t\t\t\t\t\t\t\"method\": \"post\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"client_id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"resource-server-id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"client_secret\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"resource-server-secret\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"token\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"access-token\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\"ruleId\": \"OAuth-Federation-3d2ebedc\",\n\t\t\t\t\t\t\t\t\t\t\t\"ruleType\": \"oauth-scope\",\n\t\t\t\t\t\t\t\t\t\t\t\"scopeRequests\": [],\n\t\t\t\t\t\t\t\t\t\t\t\"tokenValidationMode\": \"internal\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"oauthServer\": \"OAuth-Server-b30698b8\",\n\t\t\t\t\t\t\t\t\t\"openidConnect\": true,\n\t\t\t\t\t\t\t\t\t\"openidFlowType\": \"code\",\n\t\t\t\t\t\t\t\t\t\"redirectionUri\": \"https://%{session.server.network.name}/oauth/client/redirect\",\n\t\t\t\t\t\t\t\t\t\"requestAuthRedirect\": {\n\t\t\t\t\t\t\t\t\t\t\"headers\": [],\n\t\t\t\t\t\t\t\t\t\t\"method\": \"get\",\n\t\t\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"client_id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"client-id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"response_type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"response-type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"redirect_uri\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"redirect-uri\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"scope\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"scope\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"requestOpenidUserinfo\": {\n\t\t\t\t\t\t\t\t\t\t\"headers\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Authorization\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"Bearer %{session.oauth.client.last.access_token}\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\"method\": \"get\",\n\t\t\t\t\t\t\t\t\t\t\"parameters\": []\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"requestRefreshToken\": {\n\t\t\t\t\t\t\t\t\t\t\"headers\": [],\n\t\t\t\t\t\t\t\t\t\t\"method\": \"post\",\n\t\t\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"client_id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"client-id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"client_secret\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"client-secret\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"grant_type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"custom\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"refresh_token\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"requestToken\": {\n\t\t\t\t\t\t\t\t\t\t\"headers\": [],\n\t\t\t\t\t\t\t\t\t\t\"method\": \"post\",\n\t\t\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"client_id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"client-id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"client_secret\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"client-secret\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"grant_type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"grant-type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"redirect_uri\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"redirect-uri\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"scope\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"scope\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"ruleId\": \"OAuth-Federation-52346aea\",\n\t\t\t\t\t\t\t\t\t\"ruleType\": \"oauth-client\",\n\t\t\t\t\t\t\t\t\t\"scope\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\"itemType\": \"macro-call\",\n\t\t\t\t\t\t\t\"macro\": \"Emptyc42fc382\",\n\t\t\t\t\t\t\t\"name\": \"Empty-6c139d96\",\n\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Deny\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"deny\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"allow\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"policyType\": \"PerSession\",\n\t\t\t\t\"profileType\": \"all\",\n\t\t\t\t\"restrictToSingleClientIP\": false,\n\t\t\t\t\"samesiteCookie\": false,\n\t\t\t\t\"samesiteCookieAttrValue\": \"strict\",\n\t\t\t\t\"scope\": \"profile\",\n\t\t\t\t\"secureCookie\": false,\n\t\t\t\t\"timeout\": 300,\n\t\t\t\t\"useHttp503OnError\": false,\n\t\t\t\t\"userIdentityMethod\": \"http\"\n\t\t\t},\n\t\t\t\"connectivityProfileConfiguration\": {\n\t\t\t\t\"clientPolicy\": {\n\t\t\t\t\t\"androidEcRequireDeviceAuth\": false,\n\t\t\t\t\t\"androidEcSavePasswordMethod\": \"disk\",\n\t\t\t\t\t\"androidEcSavePasswordTimeout\": 240,\n\t\t\t\t\t\"chromeosEcLogonMethod\": \"native\",\n\t\t\t\t\t\"chromeosEcSavePasswordMethod\": \"disk\",\n\t\t\t\t\t\"chromeosEcSavePasswordTimeout\": 240,\n\t\t\t\t\t\"ecComponentUpdate\": \"yes\",\n\t\t\t\t\t\"ecLocationDnsList\": [],\n\t\t\t\t\t\"ecReuseWinlogonCreds\": false,\n\t\t\t\t\t\"ecReuseWinlogonSession\": false,\n\t\t\t\t\t\"ecRunLogoffScript\": false,\n\t\t\t\t\t\"ecSavePasswordMethod\": \"none\",\n\t\t\t\t\t\"ecSavePasswordTimeout\": 240,\n\t\t\t\t\t\"ecSaveServersOnExit\": true,\n\t\t\t\t\t\"ecWarnBeforeScriptLaunch\": true,\n\t\t\t\t\t\"iosEcRequireDeviceAuth\": false,\n\t\t\t\t\t\"iosEcSavePasswordMethod\": \"disk\",\n\t\t\t\t\t\"iosEcSavePasswordTimeout\": 240,\n\t\t\t\t\t\"macosEcLogonMethod\": \"native\",\n\t\t\t\t\t\"macosEcSavePasswordMethod\": \"disk\",\n\t\t\t\t\t\"macosEcSavePasswordTimeout\": 240,\n\t\t\t\t\t\"serverList\": []\n\t\t\t\t},\n\t\t\t\t\"compressBufferSize\": 4096,\n\t\t\t\t\"compressCpusaver\": true,\n\t\t\t\t\"compressCpusaverHigh\": 90,\n\t\t\t\t\"compressCpusaverLow\": 75,\n\t\t\t\t\"compressGzipLevel\": 6,\n\t\t\t\t\"compressGzipMemlevel\": 8192,\n\t\t\t\t\"compressGzipWindowsize\": 16384,\n\t\t\t\t\"compressionAdaptive\": true,\n\t\t\t\t\"compressionCodecs\": [],\n\t\t\t\t\"compressionDeflateLevel\": 1,\n\t\t\t\t\"pppTunnel\": {\n\t\t\t\t\t\"profilePpp\": {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"loggingConfiguration\": [\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"apmd\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"tmm\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"websso\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"renderer\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create OAuth oidc App",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"id = resp.id;",
											"pm.collectionVariables.set(\"fast_path\", resp.path);",
											"pm.collectionVariables.set(\"appsvc-id\", id)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"OAuth_Client_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"OAuth_Client_Policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{app_name}}\",\n  \"set_name\": \"Examples\",\n  \"template_name\": \"http\",\n  \"description\": \"{{app_name}}-description\",\n  \"parameters\": {\n    \"application_name\": \"{{app_name}}\",\n    \"application_description\": \"{{app_name}}-description\",\n    \"enable_Global_Resiliency\": false,\n    \"monitors\": [\n      {\n        \"interval\": 5,\n        \"isDefault\": true,\n        \"isHttpMonitor\": true,\n        \"monitorName\": \"http\",\n        \"monitorType\": \"http\",\n        \"receiveString\": \".*\",\n        \"sendString\": \"GET / HTTP/1.0\\\\r\\\\n\\\\r\\\\n\",\n        \"timeout\": 16\n      }\n    ],\n    \"pools\": [\n      {\n        \"loadBalancingMode\": \"round-robin\",\n        \"loadBalancingRatio\": 10,\n        \"monitorType\": [\n          \"http\"\n        ],\n        \"servicePort\": 80,\n        \"application_name\": \"{{app_name}}\",\n        \"poolName\": \"pool_{{app_name}}\"\n      }\n    ],\n    \"virtuals\": [\n      {\n        \"FastL4_idleTimeout\": 600,\n        \"FastL4_looseClose\": true,\n        \"FastL4_looseInitialization\": true,\n        \"FastL4_resetOnTimeout\": true,\n        \"FastL4_tcpCloseTimeout\": 43200,\n        \"FastL4_tcpHandshakeTimeout\": 43200,\n        \"TCP_idle_timeout\": 60,\n        \"UDP_idle_timeout\": 60,\n\t\t\"is_virtual_type_standard\": true,\n\t\t\"auto_last_hop\": \"auto\",\n\t\t\"enable_Access\": true,\n\t\t\"accessPolicyEnum\": \"{{psp_policy_name}}\",\n        \"accessAdditionalConfigurations\": \" \",\n        \"enable_FastL4\": false,\n        \"enable_HTTP2_Profile\": false,\n        \"enable_TCP_Profile\": false,\n        \"enable_TLS_Client\": true,\n        \"enable_TLS_Server\": false,\n        \"enable_UDP_Profile\": false,\n        \"enable_snat\": true,\n        \"snat_addresses\": [],\n        \"snat_automap\": true,\n        \"enable_WAF\": false,\n        \"enable_iRules\": false,\n        \"virtualPort\": 443,\n        \"pool\": \"pool_{{app_name}}\",\n        \"virtualName\": \"vs_{{app_name}}\",\n\t\t\"virtualType\": \"standard\",\n        \"multiCertificatesEnum\": [\n          {\n\t\t\t\"advanced_configuration\": false,\n\t\t\t\"authentication_depth\": 9,\n\t\t\t\"authentication_frequency\": \"one-time\",\n\t\t\t\"ciphers\": \"DEFAULT\",\n\t\t\t\"clientTlsName\": \"clienttls-cert\",\n\t\t\t\"dh_groups\": \"DEFAULT\",\n\t\t\t\"ecdsaCertificate\": \"\",\n\t\t\t\"enable_authentication\": false,\n\t\t\t\"rsaCertificate\": \"self_demo.f5.com\",\n\t\t\t\"signature_algorithms\": \"DEFAULT\",\n\t\t\t\"sniDefault\": true,\n\t\t\t\"sniServers\": [],\n\t\t\t\"tls_c_1_1\": false,\n\t\t\t\"tls_c_1_2\": true,\n\t\t\t\"tls_c_1_3\": false,\n\t\t\t\"trustCACertificate\": \"\",\n\t\t\t\"useMultiCerts\": false\n          }\n        ]\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deploy OAuth Application to Instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)",
											"pm.collectionVariables.set(\"deploymentID\", resp.deployments[0].deploymentID)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"OAuth_Client_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"OAuth_Client_Policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deployments\": [\n    {\n      \"parameters\": {\n        \"pools\": [\n          {\n            \"poolName\": \"pool_{{app_name}}\",\n            \"poolMembers\": [\n              {\n                \"address\": \"10.1.20.6\",\n                \"name\": \"poolmember1\"\n              }\n        ]\n        }\n        ],\n        \"virtuals\": [\n          {\n            \"virtualAddress\": \"{{access_OAuth_Client_vip}}\",\n            \"virtualName\": \"vs_{{app_name}}\"\n          }\n        ]\n      },\n    \"additional_parameters\": {\n\t\"access\": [\n\t\t{\n\t\t\t\"dnsResolvers\": [\n\t\t\t\t{\n\t\t\t\t\t\"config\": {\n\t\t\t\t\t\t\"forwardZones\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"forwardZone\": \".\",\n\t\t\t\t\t\t\t\t\"nameserver\": \"10.1.20.6:53\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"l3ForwardType\": \"netResolver\",\n\t\t\t\t\t\t\"name\": \"OAuth_Client_Policy-OAuth-Server-b30698b8\"\n\t\t\t\t\t},\n\t\t\t\t\t\"l3Network\": \"Default\",\n\t\t\t\t\t\"name\": \"OAuth_Client_Policy-OAuth-Server-b30698b8\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"externalServers\": [\n\t\t\t\t{\n\t\t\t\t\t\"dnsResolverName\": \"OAuth_Client_Policy-OAuth-Server-b30698b8\",\n\t\t\t\t\t\"name\": \"OAuth-Server-b30698b8\",\n\t\t\t\t\t\"serverType\": \"Oauth\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"policyName\": \"{{psp_policy_name}}\"\n\t\t}\n\t]\n    },\n      \"target\": {\n        \"address\": \"{{bigip_next_3_address}}\"\n      },\n      \"allow_overwrite\": true\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Policies GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {},
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Access Sessions-All",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/access-sessions",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"access-sessions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "OAuth Client-APM-OAuth-AuthServer",
					"item": [
						{
							"name": "Login-CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Login status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var resp = pm.response.json();",
											"pm.environment.set(\"bigip_next_cm_token\", resp.access_token);",
											"pm.collectionVariables.set(\"bigip_next_cm_token\", resp.access_token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"{{bigip_next_cm_admin_password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/login",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Instance ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"resp = pm.response.json();\r",
											"\r",
											"pm.collectionVariables.set(\"fast_path\", resp._links.self.href);\r",
											"pm.collectionVariables.set(\"appsvc-id\", resp._embedded.devices[0].id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "default",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/device/v1/inventory?filter=address eq '{{bigip_next_mgmt_target_ip}}'",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"device",
										"v1",
										"inventory"
									],
									"query": [
										{
											"key": "filter",
											"value": "address eq '{{bigip_next_mgmt_target_ip}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create L3 forward DNS resolver",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\t\"name\": \"global_f5_internal_net_resolver\",\r\n\t\t\"config\": {\r\n\t\t\t\"name\": \"global_f5_internal_net_resolver\",\r\n\t\t\t\"useTcp\": true,\r\n\t\t\t\"useUdp\": true,\r\n\t\t\t\"useIpv4\": true,\r\n\t\t\t\"useIpv6\": false,\r\n\t\t\t\"description\": \"\",\r\n\t\t\t\"forwardZones\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"nameserver\": \"10.1.20.6:53\",\r\n\t\t\t\t\t\"forwardZone\": \".\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"l3ForwardType\": \"netResolver\",\r\n\t\t\t\"answerDefaultZones\": false,\r\n\t\t\t\"randomQueryNameCase\": false\r\n\t\t},\r\n\t\t\"vrf\": \"Default\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/{{appsvc-id}}/l3forwards",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"{{appsvc-id}}",
										"l3forwards"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get L3 forward",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "default",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/{{appsvc-id}}/l3forwards",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"{{appsvc-id}}",
										"l3forwards"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create OAuth Client Policy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"psp_policy_name\", \"OAuth_Client_Policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{psp_policy_name}}\",\n\t\"policy_type\": \"PerSession\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"configuration\": {\n\t\t\t\t\"connectivityAccessPolicyName\": \"{{psp_policy_name}}_cap\",\n\t\t\t\t\"domainCookie\": \"\",\n\t\t\t\t\"externalServers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"clientId\": \"a9ad37d2d65a0bd5337a81df0c4e5254007bf74426d85366\",\n\t\t\t\t\t\t\"clientSecret\": \"76e14976d99628a5a0a7309fa4c2b6ec128d881000b95254007bf74426d85366\",\n\t\t\t\t\t\t\"clientTls\": {\n\t\t\t\t\t\t\t\"cipherstring\": \"DEFAULT\",\n\t\t\t\t\t\t\t\"tlsVersions\": {\n\t\t\t\t\t\t\t\t\"enableTLS1.1\": false,\n\t\t\t\t\t\t\t\t\"enableTLS1.2\": true,\n\t\t\t\t\t\t\t\t\"enableTLS1.3\": true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"dnsResolverName\": \"global_f5_internal_net_resolver\",\n\t\t\t\t\t\t\"mode\": \"client\",\n\t\t\t\t\t\t\"name\": \"Client\",\n\t\t\t\t\t\t\"overrideVendorPresets\": false,\n\t\t\t\t\t\t\"providerName\": \"OAuth-Provider-f5\",\n\t\t\t\t\t\t\"serverType\": \"Oauth\",\n\t\t\t\t\t\t\"tokenValidationInterval\": 60\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"allowSelfSignedJwkCert\": true,\n\t\t\t\t\t\t\"authenticationUri\": \"https://10.1.10.231/f5-oauth2/v1/authorize\",\n\t\t\t\t\t\t\"enableAutoDiscovery\": false,\n\t\t\t\t\t\t\"ignoreExpiredCert\": true,\n\t\t\t\t\t\t\"introspect\": \"supported\",\n\t\t\t\t\t\t\"jwtConfig\": {\n\t\t\t\t\t\t\t\"accessTokenExpiresIn\": 0,\n\t\t\t\t\t\t\t\"allowedKeys\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"algType\": \"RS256\",\n\t\t\t\t\t\t\t\t\t\"certThumbprintSha256\": \"-UXU1cDlX78gI9wZQ4MhhNKqBQ3vsNQI6wHFZwvScpU\",\n\t\t\t\t\t\t\t\t\t\"keyId\": \"d8ca49b0a3a8a440\",\n\t\t\t\t\t\t\t\t\t\"keyType\": \"rsa\",\n\t\t\t\t\t\t\t\t\t\"modulus\": \"lSEaMrX053MfyFGUt8-0Csn7qeLMu4rxheplbxGxF8alGyLk9-cVjPMUhpErBqcFcNtTOI7F-z9aUlN8GU2Y8r9CCXkiiMC5g03BpXRx_BnB6g94YWWpTjXTDyx-0Ew5X_ekQAZyBxUI3H5iEdOTAlUinG3XxwXl8JGH3K96XIDKC8JdZJJDw1iVsQweJ8hIC0Q_O92tkzdqGPK00A39gb__aY7GbilNowbPJvXhZWyDMUyWSrPXKCZI7ps09IC5az_Ue_aN5nb7q5tsB4iQum8Ol99UFhwYH4pBb3yIB99jLrL8rasnvnRFpLQCrubj4n54ssUGoDgCpbJzwCF6GQ\",\n\t\t\t\t\t\t\t\t\t\"publicExponent\": \"AQAB\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"allowedSigningAlgorithms\": [\n\t\t\t\t\t\t\t\t\"RS256\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"audience\": [],\n\t\t\t\t\t\t\t\"blockedKeys\": [],\n\t\t\t\t\t\t\t\"blockedSigningAlgorithms\": [],\n\t\t\t\t\t\t\t\"issuer\": \"https://10.1.10.231\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"name\": \"OAuth-Provider-f5\",\n\t\t\t\t\t\t\"openIdUri\": \"https://f5-oauth.local/f5-oauth2/v1/.well-known/openid-configuration\",\n\t\t\t\t\t\t\"providerType\": \"f5\",\n\t\t\t\t\t\t\"serverType\": \"OauthProvider\",\n\t\t\t\t\t\t\"tokenUri\": \"https://10.1.10.231/f5-oauth2/v1/token\",\n\t\t\t\t\t\t\"tokenValidationScopeUri\": \"https://10.1.10.231/f5-oauth2/v1/introspect\",\n\t\t\t\t\t\t\"userinfoRequestUri\": \"https://10.1.10.231/f5-oauth2/v1/userinfo\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"httpOnlyCookie\": false,\n\t\t\t\t\"inactivityTimeout\": 900,\n\t\t\t\t\"logoutUriTimeout\": 5,\n\t\t\t\t\"maxConcurrentSessions\": 0,\n\t\t\t\t\"maxConcurrentUsers\": 0,\n\t\t\t\t\"maxFailureDelay\": 5,\n\t\t\t\t\"maxInProgressSessions\": 128,\n\t\t\t\t\"maxSessionTimeout\": 604800,\n\t\t\t\t\"minFailureDelay\": 2,\n\t\t\t\t\"name\": \"{{psp_policy_name}}\",\n\t\t\t\t\"persistentCookie\": false,\n\t\t\t\t\"policy\": {\n\t\t\t\t\t\"objectContent\": {\n\t\t\t\t\t\t\"defaultLanguage\": \"en\",\n\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"deny\",\n\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"allow\",\n\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"languages\": [\n\t\t\t\t\t\t\t\"en\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"macros\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"Emptyab3cd5ba\",\n\t\t\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\"grantType\": \"authorization-code\",\n\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\"itemType\": \"oauth-client\",\n\t\t\t\t\t\t\t\t\t\"name\": \"OAuth-Federation-02497c61\",\n\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Branch-25059314\",\n\t\t\t\t\t\t\t\t\t\t\t\"expression\": \"expr {[mcget {session.oauth.client.last.authresult}] == 1}\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"oauthServer\": \"Client\",\n\t\t\t\t\t\t\t\t\t\"openidConnect\": false,\n\t\t\t\t\t\t\t\t\t\"redirectionUri\": \"https://%{session.server.network.name}/oauth/client/redirect\",\n\t\t\t\t\t\t\t\t\t\"requestAuthRedirect\": {\n\t\t\t\t\t\t\t\t\t\t\"headers\": [],\n\t\t\t\t\t\t\t\t\t\t\"method\": \"get\",\n\t\t\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"client_id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"client-id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"response_type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"response-type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"redirect_uri\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"redirect-uri\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"scope\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"scope\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"requestRefreshToken\": {\n\t\t\t\t\t\t\t\t\t\t\"headers\": [],\n\t\t\t\t\t\t\t\t\t\t\"method\": \"post\",\n\t\t\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"client_id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"client-id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"client_secret\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"client-secret\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"grant_type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"custom\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"refresh_token\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"requestToken\": {\n\t\t\t\t\t\t\t\t\t\t\"headers\": [],\n\t\t\t\t\t\t\t\t\t\t\"method\": \"post\",\n\t\t\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"client_id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"client-id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"client_secret\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"client-secret\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"grant_type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"grant-type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"redirect_uri\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"redirect-uri\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"ruleId\": \"OAuth-Federation-58f71f60\",\n\t\t\t\t\t\t\t\t\t\"ruleType\": \"oauth-client\",\n\t\t\t\t\t\t\t\t\t\"scope\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\"itemType\": \"macro-call\",\n\t\t\t\t\t\t\t\"macro\": \"Emptyab3cd5ba\",\n\t\t\t\t\t\t\t\"name\": \"Empty-7d8e0af0\",\n\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Deny\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"deny\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"allow\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"policyType\": \"PerSession\",\n\t\t\t\t\"profileType\": \"all\",\n\t\t\t\t\"restrictToSingleClientIP\": false,\n\t\t\t\t\"samesiteCookie\": false,\n\t\t\t\t\"samesiteCookieAttrValue\": \"strict\",\n\t\t\t\t\"scope\": \"profile\",\n\t\t\t\t\"secureCookie\": false,\n\t\t\t\t\"timeout\": 300,\n\t\t\t\t\"useHttp503OnError\": false,\n\t\t\t\t\"userIdentityMethod\": \"http\"\n\t\t\t},\n\t\t\t\"connectivityProfileConfiguration\": {\n\t\t\t\t\"clientPolicy\": {\n\t\t\t\t\t\"androidEcRequireDeviceAuth\": false,\n\t\t\t\t\t\"androidEcSavePasswordMethod\": \"disk\",\n\t\t\t\t\t\"androidEcSavePasswordTimeout\": 240,\n\t\t\t\t\t\"chromeosEcLogonMethod\": \"native\",\n\t\t\t\t\t\"chromeosEcSavePasswordMethod\": \"disk\",\n\t\t\t\t\t\"chromeosEcSavePasswordTimeout\": 240,\n\t\t\t\t\t\"ecComponentUpdate\": \"yes\",\n\t\t\t\t\t\"ecLocationDnsList\": [],\n\t\t\t\t\t\"ecReuseWinlogonCreds\": false,\n\t\t\t\t\t\"ecReuseWinlogonSession\": false,\n\t\t\t\t\t\"ecRunLogoffScript\": false,\n\t\t\t\t\t\"ecSavePasswordMethod\": \"none\",\n\t\t\t\t\t\"ecSavePasswordTimeout\": 240,\n\t\t\t\t\t\"ecSaveServersOnExit\": true,\n\t\t\t\t\t\"ecWarnBeforeScriptLaunch\": true,\n\t\t\t\t\t\"iosEcRequireDeviceAuth\": false,\n\t\t\t\t\t\"iosEcSavePasswordMethod\": \"disk\",\n\t\t\t\t\t\"iosEcSavePasswordTimeout\": 240,\n\t\t\t\t\t\"macosEcLogonMethod\": \"native\",\n\t\t\t\t\t\"macosEcSavePasswordMethod\": \"disk\",\n\t\t\t\t\t\"macosEcSavePasswordTimeout\": 240,\n\t\t\t\t\t\"name\": \"{{psp_policy_name}}_cap_clientPolicy\",\n\t\t\t\t\t\"serverList\": []\n\t\t\t\t},\n\t\t\t\t\"compressBufferSize\": 4096,\n\t\t\t\t\"compressCpusaver\": true,\n\t\t\t\t\"compressCpusaverHigh\": 90,\n\t\t\t\t\"compressCpusaverLow\": 75,\n\t\t\t\t\"compressGzipLevel\": 6,\n\t\t\t\t\"compressGzipMemlevel\": 8192,\n\t\t\t\t\"compressGzipWindowsize\": 16384,\n\t\t\t\t\"compressionAdaptive\": true,\n\t\t\t\t\"compressionCodecs\": [],\n\t\t\t\t\"compressionDeflateLevel\": 1,\n\t\t\t\t\"name\": \"{{psp_policy_name}}_cap\",\n\t\t\t\t\"policyType\": \"ConnectivityAccessPolicy\",\n\t\t\t\t\"pppTunnel\": {\n\t\t\t\t\t\"profilePpp\": {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"loggingConfiguration\": [\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"apmd\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"tmm\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"websso\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"renderer\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create OAuth Client App",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"id = resp.id;",
											"pm.collectionVariables.set(\"fast_path\", resp.path);",
											"pm.collectionVariables.set(\"appsvc-id\", id)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"OAuth_Client_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"OAuth_Client_Policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{app_name}}\",\n  \"set_name\": \"Examples\",\n  \"template_name\": \"http\",\n  \"description\": \"{{app_name}}-description\",\n  \"parameters\": {\n    \"application_name\": \"{{app_name}}\",\n    \"application_description\": \"{{app_name}}-description\",\n    \"enable_Global_Resiliency\": false,\n    \"monitors\": [\n      {\n        \"interval\": 5,\n        \"isDefault\": true,\n        \"isHttpMonitor\": true,\n        \"monitorName\": \"http\",\n        \"monitorType\": \"http\",\n        \"receiveString\": \".*\",\n        \"sendString\": \"GET / HTTP/1.0\\\\r\\\\n\\\\r\\\\n\",\n        \"timeout\": 16\n      }\n    ],\n    \"pools\": [\n      {\n        \"loadBalancingMode\": \"round-robin\",\n        \"loadBalancingRatio\": 10,\n        \"monitorType\": [\n          \"http\"\n        ],\n        \"servicePort\": 80,\n        \"application_name\": \"{{app_name}}\",\n        \"poolName\": \"pool_{{app_name}}\"\n      }\n    ],\n    \"virtuals\": [\n      {\n        \"FastL4_idleTimeout\": 600,\n        \"FastL4_looseClose\": true,\n        \"FastL4_looseInitialization\": true,\n        \"FastL4_resetOnTimeout\": true,\n        \"FastL4_tcpCloseTimeout\": 43200,\n        \"FastL4_tcpHandshakeTimeout\": 43200,\n        \"TCP_idle_timeout\": 60,\n        \"UDP_idle_timeout\": 60,\n\t\t\"is_virtual_type_standard\": true,\n\t\t\"auto_last_hop\": \"auto\",\n\t\t\"enable_Access\": true,\n\t\t\"accessPolicyEnum\": \"{{psp_policy_name}}\",\n        \"accessAdditionalConfigurations\": \" \",\n        \"enable_FastL4\": false,\n        \"enable_HTTP2_Profile\": false,\n        \"enable_TCP_Profile\": false,\n        \"enable_TLS_Client\": true,\n        \"enable_TLS_Server\": false,\n        \"enable_UDP_Profile\": false,\n        \"enable_snat\": true,\n        \"snat_addresses\": [],\n        \"snat_automap\": true,\n        \"enable_WAF\": false,\n        \"enable_iRules\": false,\n        \"virtualPort\": 443,\n        \"pool\": \"pool_{{app_name}}\",\n        \"virtualName\": \"vs_{{app_name}}\",\n\t\t\"virtualType\": \"standard\",\n        \"multiCertificatesEnum\": [\n          {\n\t\t\t\"advanced_configuration\": false,\n\t\t\t\"authentication_depth\": 9,\n\t\t\t\"authentication_frequency\": \"one-time\",\n\t\t\t\"ciphers\": \"DEFAULT\",\n\t\t\t\"clientTlsName\": \"clienttls-cert\",\n\t\t\t\"dh_groups\": \"DEFAULT\",\n\t\t\t\"ecdsaCertificate\": \"\",\n\t\t\t\"enable_authentication\": false,\n\t\t\t\"rsaCertificate\": \"self_demo.f5.com\",\n\t\t\t\"signature_algorithms\": \"DEFAULT\",\n\t\t\t\"sniDefault\": true,\n\t\t\t\"sniServers\": [],\n\t\t\t\"tls_c_1_1\": false,\n\t\t\t\"tls_c_1_2\": true,\n\t\t\t\"tls_c_1_3\": false,\n\t\t\t\"trustCACertificate\": \"\",\n\t\t\t\"useMultiCerts\": false\n          }\n        ]\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deploy OAuth Client Application to Instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)",
											"pm.collectionVariables.set(\"deploymentID\", resp.deployments[0].deploymentID)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"OAuth_Client_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"OAuth_Client_Policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deployments\": [\n    {\n      \"parameters\": {\n        \"virtuals\": [\n          {\n            \"virtualAddress\": \"{{access_OAuth_Client2_vip}}\",\n            \"virtualName\": \"vs_{{app_name}}\"\n          }\n        ],\n        \"pools\": [\n\t\t{\n            \"poolName\": \"pool_{{app_name}}\",\n            \"poolMembers\": [\n              {\n                \"address\": \"{{example_web}}\",\n                \"name\": \"poolmember1\"\n              }\n            ]\n          }\n\n        ]\n      },\n      \"additional_parameters\": {\n        \"access\": [\n          {\n            \"policyName\": \"{{psp_policy_name}}\",\n\t\t\t\"dnsResolvers\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"config\": {\n\t\t\t\t\t\t\t\t\t\"forwardZones\": [],\n\t\t\t\t\t\t\t\t\t\"l3ForwardType\": \"netResolver\",\n\t\t\t\t\t\t\t\t\t\"name\": \"{{psp_policy_name}}-OAuth-Client\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"l3Network\": \"Default\",\n\t\t\t\t\t\t\t\t\"name\": \"{{psp_policy_name}}-OAuth-Client\"\n\t\t\t\t\t\t\t}\n\t\t\t],\n\t\t\t\"externalServers\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"dnsResolverName\": \"global_f5_internal_net_resolver\",\n\t\t\t\t\t\t\t\t\"name\": \"OAuth-Client\",\n\t\t\t\t\t\t\t\t\"serverType\": \"Oauth\"\n\t\t\t\t\t\t\t}\n\t\t\t],\n            \"l3Forwards\": [\n              {\n                \"name\": \"global_f5_internal_net_resolver\",\n                \"config\": {\n                  \"forwardZones\": [\n                    {\n                      \"forwardZone\": \".\",\n                      \"nameserver\": \"10.1.20.6:53\"\n                    }\n                  ],\n                  \"l3ForwardType\": \"netResolver\",\n                  \"name\": \"global_f5_internal_net_resolver\"\n                },\n                \"vrf\": \"Default\"\n              }\n            ]\n          }\n        ]\n      },\n      \"target\": {\n        \"address\": \"{{bigip_next_3_address}}\"\n      },\n      \"allow_overwrite\": true\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Policies GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {},
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Azure Policy + Kerberos SSO",
					"item": [
						{
							"name": "Login-CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Login status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var resp = pm.response.json();",
											"pm.environment.set(\"bigip_next_cm_token\", resp.access_token);",
											"pm.collectionVariables.set(\"bigip_next_cm_token\", resp.access_token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"{{bigip_next_cm_admin_password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/login",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Certificate Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"azure_signed_cert\",\r\n    \"cert_text\": \"-----BEGIN CERTIFICATE-----\\nMIIC8DCCAdigAwIBAgIQH1/+DEGWlahFP3UgVPfwHzANBgkqhkiG9w0BAQsFADA0MTIwMAYDVQQD\\nEylNaWNyb3NvZnQgQXp1cmUgRmVkZXJhdGVkIFNTTyBDZXJ0aWZpY2F0ZTAeFw0yMTA5MjMwOTUy\\nNTZaFw0yNDA5MjMwOTUyNTVaMDQxMjAwBgNVBAMTKU1pY3Jvc29mdCBBenVyZSBGZWRlcmF0ZWQg\\nU1NPIENlcnRpZmljYXRlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAyUoVByQJPICH\\nLp/koHHSR1JxfTdqJ3/Q3lEkI/0YkxwkuR0JpyruF5h7Iu6u5ZOEm2rn4+suKgc/sbjAExnmuBtt\\nMC2bfIKNKccZn39wOFv/j/EwqkMsEKIajKRths2MjQjhm4vZdz0kF9jqExzRLfbtyrxa/js+LFrf\\nSUY2RuPTEWiCrsa82tl4e+d6VbKBnu+25PG4sECZZtcRFkKkEddLzmqAQ4WQ/VhJLRL29guanbgA\\nlEdLA9fX6GS0hlRyCarC6ibGDdzfy2OC/nNBqsV79y6B5F1YTJO7RVNigow4JhyfeAXycmXytV41\\n+1Xqb5PWnwpFZdZsatL51KaCHQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQAWtlOLbldbemGndllR\\nn7on00W7a5zCbodV3AI6Tvh07CCdIgj8tZcz+KjcTNdtQ0abLuiBf0Wo9gJyq1rlg41jBK2Sg1o2\\n/PaYTCCPVvWu8KXjcZyj5/bAh5ZKU+yFsQgbfnZOgN99XzldTyTmZbOp+K+bKRxLZle1uxU4es8b\\nD6N2nMdHgepWaEj/dENmUu0i+ZMZziv4if3fHDnVA9oqkX9L5JB+HHQBI+H+qvKS/4FVCR3s8jtI\\nfXJAxnwNZqqtC1u64XPtALoLZpKLlVS9lx3soOpeAOB5MR6K3V2hwrdxHIIq+OwqhrZdmjDwGWDD\\n0FIqpD0YeGq82NnvqdGY\\n-----END CERTIFICATE-----\",\r\n    \"item_type\": \"PEM\"\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/certificate/v1/certificates/import",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"certificate",
										"v1",
										"certificates",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Certs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "default",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/certificate/v1/certificates",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"certificate",
										"v1",
										"certificates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Instance ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"resp = pm.response.json();\r",
											"\r",
											"pm.collectionVariables.set(\"fast_path\", resp._links.self.href);\r",
											"pm.collectionVariables.set(\"appsvc-id\", resp._embedded.devices[0].id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "default",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/device/v1/inventory?filter=address eq '{{bigip_next_mgmt_target_ip}}'",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"device",
										"v1",
										"inventory"
									],
									"query": [
										{
											"key": "filter",
											"value": "address eq '{{bigip_next_mgmt_target_ip}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create L3 forward DNS resolver",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "default",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\t\"name\": \"global_f5_internal_net_resolver\",\r\n\t\t\"config\": {\r\n\t\t\t\"name\": \"global_f5_internal_net_resolver\",\r\n\t\t\t\"useTcp\": true,\r\n\t\t\t\"useUdp\": true,\r\n\t\t\t\"useIpv4\": true,\r\n\t\t\t\"useIpv6\": false,\r\n\t\t\t\"description\": \"\",\r\n\t\t\t\"forwardZones\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"nameserver\": \"10.1.20.6:53\",\r\n\t\t\t\t\t\"forwardZone\": \".\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"l3ForwardType\": \"netResolver\",\r\n\t\t\t\"answerDefaultZones\": false,\r\n\t\t\t\"randomQueryNameCase\": false\r\n\t\t},\r\n\t\t\"vrf\": \"Default\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/{{appsvc-id}}/l3forwards",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"{{appsvc-id}}",
										"l3forwards"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get L3 forward",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "default",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/{{appsvc-id}}/l3forwards",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"{{appsvc-id}}",
										"l3forwards"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete L3 forward",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "default",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/{{appsvc-id}}/l3forwards/a5b80261-40bc-4ebf-8806-e9cf40a373f8",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"{{appsvc-id}}",
										"l3forwards",
										"a5b80261-40bc-4ebf-8806-e9cf40a373f8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a basic SAML SP Policy+SSO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"psp_policy_name\", \"signed_azure_policy\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{psp_policy_name}}\",\n\t\"policy_type\": \"PerSession\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"configuration\": {\n\t\t\t\t\"connectivityAccessPolicyName\": \"{{psp_policy_name}}_cap\",\n\t\t\t\t\"domainCookie\": \"\",\n\t\t\t\t\"externalServers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"certificate\": \"azure_signed_cert.crt\",\n\t\t\t\t\t\t\"entityId\": \"{{access_azure_signed_EntityID}}\",\n\t\t\t\t\t\t\"name\": \"Idp\",\n\t\t\t\t\t\t\"serverType\": \"SamlIdPConnector\",\n\t\t\t\t\t\t\"signatureType\": \"sha256\",\n\t\t\t\t\t\t\"ssoBinding\": \"http-post\",\n\t\t\t\t\t\t\"ssoUri\": \"{{access_azure_signed_SSOURI}}\",\n\t\t\t\t\t\t\"wantAuthnRequestSigned\": false\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"httpOnlyCookie\": false,\n\t\t\t\t\"inactivityTimeout\": 900,\n\t\t\t\t\"logoutUriTimeout\": 5,\n\t\t\t\t\"maxConcurrentSessions\": 0,\n\t\t\t\t\"maxConcurrentUsers\": 0,\n\t\t\t\t\"maxFailureDelay\": 5,\n\t\t\t\t\"maxInProgressSessions\": 128,\n\t\t\t\t\"maxSessionTimeout\": 604800,\n\t\t\t\t\"minFailureDelay\": 2,\n\t\t\t\t\"name\": \"{{psp_policy_name}}\",\n\t\t\t\t\"persistentCookie\": false,\n\t\t\t\t\"policy\": {\n\t\t\t\t\t\"objectContent\": {\n\t\t\t\t\t\t\"defaultLanguage\": \"en\",\n\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"deny\",\n\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"allow\",\n\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"languages\": [\n\t\t\t\t\t\t\t\"en\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"macros\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"Generic-SAML-{{psp_policy_name}}\",\n\t\t\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\"itemType\": \"saml\",\n\t\t\t\t\t\t\t\t\t\"name\": \"SAML-Federation-{{psp_policy_name}}\",\n\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\t\t\"expression\": \"expr {[mcget {session.saml.last.result}] == 1}\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"ruleType\": \"saml\",\n\t\t\t\t\t\t\t\t\t\"service\": {\n\t\t\t\t\t\t\t\t\t\t\"acsBinding\": \"http-post\",\n\t\t\t\t\t\t\t\t\t\t\"authCtxComparisonType\": \"exact\",\n\t\t\t\t\t\t\t\t\t\t\"entityId\": \"{{access_azure_Service_EntityID}}\",\n\t\t\t\t\t\t\t\t\t\t\"forceAuthn\": false,\n\t\t\t\t\t\t\t\t\t\t\"idpConnectors\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Idp\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\"isAuthnRequestSigned\": false,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"SAML-Federation-{{psp_policy_name}}\",\n\t\t\t\t\t\t\t\t\t\t\"spURI\": \"{{access_azure_Service_URI}}\",\n\t\t\t\t\t\t\t\t\t\t\"wantAssertionEncrypted\": false,\n\t\t\t\t\t\t\t\t\t\t\"wantAssertionSigned\": true\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\"itemType\": \"macro-call\",\n\t\t\t\t\t\t\t\"macro\": \"Generic-SAML-{{psp_policy_name}}\",\n\t\t\t\t\t\t\t\"name\": \"Generic-SAML-Federation\",\n\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"allow\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Deny\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"deny\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"policyType\": \"PerSession\",\n\t\t\t\t\"profileType\": \"all\",\n\t\t\t\t\"restrictToSingleClientIP\": false,\n\t\t\t\t\"samesiteCookie\": false,\n\t\t\t\t\"samesiteCookieAttrValue\": \"strict\",\n\t\t\t\t\"scope\": \"profile\",\n\t\t\t\t\"secureCookie\": false,\n\t\t\t\t\"ssoReference\": \"Kerberos-SSO-{{psp_policy_name}}\",\n\t\t\t\t\"ssos\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"accountName\": \"{{access_delegation_account_name}}\",\n\t\t\t\t\t\t\"accountPassword\": \"{{access_delegation_account_pwd}}\",\n\t\t\t\t\t\t\"domainSource\": \"session.logon.last.domain\",\n\t\t\t\t\t\t\"kdc\": \"10.1.20.6\",\n\t\t\t\t\t\t\"name\": \"Kerberos-SSO-{{psp_policy_name}}\",\n\t\t\t\t\t\t\"realm\": \"{{access_kdc_realm}}\",\n\t\t\t\t\t\t\"sendAuthorization\": \"always\",\n\t\t\t\t\t\t\"spnPattern\": \"{{access_SPN_Pattern}}\",\n\t\t\t\t\t\t\"ssoType\": \"Kerberos\",\n\t\t\t\t\t\t\"ticketLifetime\": 600,\n\t\t\t\t\t\t\"upn\": true,\n\t\t\t\t\t\t\"usernameSource\": \"session.saml.last.identity\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"timeout\": 300,\n\t\t\t\t\"useHttp503OnError\": false\n\t\t\t},\n\t\t\t\"connectivityProfileConfiguration\": {\n\t\t\t\t\"clientPolicy\": {\n\t\t\t\t\t\"ecLocationDnsList\": [],\n\t\t\t\t\t\"name\": \"{{psp_policy_name}}_cap_clientPolicy\"\n\t\t\t\t},\n\t\t\t\t\"name\": \"{{psp_policy_name}}_cap\",\n\t\t\t\t\"policyType\": \"ConnectivityAccessPolicy\",\n\t\t\t\t\"pppTunnel\": {\n\t\t\t\t\t\"profilePpp\": {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"loggingConfiguration\": [\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"apmd\",\n\t\t\t\t\t\"level\": \"DEBUG\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"tmm\",\n\t\t\t\t\t\"level\": \"DEBUG\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"websso\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"renderer\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"id = resp.id;",
											"pm.collectionVariables.set(\"fast_path\", resp.path);",
											"pm.collectionVariables.set(\"appsvc-id\", id)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"access_azure_sso_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"signed_azure_policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{app_name}}\",\n  \"set_name\": \"Examples\",\n  \"template_name\": \"http\",\n  \"description\": \"{{app_name}}-description\",\n  \"parameters\": {\n    \"application_name\": \"{{app_name}}\",\n    \"application_description\": \"{{app_name}}-description\",\n    \"enable_Global_Resiliency\": false,\n    \"monitors\": [\n      {\n        \"interval\": 5,\n        \"isDefault\": true,\n        \"isHttpMonitor\": true,\n        \"monitorName\": \"http\",\n        \"monitorType\": \"http\",\n        \"receiveString\": \".*\",\n        \"sendString\": \"GET / HTTP/1.0\\\\r\\\\n\\\\r\\\\n\",\n        \"timeout\": 16\n      }\n    ],\n    \"pools\": [\n      {\n        \"loadBalancingMode\": \"round-robin\",\n        \"loadBalancingRatio\": 10,\n        \"monitorType\": [\n          \"http\"\n        ],\n        \"servicePort\": 80,\n        \"application_name\": \"{{app_name}}\",\n        \"poolName\": \"pool_{{app_name}}\"\n      }\n    ],\n    \"virtuals\": [\n      {\n        \"FastL4_idleTimeout\": 600,\n        \"FastL4_looseClose\": true,\n        \"FastL4_looseInitialization\": true,\n        \"FastL4_resetOnTimeout\": true,\n        \"FastL4_tcpCloseTimeout\": 43200,\n        \"FastL4_tcpHandshakeTimeout\": 43200,\n        \"TCP_idle_timeout\": 60,\n        \"UDP_idle_timeout\": 60,\n\t\t\"is_virtual_type_standard\": true,\n\t\t\"auto_last_hop\": \"auto\",\n\t\t\"enable_Access\": true,\n\t\t\"accessPolicyEnum\": \"{{psp_policy_name}}\",\n        \"accessAdditionalConfigurations\": \" \",\n        \"enable_FastL4\": false,\n        \"enable_HTTP2_Profile\": false,\n        \"enable_TCP_Profile\": false,\n        \"enable_TLS_Client\": true,\n        \"enable_TLS_Server\": false,\n        \"enable_UDP_Profile\": false,\n        \"enable_snat\": true,\n        \"snat_addresses\": [],\n        \"snat_automap\": true,\n        \"enable_WAF\": false,\n        \"enable_iRules\": false,\n        \"virtualPort\": 443,\n        \"pool\": \"pool_{{app_name}}\",\n        \"virtualName\": \"vs_{{app_name}}\",\n\t\t\"virtualType\": \"standard\",\n        \"multiCertificatesEnum\": [\n          {\n\t\t\t\"advanced_configuration\": false,\n\t\t\t\"authentication_depth\": 9,\n\t\t\t\"authentication_frequency\": \"one-time\",\n\t\t\t\"ciphers\": \"DEFAULT\",\n\t\t\t\"clientTlsName\": \"clienttls-cert\",\n\t\t\t\"dh_groups\": \"DEFAULT\",\n\t\t\t\"ecdsaCertificate\": \"\",\n\t\t\t\"enable_authentication\": false,\n\t\t\t\"rsaCertificate\": \"self_demo.f5.com\",\n\t\t\t\"signature_algorithms\": \"DEFAULT\",\n\t\t\t\"sniDefault\": true,\n\t\t\t\"sniServers\": [],\n\t\t\t\"tls_c_1_1\": false,\n\t\t\t\"tls_c_1_2\": true,\n\t\t\t\"tls_c_1_3\": false,\n\t\t\t\"trustCACertificate\": \"\",\n\t\t\t\"useMultiCerts\": false\n          }\n        ]\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deploy Application to Instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)",
											"pm.collectionVariables.set(\"deploymentID\", resp.deployments[0].deploymentID)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"access_azure_sso_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"signed_azure_policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deployments\": [\n    {\n      \"parameters\": {\n        \"pools\": [\n          {\n            \"poolName\": \"pool_{{app_name}}\",\n            \"poolMembers\": [\n              {\n                \"address\": \"{{example_web}}\",\n                \"name\": \"poolmember1\"\n              }\n            ]\n          }\n        ],\n        \"virtuals\": [\n          {\n            \"virtualAddress\": \"{{access_azure_signed_vip}}\",\n            \"virtualName\": \"vs_{{app_name}}\"\n          }\n        ]\n      },\n      \"target\": {\n        \"address\": \"{{bigip_next_3_address}}\"\n      },\n      \"allow_overwrite\": true\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Access Sessions-All",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/access-sessions",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"access-sessions"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Policies GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {},
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "SAML-SP-Custom-IdP (BIG-IP)",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Login status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var resp = pm.response.json();\r",
											"pm.environment.set(\"bigip_next_cm_token\", resp.access_token);\r",
											"pm.collectionVariables.set(\"bigip_next_cm_token\", resp.access_token);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"{{bigip_next_cm_admin_password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/login",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Certificate to CM",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"apm_hybrid_cert\",\r\n    \"cert_text\": \"-----BEGIN CERTIFICATE-----\\nMIIDrjCCApagAwIBAgIEGsPKKTANBgkqhkiG9w0BAQsFADCBmDELMAkGA1UEBhMC\\nVVMxCzAJBgNVBAgTAldBMRAwDgYDVQQHEwdTZWF0dGxlMRIwEAYDVQQKEwlNeUNv\\nbXBhbnkxCzAJBgNVBAsTAklUMR4wHAYDVQQDExVsb2NhbGhvc3QubG9jYWxkb21h\\naW4xKTAnBgkqhkiG9w0BCQEWGnJvb3RAbG9jYWxob3N0LmxvY2FsZG9tYWluMB4X\\nDTI0MDMyNTEzMDEyOVoXDTM0MDMyMzEzMDEyOVowgZgxCzAJBgNVBAYTAlVTMQsw\\nCQYDVQQIEwJXQTEQMA4GA1UEBxMHU2VhdHRsZTESMBAGA1UEChMJTXlDb21wYW55\\nMQswCQYDVQQLEwJJVDEeMBwGA1UEAxMVbG9jYWxob3N0LmxvY2FsZG9tYWluMSkw\\nJwYJKoZIhvcNAQkBFhpyb290QGxvY2FsaG9zdC5sb2NhbGRvbWFpbjCCASIwDQYJ\\nKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJUhGjK19OdzH8hRlLfPtArJ+6nizLuK\\n8YXqZW8RsRfGpRsi5PfnFYzzFIaRKwanBXDbUziOxfs/WlJTfBlNmPK/Qgl5IojA\\nuYNNwaV0cfwZweoPeGFlqU410w8sftBMOV/3pEAGcgcVCNx+YhHTkwJVIpxt18cF\\n5fCRh9yvelyAygvCXWSSQ8NYlbEMHifISAtEPzvdrZM3ahjytNAN/YG//2mOxm4p\\nTaMGzyb14WVsgzFMlkqz1ygmSO6bNPSAuWs/1Hv2jeZ2+6ubbAeIkLpvDpffVBYc\\nGB+KQW98iAffYy6y/K2rJ750RaS0Aq7m4+J+eLLFBqA4AqWyc8AhehkCAwEAATAN\\nBgkqhkiG9w0BAQsFAAOCAQEAb0ibTlpkLixjHE1SFdHsoGUBupaZc/mMdVmCZFzv\\nuwiBbD94AoaiP+xn0Emp48NP1eK+m8WrlCXszQ6Fl92SFCx7TWJYlYvRRSbJ/lZZ\\ng3q3Rl/DmvjWueZC0wrhB+TqHZCmrSX5KBvRXyQO6Xl5BEEuH9V4C6OcQvhJlNXW\\nrXzAIH1bHzbS4z/hg14uaqZJkDSC14dgVkgTSUhSFbo66UXaX19ZeJHUvSsGh8nG\\ncGieCnsQBgwmQVRu92mV7MLYUqAObeXKb6L2GEo39eSDKmIcG1lWWD1DlPlFNrpy\\nzgE5rUbEiErrlsn46n8oFgtsJdxTkXJJ6pEPf+9WvZGRwQ==\\n-----END CERTIFICATE-----\",\r\n    \"item_type\": \"PEM\"\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/certificate/v1/certificates/import",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"certificate",
										"v1",
										"certificates",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Access Policy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"psp_policy_name\", \"access_saml_next_policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{psp_policy_name}}\",\n\t\"policy_type\": \"PerSession\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"configuration\": {\n\t\t\t\t\"connectivityAccessPolicyName\": \"{{psp_policy_name}}_cap\",\n\t\t\t\t\"domainCookie\": \"\",\n\t\t\t\t\"externalServers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"certificate\": \"apm_hybrid_cert.crt\",\n\t\t\t\t\t\t\"entityId\": \"{{IdPEntityID}}\",\n\t\t\t\t\t\t\"name\": \"bigip_IdP_next_saml_sp_saml_sso_metadata_1715965595629\",\n\t\t\t\t\t\t\"serverType\": \"SamlIdPConnector\",\n\t\t\t\t\t\t\"signatureType\": \"sha256\",\n\t\t\t\t\t\t\"ssoBinding\": \"http-post\",\n\t\t\t\t\t\t\"ssoUri\": \"{{IdPEntityID}}/saml/idp/profile/redirectorpost/sso\",\n\t\t\t\t\t\t\"wantAuthnRequestSigned\": false\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"httpOnlyCookie\": false,\n\t\t\t\t\"inactivityTimeout\": 900,\n\t\t\t\t\"logoutUriTimeout\": 5,\n\t\t\t\t\"maxConcurrentSessions\": 0,\n\t\t\t\t\"maxConcurrentUsers\": 0,\n\t\t\t\t\"maxFailureDelay\": 5,\n\t\t\t\t\"maxInProgressSessions\": 128,\n\t\t\t\t\"maxSessionTimeout\": 604800,\n\t\t\t\t\"minFailureDelay\": 2,\n\t\t\t\t\"name\": \"{{psp_policy_name}}\",\n\t\t\t\t\"persistentCookie\": false,\n\t\t\t\t\"policy\": {\n\t\t\t\t\t\"objectContent\": {\n\t\t\t\t\t\t\"defaultLanguage\": \"en\",\n\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"deny\",\n\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"allow\",\n\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"languages\": [\n\t\t\t\t\t\t\t\"en\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"macros\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"Generic-SAML-Federation2458d9e0\",\n\t\t\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\"itemType\": \"saml\",\n\t\t\t\t\t\t\t\t\t\"name\": \"SAML-Federation-d29c544a\",\n\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\t\t\"expression\": \"expr {[mcget {session.saml.last.result}] == 1}\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"ruleId\": \"saml-HC1rszx1\",\n\t\t\t\t\t\t\t\t\t\"ruleType\": \"saml\",\n\t\t\t\t\t\t\t\t\t\"service\": {\n\t\t\t\t\t\t\t\t\t\t\"acsBinding\": \"http-post\",\n\t\t\t\t\t\t\t\t\t\t\"entityId\": \"{{SPEntityID}}\",\n\t\t\t\t\t\t\t\t\t\t\"idpConnectors\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"bigip_IdP_next_saml_sp_saml_sso_metadata_1715965595629\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\"name\": \"SAML-Federation-d29c544a\",\n\t\t\t\t\t\t\t\t\t\t\"spURI\": \"{{SPEntityID}}\",\n\t\t\t\t\t\t\t\t\t\t\"wantAssertionEncrypted\": false,\n\t\t\t\t\t\t\t\t\t\t\"wantAssertionSigned\": true\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\"itemType\": \"macro-call\",\n\t\t\t\t\t\t\t\"macro\": \"Generic-SAML-Federation2458d9e0\",\n\t\t\t\t\t\t\t\"name\": \"Generic-SAML-Federation-40f19ee0\",\n\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"allow\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Deny\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"deny\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"policyType\": \"PerSession\",\n\t\t\t\t\"profileType\": \"all\",\n\t\t\t\t\"restrictToSingleClientIP\": false,\n\t\t\t\t\"samesiteCookie\": false,\n\t\t\t\t\"samesiteCookieAttrValue\": \"strict\",\n\t\t\t\t\"scope\": \"profile\",\n\t\t\t\t\"secureCookie\": false,\n\t\t\t\t\"timeout\": 300,\n\t\t\t\t\"useHttp503OnError\": false,\n\t\t\t\t\"userIdentityMethod\": \"http\"\n\t\t\t},\n\t\t\t\"connectivityProfileConfiguration\": {\n\t\t\t\t\"clientPolicy\": {\n\t\t\t\t\t\"androidEcRequireDeviceAuth\": false,\n\t\t\t\t\t\"androidEcSavePasswordMethod\": \"disk\",\n\t\t\t\t\t\"androidEcSavePasswordTimeout\": 240,\n\t\t\t\t\t\"chromeosEcLogonMethod\": \"native\",\n\t\t\t\t\t\"chromeosEcSavePasswordMethod\": \"disk\",\n\t\t\t\t\t\"chromeosEcSavePasswordTimeout\": 240,\n\t\t\t\t\t\"ecComponentUpdate\": \"yes\",\n\t\t\t\t\t\"ecLocationDnsList\": [],\n\t\t\t\t\t\"ecReuseWinlogonCreds\": false,\n\t\t\t\t\t\"ecReuseWinlogonSession\": false,\n\t\t\t\t\t\"ecRunLogoffScript\": false,\n\t\t\t\t\t\"ecSavePasswordMethod\": \"none\",\n\t\t\t\t\t\"ecSavePasswordTimeout\": 240,\n\t\t\t\t\t\"ecSaveServersOnExit\": true,\n\t\t\t\t\t\"ecWarnBeforeScriptLaunch\": true,\n\t\t\t\t\t\"iosEcRequireDeviceAuth\": false,\n\t\t\t\t\t\"iosEcSavePasswordMethod\": \"disk\",\n\t\t\t\t\t\"iosEcSavePasswordTimeout\": 240,\n\t\t\t\t\t\"macosEcLogonMethod\": \"native\",\n\t\t\t\t\t\"macosEcSavePasswordMethod\": \"disk\",\n\t\t\t\t\t\"macosEcSavePasswordTimeout\": 240,\n\t\t\t\t\t\"name\": \"{{psp_policy_name}}_cap_clientPolicy\",\n\t\t\t\t\t\"serverList\": []\n\t\t\t\t},\n\t\t\t\t\"compressBufferSize\": 4096,\n\t\t\t\t\"compressCpusaver\": true,\n\t\t\t\t\"compressCpusaverHigh\": 90,\n\t\t\t\t\"compressCpusaverLow\": 75,\n\t\t\t\t\"compressGzipLevel\": 6,\n\t\t\t\t\"compressGzipMemlevel\": 8192,\n\t\t\t\t\"compressGzipWindowsize\": 16384,\n\t\t\t\t\"compressionAdaptive\": true,\n\t\t\t\t\"compressionCodecs\": [],\n\t\t\t\t\"compressionDeflateLevel\": 1,\n\t\t\t\t\"name\": \"{{psp_policy_name}}_cap\",\n\t\t\t\t\"policyType\": \"ConnectivityAccessPolicy\",\n\t\t\t\t\"pppTunnel\": {\n\t\t\t\t\t\"profilePpp\": {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"loggingConfiguration\": [\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"apmd\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"tmm\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"websso\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"renderer\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"id = resp.id;",
											"pm.collectionVariables.set(\"fast_path\", resp.path);",
											"pm.collectionVariables.set(\"appsvc-id\", id)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"access_saml_next_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"access_saml_next_policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{app_name}}\",\n  \"set_name\": \"Examples\",\n  \"template_name\": \"http\",\n  \"description\": \"{{app_name}}-description\",\n  \"parameters\": {\n    \"application_name\": \"{{app_name}}\",\n    \"application_description\": \"{{app_name}}-description\",\n    \"enable_Global_Resiliency\": false,\n    \"monitors\": [\n      {\n        \"interval\": 5,\n        \"isDefault\": true,\n        \"isHttpMonitor\": true,\n        \"monitorName\": \"http\",\n        \"monitorType\": \"http\",\n        \"receiveString\": \".*\",\n        \"sendString\": \"GET / HTTP/1.0\\\\r\\\\n\\\\r\\\\n\",\n        \"timeout\": 16\n      }\n    ],\n    \"pools\": [\n      {\n        \"loadBalancingMode\": \"round-robin\",\n        \"loadBalancingRatio\": 10,\n        \"monitorType\": [\n          \"http\"\n        ],\n        \"servicePort\": 80,\n        \"application_name\": \"{{app_name}}\",\n        \"poolName\": \"pool_{{app_name}}\"\n      }\n    ],\n    \"virtuals\": [\n      {\n        \"FastL4_idleTimeout\": 600,\n        \"FastL4_looseClose\": true,\n        \"FastL4_looseInitialization\": true,\n        \"FastL4_resetOnTimeout\": true,\n        \"FastL4_tcpCloseTimeout\": 43200,\n        \"FastL4_tcpHandshakeTimeout\": 43200,\n        \"TCP_idle_timeout\": 60,\n        \"UDP_idle_timeout\": 60,\n\t\t\"is_virtual_type_standard\": true,\n\t\t\"auto_last_hop\": \"auto\",\n\t\t\"enable_Access\": true,\n\t\t\"accessPolicyEnum\": \"{{psp_policy_name}}\",\n        \"accessAdditionalConfigurations\": \" \",\n        \"enable_FastL4\": false,\n        \"enable_HTTP2_Profile\": false,\n        \"enable_TCP_Profile\": false,\n        \"enable_TLS_Client\": true,\n        \"enable_TLS_Server\": false,\n        \"enable_UDP_Profile\": false,\n        \"enable_snat\": true,\n        \"snat_addresses\": [],\n        \"snat_automap\": true,\n        \"enable_WAF\": false,\n        \"enable_iRules\": false,\n        \"virtualPort\": 443,\n        \"pool\": \"pool_{{app_name}}\",\n        \"virtualName\": \"vs_{{app_name}}\",\n\t\t\"virtualType\": \"standard\",\n        \"multiCertificatesEnum\": [\n          {\n\t\t\t\"advanced_configuration\": false,\n\t\t\t\"authentication_depth\": 9,\n\t\t\t\"authentication_frequency\": \"one-time\",\n\t\t\t\"ciphers\": \"DEFAULT\",\n\t\t\t\"clientTlsName\": \"clienttls-cert\",\n\t\t\t\"dh_groups\": \"DEFAULT\",\n\t\t\t\"ecdsaCertificate\": \"\",\n\t\t\t\"enable_authentication\": false,\n\t\t\t\"rsaCertificate\": \"self_demo.f5.com\",\n\t\t\t\"signature_algorithms\": \"DEFAULT\",\n\t\t\t\"sniDefault\": true,\n\t\t\t\"sniServers\": [],\n\t\t\t\"tls_c_1_1\": false,\n\t\t\t\"tls_c_1_2\": true,\n\t\t\t\"tls_c_1_3\": false,\n\t\t\t\"trustCACertificate\": \"\",\n\t\t\t\"useMultiCerts\": false\n          }\n        ]\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deploy Application to Instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)",
											"pm.collectionVariables.set(\"deploymentID\", resp.deployments[0].deploymentID)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"access_saml_next_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"access_saml_next_policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deployments\": [\n    {\n      \"parameters\": {\n        \"pools\": [\n          {\n            \"poolName\": \"pool_{{app_name}}\",\n            \"poolMembers\": [\n              {\n                \"address\": \"{{example_web}}\",\n                \"name\": \"poolmember1\"\n              }\n            ]\n          }\n        ],\n        \"virtuals\": [\n          {\n            \"virtualAddress\": \"10.1.10.221\",\n            \"virtualName\": \"vs_{{app_name}}\"\n          }\n        ]\n      },\n      \"target\": {\n        \"address\": \"{{bigip_next_3_address}}\"\n      },\n      \"allow_overwrite\": true\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Access Sessions-All",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/access-sessions",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"access-sessions"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Policies GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {},
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "bigip_next_1_name",
			"value": "big-ip-next-01"
		},
		{
			"key": "bigip_next_2_name",
			"value": "big-ip-next-02"
		},
		{
			"key": "bigip_next_ha_name",
			"value": "big-ip-next-ha"
		},
		{
			"key": "domain_name",
			"value": "f5demo.com"
		},
		{
			"key": "bigip_next_1_mgmt_ip",
			"value": "10.1.1.7"
		},
		{
			"key": "bigip_next_2_mgmt_ip",
			"value": "10.1.1.8"
		},
		{
			"key": "bigip_next_mgmt_floating_ip",
			"value": "10.1.1.9"
		},
		{
			"key": "bigip_next_mgmt_target_ip",
			"value": "10.1.1.10",
			"type": "string"
		},
		{
			"key": "bigip_next_mgmt_port",
			"value": "5443"
		},
		{
			"key": "bigip_next_admin_user",
			"value": "admin-cm"
		},
		{
			"key": "bigip_next_admin_password",
			"value": "Welcome1234567!"
		},
		{
			"key": "bigip_next_cm_mgmt_ip",
			"value": "10.1.1.5"
		},
		{
			"key": "bigip_next_cm_admin_user",
			"value": "cm-admin"
		},
		{
			"key": "bigip_next_cm_admin_password",
			"value": "Welcome1234567!"
		},
		{
			"key": "bigip_next_admin_user_cm",
			"value": "admin-cm"
		},
		{
			"key": "dns_server_1",
			"value": "10.1.1.6"
		},
		{
			"key": "dns_server_2",
			"value": "8.8.4.4"
		},
		{
			"key": "vip1",
			"value": "10.1.10.110"
		},
		{
			"key": "vip_port1",
			"value": "80"
		},
		{
			"key": "vip2",
			"value": "10.1.10.111"
		},
		{
			"key": "vip_port2",
			"value": "443"
		},
		{
			"key": "vip3",
			"value": "10.1.10.112"
		},
		{
			"key": "vip_port3",
			"value": "443"
		},
		{
			"key": "app_server1_ip",
			"value": "10.1.20.100"
		},
		{
			"key": "app_server2_ip",
			"value": "10.1.20.101"
		},
		{
			"key": "app_server_port",
			"value": "8080"
		},
		{
			"key": "psp_name_1",
			"value": ""
		},
		{
			"key": "resp_policy_id_1",
			"value": ""
		},
		{
			"key": "resp_policy_name_1",
			"value": ""
		},
		{
			"key": "prp_name_1",
			"value": ""
		},
		{
			"key": "bigip_next_platform_type",
			"value": "",
			"type": "default"
		},
		{
			"key": "dns_resolver_id",
			"value": ""
		},
		{
			"key": "name_server",
			"value": "10.1.1.6:53",
			"type": "string"
		},
		{
			"key": "example_web",
			"value": "10.1.20.6",
			"type": "string"
		},
		{
			"key": "example_web_port",
			"value": "80",
			"type": "string"
		},
		{
			"key": "services_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_okta_signed_EntityID",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_okta_signed_SSOURI",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_okta_signed_SPURI",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_okta_signed_SPEntityID",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_okta_unsigned_entityID",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_okta_unsigned_SSOURI",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_okta_unsigned_Service_URI",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_okta_unsigned_Service_EntityID",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_azure_signed_EntityID",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_azure_signed_SSOURI",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_azure_Service_URI",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_azure_Service_EntityID",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_okta_signed.examepl.com-cert",
			"value": ""
		},
		{
			"key": "access_azure_cert",
			"value": "access_azure_cert"
		},
		{
			"key": "access_azure_signed_vip",
			"value": "10.1.10.100",
			"type": "default"
		},
		{
			"key": "access_okta_unsigned_vip",
			"value": "10.1.10.104",
			"type": "default"
		},
		{
			"key": "access_okta_signed_vip",
			"value": "10.1.10.101",
			"type": "default"
		},
		{
			"key": "access_okta_unsigned_policy",
			"value": ""
		},
		{
			"key": "access_azure_signed_policy",
			"value": ""
		},
		{
			"key": "access_kdc_realm",
			"value": "F5ACCESS.ONMICROSOFT.COM",
			"type": "string"
		},
		{
			"key": "access_delegation_account_name",
			"value": "host/apm-deleg.f5access.onmicrosoft.com",
			"type": "string"
		},
		{
			"key": "access_delegation_account_pwd",
			"value": "F5twister$",
			"type": "string"
		},
		{
			"key": "access_SPN_Pattern",
			"value": "HTTP/%h@F5ACCESS.ONMICROSOFT.COM",
			"type": "string"
		},
		{
			"key": "allow_vip",
			"value": "10.1.10.112",
			"type": "string"
		},
		{
			"key": "allow_login_vip",
			"value": "10.1.10.113",
			"type": "string"
		},
		{
			"key": "deny_vip",
			"value": "10.1.10.114",
			"type": "string"
		},
		{
			"key": "bigip_next_1_token",
			"value": ""
		},
		{
			"key": "access_allow_policy",
			"value": ""
		},
		{
			"key": "access_logon_allow_policy",
			"value": ""
		},
		{
			"key": "access_deny_policy",
			"value": ""
		},
		{
			"key": "access_okta_signed_policy",
			"value": ""
		},
		{
			"key": "mbiq_token",
			"value": ""
		},
		{
			"key": "psp_policy_name",
			"value": ""
		},
		{
			"key": "mbiq_policy_id",
			"value": ""
		},
		{
			"key": "mbiq_policy_name",
			"value": ""
		},
		{
			"key": "fast_path",
			"value": ""
		},
		{
			"key": "bigip_next_3_address",
			"value": "10.1.1.10",
			"type": "default"
		},
		{
			"key": "bigip_next_3_hostname",
			"value": "big-ip-next-03.f5demo.com",
			"type": "default"
		},
		{
			"key": "okta_client_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "okta_client_secret",
			"value": "",
			"type": "string"
		},
		{
			"key": "bigip_next_cm_token",
			"value": ""
		},
		{
			"key": "oauth_client_VIP",
			"value": "10.1.10.210",
			"type": "string"
		},
		{
			"key": "oauth_client_policy",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "app_name",
			"value": ""
		},
		{
			"key": "appsvc-id",
			"value": ""
		},
		{
			"key": "traffic_ssl_cert",
			"value": "self_demo.f5.com",
			"type": "string"
		},
		{
			"key": "access_OAuth_Client_vip",
			"value": "10.1.10.105",
			"type": "string"
		},
		{
			"value": "",
			"type": "string"
		},
		{
			"key": "deploymentID",
			"value": ""
		},
		{
			"key": "epsecId",
			"value": "",
			"type": "string"
		},
		{
			"key": "vpnId",
			"value": "",
			"type": "string"
		},
		{
			"key": "1513a61d-8758-499c-b18c-41cbb45f1a51",
			"value": ""
		},
		{
			"key": "IdPEntityID",
			"value": "https://idp.example.com",
			"type": "string"
		},
		{
			"key": "SPEntityID",
			"value": "https://sp.example.com",
			"type": "string"
		},
		{
			"key": "access_OAuth_Client2_vip",
			"value": "10.1.10.123",
			"type": "string"
		}
	]
}
